Grammar:

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
Rule 2     set_global -> <empty>
Rule 3     programa2 -> empty
Rule 4     programa2 -> vars
Rule 5     programa3 -> empty
Rule 6     programa3 -> funcion programa3
Rule 7     vars -> VAR var1
Rule 8     var1 -> tipo set_type ids ; var2
Rule 9     set_type -> <empty>
Rule 10    var2 -> empty
Rule 11    var2 -> var1
Rule 12    ids -> identificadores ids2
Rule 13    ids2 -> empty
Rule 14    ids2 -> , ids
Rule 15    funcion -> FUNCTION funcion2 ID save_id parametros vars bloque
Rule 16    save_id -> <empty>
Rule 17    funcion2 -> VOID
Rule 18    funcion2 -> tipo
Rule 19    parametros -> ( parametros2 )
Rule 20    parametros2 -> tipo ID parametros3
Rule 21    parametros3 -> empty
Rule 22    parametros3 -> , parametros2
Rule 23    bloque -> { bloque2 }
Rule 24    bloque2 -> empty
Rule 25    bloque2 -> estatuto bloque2
Rule 26    estatuto -> regresa
Rule 27    estatuto -> estRepCond
Rule 28    estatuto -> estRepNoCond
Rule 29    estatuto -> estDesicion
Rule 30    estatuto -> lee
Rule 31    estatuto -> escritura
Rule 32    estatuto -> asignacion
Rule 33    asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ;
Rule 34    asignacion_insert_var -> <empty>
Rule 35    asignacion_pop_all -> <empty>
Rule 36    lee -> PRINT ( lee2 ) ;
Rule 37    lee2 -> identificadores lee3
Rule 38    lee3 -> empty
Rule 39    lee3 -> , lee2
Rule 40    escritura -> WRITE ( escritura2 ) ;
Rule 41    escritura2 -> STRING escritura3
Rule 42    escritura2 -> exp escritura3
Rule 43    escritura3 -> empty
Rule 44    escritura3 -> , escritura2
Rule 45    regresa -> RETURN ( exp ) ;
Rule 46    estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF
Rule 47    if_gotF -> <empty>
Rule 48    if_fill_gotF -> <empty>
Rule 49    estDesicion2 -> empty
Rule 50    estDesicion2 -> ELSE if_goto bloque
Rule 51    if_goto -> <empty>
Rule 52    estRepCond -> WHILE ( expOR ) DO bloque
Rule 53    estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque
Rule 54    identificadores -> ID identificadores2
Rule 55    identificadores2 -> empty
Rule 56    identificadores2 -> [ exp ] identificadores3
Rule 57    identificadores3 -> empty
Rule 58    identificadores3 -> [ exp ]
Rule 59    tipo -> FLOAT
Rule 60    tipo -> CHAR
Rule 61    tipo -> INT
Rule 62    expOR -> expAND expOR2
Rule 63    expOR2 -> empty
Rule 64    expOR2 -> OR expOR
Rule 65    expAND -> expresion expAND2
Rule 66    expAND2 -> empty
Rule 67    expAND2 -> AND expAND
Rule 68    expresion -> exp expresion2 quad_expresion
Rule 69    quad_expresion -> <empty>
Rule 70    expresion2 -> empty
Rule 71    expresion2 -> NE push_bool_op exp
Rule 72    expresion2 -> EGT push_bool_op exp
Rule 73    expresion2 -> ELT push_bool_op exp
Rule 74    expresion2 -> EQ push_bool_op exp
Rule 75    expresion2 -> GT push_bool_op exp
Rule 76    expresion2 -> LT push_bool_op exp
Rule 77    push_bool_op -> <empty>
Rule 78    exp -> termino exp2
Rule 79    exp2 -> empty
Rule 80    exp2 -> MINUS exp_op_insert exp  [precedence=left, level=1]
Rule 81    exp2 -> PLUS exp_op_insert exp  [precedence=left, level=1]
Rule 82    exp_op_insert -> <empty>
Rule 83    factor -> varcte
Rule 84    factor -> MINUS varcte  [precedence=left, level=1]
Rule 85    factor -> PLUS varcte  [precedence=left, level=1]
Rule 86    factor -> ( exp_par_start exp ) exp_par_end
Rule 87    exp_par_start -> <empty>
Rule 88    exp_par_end -> <empty>
Rule 89    opmat -> factor opmat2
Rule 90    opmat2 -> empty
Rule 91    opmat2 -> DETERMINANT
Rule 92    opmat2 -> INVERSE
Rule 93    opmat2 -> TRANSPOSE
Rule 94    termino -> opmat termino2
Rule 95    termino2 -> empty
Rule 96    termino2 -> DIVIDE term_op_insert termino
Rule 97    termino2 -> TIMES term_op_insert termino
Rule 98    term_op_insert -> <empty>
Rule 99    llamada -> ID ( llamada2 )
Rule 100   llamada2 -> exp llamada3
Rule 101   llamada3 -> empty
Rule 102   llamada3 -> , llamada2
Rule 103   varcte -> llamada
Rule 104   varcte -> FLOATNUMBER
Rule 105   varcte -> CHARACTER
Rule 106   varcte -> INTNUMBER
Rule 107   varcte -> identificadores
Rule 108   empty -> <empty>

Terminals, with rules where they appear:

(                    : 1 19 36 40 45 46 52 86 99
)                    : 1 19 36 40 45 46 52 86 99
,                    : 14 22 39 44 102
;                    : 1 8 33 36 40 45
AND                  : 67
ASSIGN               : 33 53
CHAR                 : 60
CHARACTER            : 105
DETERMINANT          : 91
DIVIDE               : 96
DO                   : 52
DO2                  : 53
EGT                  : 72
ELSE                 : 50
ELT                  : 73
EQ                   : 74
FLOAT                : 59
FLOATNUMBER          : 104
FROM                 : 53
FUNCTION             : 15
GT                   : 75
ID                   : 1 15 20 54 99
IF                   : 46
INT                  : 61
INTNUMBER            : 106
INVERSE              : 92
LT                   : 76
MINUS                : 80 84
NE                   : 71
OR                   : 64
PLUS                 : 81 85
PRINCIPAL            : 1
PRINT                : 36
PROGRAM              : 1
RETURN               : 45
STRING               : 41
TIMES                : 97
TO                   : 53
TRANSPOSE            : 93
VAR                  : 7
VOID                 : 17
WHILE                : 52
WRITE                : 40
[                    : 56 58
]                    : 56 58
error                : 
{                    : 23
}                    : 23

Nonterminals, with rules where they appear:

asignacion           : 32
asignacion_insert_var : 33
asignacion_pop_all   : 33
bloque               : 1 15 46 50 52 53
bloque2              : 23 25
empty                : 3 5 10 13 21 24 38 43 49 55 57 63 66 70 79 90 95 101
escritura            : 31
escritura2           : 40 44
escritura3           : 41 42
estDesicion          : 29
estDesicion2         : 46
estRepCond           : 27
estRepNoCond         : 28
estatuto             : 25
exp                  : 33 42 45 53 53 56 58 68 71 72 73 74 75 76 80 81 86 100
exp2                 : 78
expAND               : 62 67
expAND2              : 65
expOR                : 46 52 64
expOR2               : 62
exp_op_insert        : 80 81
exp_par_end          : 86
exp_par_start        : 86
expresion            : 65
expresion2           : 68
factor               : 89
funcion              : 6
funcion2             : 15
identificadores      : 12 33 37 53 107
identificadores2     : 54
identificadores3     : 56
ids                  : 8 14
ids2                 : 12
if_fill_gotF         : 46
if_gotF              : 46
if_goto              : 50
lee                  : 30
lee2                 : 36 39
lee3                 : 37
llamada              : 103
llamada2             : 99 102
llamada3             : 100
opmat                : 94
opmat2               : 89
parametros           : 15
parametros2          : 19 22
parametros3          : 20
programa             : 0
programa2            : 1
programa3            : 1 6
push_bool_op         : 71 72 73 74 75 76
quad_expresion       : 68
regresa              : 26
save_id              : 15
set_global           : 1
set_type             : 8
term_op_insert       : 96 97
termino              : 78 96 97
termino2             : 94
tipo                 : 8 18 20
var1                 : 7 11
var2                 : 8
varcte               : 83 84 85
vars                 : 4 15


state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .


state 2

    (1) programa -> PROGRAM . ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    (2) set_global -> .
    ;               reduce using rule 2 (set_global -> .)

    set_global                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID set_global . ; programa2 programa3 PRINCIPAL ( ) bloque
    ;               shift and go to state 5


state 5

    (1) programa -> PROGRAM ID set_global ; . programa2 programa3 PRINCIPAL ( ) bloque
    (3) programa2 -> . empty
    (4) programa2 -> . vars
    (108) empty -> .
    (7) vars -> . VAR var1
    FUNCTION        reduce using rule 108 (empty -> .)
    PRINCIPAL       reduce using rule 108 (empty -> .)
    VAR             shift and go to state 9

    programa2                      shift and go to state 6
    empty                          shift and go to state 7
    vars                           shift and go to state 8

state 6

    (1) programa -> PROGRAM ID set_global ; programa2 . programa3 PRINCIPAL ( ) bloque
    (5) programa3 -> . empty
    (6) programa3 -> . funcion programa3
    (108) empty -> .
    (15) funcion -> . FUNCTION funcion2 ID save_id parametros vars bloque
    PRINCIPAL       reduce using rule 108 (empty -> .)
    FUNCTION        shift and go to state 13

    programa3                      shift and go to state 10
    empty                          shift and go to state 11
    funcion                        shift and go to state 12

state 7

    (3) programa2 -> empty .
    FUNCTION        reduce using rule 3 (programa2 -> empty .)
    PRINCIPAL       reduce using rule 3 (programa2 -> empty .)


state 8

    (4) programa2 -> vars .
    FUNCTION        reduce using rule 4 (programa2 -> vars .)
    PRINCIPAL       reduce using rule 4 (programa2 -> vars .)


state 9

    (7) vars -> VAR . var1
    (8) var1 -> . tipo set_type ids ; var2
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (61) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    var1                           shift and go to state 14
    tipo                           shift and go to state 15

state 10

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 . PRINCIPAL ( ) bloque
    PRINCIPAL       shift and go to state 19


state 11

    (5) programa3 -> empty .
    PRINCIPAL       reduce using rule 5 (programa3 -> empty .)


state 12

    (6) programa3 -> funcion . programa3
    (5) programa3 -> . empty
    (6) programa3 -> . funcion programa3
    (108) empty -> .
    (15) funcion -> . FUNCTION funcion2 ID save_id parametros vars bloque
    PRINCIPAL       reduce using rule 108 (empty -> .)
    FUNCTION        shift and go to state 13

    funcion                        shift and go to state 12
    programa3                      shift and go to state 20
    empty                          shift and go to state 11

state 13

    (15) funcion -> FUNCTION . funcion2 ID save_id parametros vars bloque
    (17) funcion2 -> . VOID
    (18) funcion2 -> . tipo
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (61) tipo -> . INT
    VOID            shift and go to state 22
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    funcion2                       shift and go to state 21
    tipo                           shift and go to state 23

state 14

    (7) vars -> VAR var1 .
    FUNCTION        reduce using rule 7 (vars -> VAR var1 .)
    PRINCIPAL       reduce using rule 7 (vars -> VAR var1 .)
    {               reduce using rule 7 (vars -> VAR var1 .)


state 15

    (8) var1 -> tipo . set_type ids ; var2
    (9) set_type -> .
    ID              reduce using rule 9 (set_type -> .)

    set_type                       shift and go to state 24

state 16

    (59) tipo -> FLOAT .
    ID              reduce using rule 59 (tipo -> FLOAT .)


state 17

    (60) tipo -> CHAR .
    ID              reduce using rule 60 (tipo -> CHAR .)


state 18

    (61) tipo -> INT .
    ID              reduce using rule 61 (tipo -> INT .)


state 19

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL . ( ) bloque
    (               shift and go to state 25


state 20

    (6) programa3 -> funcion programa3 .
    PRINCIPAL       reduce using rule 6 (programa3 -> funcion programa3 .)


state 21

    (15) funcion -> FUNCTION funcion2 . ID save_id parametros vars bloque
    ID              shift and go to state 26


state 22

    (17) funcion2 -> VOID .
    ID              reduce using rule 17 (funcion2 -> VOID .)


state 23

    (18) funcion2 -> tipo .
    ID              reduce using rule 18 (funcion2 -> tipo .)


state 24

    (8) var1 -> tipo set_type . ids ; var2
    (12) ids -> . identificadores ids2
    (54) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    ids                            shift and go to state 27
    identificadores                shift and go to state 28

state 25

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( . ) bloque
    )               shift and go to state 30


state 26

    (15) funcion -> FUNCTION funcion2 ID . save_id parametros vars bloque
    (16) save_id -> .
    (               reduce using rule 16 (save_id -> .)

    save_id                        shift and go to state 31

state 27

    (8) var1 -> tipo set_type ids . ; var2
    ;               shift and go to state 32


state 28

    (12) ids -> identificadores . ids2
    (13) ids2 -> . empty
    (14) ids2 -> . , ids
    (108) empty -> .
    ,               shift and go to state 35
    ;               reduce using rule 108 (empty -> .)

    ids2                           shift and go to state 33
    empty                          shift and go to state 34

state 29

    (54) identificadores -> ID . identificadores2
    (55) identificadores2 -> . empty
    (56) identificadores2 -> . [ exp ] identificadores3
    (108) empty -> .
    [               shift and go to state 38
    ,               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    ASSIGN          reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    identificadores2               shift and go to state 36
    empty                          shift and go to state 37

state 30

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 39

state 31

    (15) funcion -> FUNCTION funcion2 ID save_id . parametros vars bloque
    (19) parametros -> . ( parametros2 )
    (               shift and go to state 42

    parametros                     shift and go to state 41

state 32

    (8) var1 -> tipo set_type ids ; . var2
    (10) var2 -> . empty
    (11) var2 -> . var1
    (108) empty -> .
    (8) var1 -> . tipo set_type ids ; var2
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (61) tipo -> . INT
    FUNCTION        reduce using rule 108 (empty -> .)
    PRINCIPAL       reduce using rule 108 (empty -> .)
    {               reduce using rule 108 (empty -> .)
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    tipo                           shift and go to state 15
    var2                           shift and go to state 43
    empty                          shift and go to state 44
    var1                           shift and go to state 45

state 33

    (12) ids -> identificadores ids2 .
    ;               reduce using rule 12 (ids -> identificadores ids2 .)


state 34

    (13) ids2 -> empty .
    ;               reduce using rule 13 (ids2 -> empty .)


state 35

    (14) ids2 -> , . ids
    (12) ids -> . identificadores ids2
    (54) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    ids                            shift and go to state 46
    identificadores                shift and go to state 28

state 36

    (54) identificadores -> ID identificadores2 .
    ,               reduce using rule 54 (identificadores -> ID identificadores2 .)
    ;               reduce using rule 54 (identificadores -> ID identificadores2 .)
    DETERMINANT     reduce using rule 54 (identificadores -> ID identificadores2 .)
    INVERSE         reduce using rule 54 (identificadores -> ID identificadores2 .)
    TRANSPOSE       reduce using rule 54 (identificadores -> ID identificadores2 .)
    DIVIDE          reduce using rule 54 (identificadores -> ID identificadores2 .)
    TIMES           reduce using rule 54 (identificadores -> ID identificadores2 .)
    MINUS           reduce using rule 54 (identificadores -> ID identificadores2 .)
    PLUS            reduce using rule 54 (identificadores -> ID identificadores2 .)
    ]               reduce using rule 54 (identificadores -> ID identificadores2 .)
    ASSIGN          reduce using rule 54 (identificadores -> ID identificadores2 .)
    )               reduce using rule 54 (identificadores -> ID identificadores2 .)
    NE              reduce using rule 54 (identificadores -> ID identificadores2 .)
    EGT             reduce using rule 54 (identificadores -> ID identificadores2 .)
    ELT             reduce using rule 54 (identificadores -> ID identificadores2 .)
    EQ              reduce using rule 54 (identificadores -> ID identificadores2 .)
    GT              reduce using rule 54 (identificadores -> ID identificadores2 .)
    LT              reduce using rule 54 (identificadores -> ID identificadores2 .)
    AND             reduce using rule 54 (identificadores -> ID identificadores2 .)
    OR              reduce using rule 54 (identificadores -> ID identificadores2 .)
    TO              reduce using rule 54 (identificadores -> ID identificadores2 .)
    DO2             reduce using rule 54 (identificadores -> ID identificadores2 .)


state 37

    (55) identificadores2 -> empty .
    ,               reduce using rule 55 (identificadores2 -> empty .)
    ;               reduce using rule 55 (identificadores2 -> empty .)
    ASSIGN          reduce using rule 55 (identificadores2 -> empty .)
    )               reduce using rule 55 (identificadores2 -> empty .)
    DETERMINANT     reduce using rule 55 (identificadores2 -> empty .)
    INVERSE         reduce using rule 55 (identificadores2 -> empty .)
    TRANSPOSE       reduce using rule 55 (identificadores2 -> empty .)
    DIVIDE          reduce using rule 55 (identificadores2 -> empty .)
    TIMES           reduce using rule 55 (identificadores2 -> empty .)
    MINUS           reduce using rule 55 (identificadores2 -> empty .)
    PLUS            reduce using rule 55 (identificadores2 -> empty .)
    ]               reduce using rule 55 (identificadores2 -> empty .)
    NE              reduce using rule 55 (identificadores2 -> empty .)
    EGT             reduce using rule 55 (identificadores2 -> empty .)
    ELT             reduce using rule 55 (identificadores2 -> empty .)
    EQ              reduce using rule 55 (identificadores2 -> empty .)
    GT              reduce using rule 55 (identificadores2 -> empty .)
    LT              reduce using rule 55 (identificadores2 -> empty .)
    AND             reduce using rule 55 (identificadores2 -> empty .)
    OR              reduce using rule 55 (identificadores2 -> empty .)
    TO              reduce using rule 55 (identificadores2 -> empty .)
    DO2             reduce using rule 55 (identificadores2 -> empty .)


state 38

    (56) identificadores2 -> [ . exp ] identificadores3
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 47
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 39

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque .
    $end            reduce using rule 1 (programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque .)


state 40

    (23) bloque -> { . bloque2 }
    (24) bloque2 -> . empty
    (25) bloque2 -> . estatuto bloque2
    (108) empty -> .
    (26) estatuto -> . regresa
    (27) estatuto -> . estRepCond
    (28) estatuto -> . estRepNoCond
    (29) estatuto -> . estDesicion
    (30) estatuto -> . lee
    (31) estatuto -> . escritura
    (32) estatuto -> . asignacion
    (45) regresa -> . RETURN ( exp ) ;
    (52) estRepCond -> . WHILE ( expOR ) DO bloque
    (53) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (46) estDesicion -> . IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF
    (36) lee -> . PRINT ( lee2 ) ;
    (40) escritura -> . WRITE ( escritura2 ) ;
    (33) asignacion -> . identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ;
    (54) identificadores -> . ID identificadores2
    }               reduce using rule 108 (empty -> .)
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72
    FROM            shift and go to state 73
    IF              shift and go to state 75
    PRINT           shift and go to state 76
    WRITE           shift and go to state 77
    ID              shift and go to state 29

    bloque2                        shift and go to state 61
    empty                          shift and go to state 62
    estatuto                       shift and go to state 63
    regresa                        shift and go to state 64
    estRepCond                     shift and go to state 65
    estRepNoCond                   shift and go to state 66
    estDesicion                    shift and go to state 67
    lee                            shift and go to state 68
    escritura                      shift and go to state 69
    asignacion                     shift and go to state 70
    identificadores                shift and go to state 74

state 41

    (15) funcion -> FUNCTION funcion2 ID save_id parametros . vars bloque
    (7) vars -> . VAR var1
    VAR             shift and go to state 9

    vars                           shift and go to state 78

state 42

    (19) parametros -> ( . parametros2 )
    (20) parametros2 -> . tipo ID parametros3
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (61) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    parametros2                    shift and go to state 79
    tipo                           shift and go to state 80

state 43

    (8) var1 -> tipo set_type ids ; var2 .
    FUNCTION        reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)
    PRINCIPAL       reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)
    {               reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)


state 44

    (10) var2 -> empty .
    FUNCTION        reduce using rule 10 (var2 -> empty .)
    PRINCIPAL       reduce using rule 10 (var2 -> empty .)
    {               reduce using rule 10 (var2 -> empty .)


state 45

    (11) var2 -> var1 .
    FUNCTION        reduce using rule 11 (var2 -> var1 .)
    PRINCIPAL       reduce using rule 11 (var2 -> var1 .)
    {               reduce using rule 11 (var2 -> var1 .)


state 46

    (14) ids2 -> , ids .
    ;               reduce using rule 14 (ids2 -> , ids .)


state 47

    (56) identificadores2 -> [ exp . ] identificadores3
    ]               shift and go to state 81


state 48

    (78) exp -> termino . exp2
    (79) exp2 -> . empty
    (80) exp2 -> . MINUS exp_op_insert exp
    (81) exp2 -> . PLUS exp_op_insert exp
    (108) empty -> .
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85
    ]               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ,               reduce using rule 108 (empty -> .)
    NE              reduce using rule 108 (empty -> .)
    EGT             reduce using rule 108 (empty -> .)
    ELT             reduce using rule 108 (empty -> .)
    EQ              reduce using rule 108 (empty -> .)
    GT              reduce using rule 108 (empty -> .)
    LT              reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    DO2             reduce using rule 108 (empty -> .)

    exp2                           shift and go to state 82
    empty                          shift and go to state 83

state 49

    (94) termino -> opmat . termino2
    (95) termino2 -> . empty
    (96) termino2 -> . DIVIDE term_op_insert termino
    (97) termino2 -> . TIMES term_op_insert termino
    (108) empty -> .
    DIVIDE          shift and go to state 88
    TIMES           shift and go to state 89
    MINUS           reduce using rule 108 (empty -> .)
    PLUS            reduce using rule 108 (empty -> .)
    ]               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ,               reduce using rule 108 (empty -> .)
    NE              reduce using rule 108 (empty -> .)
    EGT             reduce using rule 108 (empty -> .)
    ELT             reduce using rule 108 (empty -> .)
    EQ              reduce using rule 108 (empty -> .)
    GT              reduce using rule 108 (empty -> .)
    LT              reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    DO2             reduce using rule 108 (empty -> .)

    termino2                       shift and go to state 86
    empty                          shift and go to state 87

state 50

    (89) opmat -> factor . opmat2
    (90) opmat2 -> . empty
    (91) opmat2 -> . DETERMINANT
    (92) opmat2 -> . INVERSE
    (93) opmat2 -> . TRANSPOSE
    (108) empty -> .
    DETERMINANT     shift and go to state 92
    INVERSE         shift and go to state 93
    TRANSPOSE       shift and go to state 94
    DIVIDE          reduce using rule 108 (empty -> .)
    TIMES           reduce using rule 108 (empty -> .)
    MINUS           reduce using rule 108 (empty -> .)
    PLUS            reduce using rule 108 (empty -> .)
    ]               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ,               reduce using rule 108 (empty -> .)
    NE              reduce using rule 108 (empty -> .)
    EGT             reduce using rule 108 (empty -> .)
    ELT             reduce using rule 108 (empty -> .)
    EQ              reduce using rule 108 (empty -> .)
    GT              reduce using rule 108 (empty -> .)
    LT              reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    DO2             reduce using rule 108 (empty -> .)

    opmat2                         shift and go to state 90
    empty                          shift and go to state 91

state 51

    (83) factor -> varcte .
    DETERMINANT     reduce using rule 83 (factor -> varcte .)
    INVERSE         reduce using rule 83 (factor -> varcte .)
    TRANSPOSE       reduce using rule 83 (factor -> varcte .)
    DIVIDE          reduce using rule 83 (factor -> varcte .)
    TIMES           reduce using rule 83 (factor -> varcte .)
    MINUS           reduce using rule 83 (factor -> varcte .)
    PLUS            reduce using rule 83 (factor -> varcte .)
    ]               reduce using rule 83 (factor -> varcte .)
    )               reduce using rule 83 (factor -> varcte .)
    ,               reduce using rule 83 (factor -> varcte .)
    NE              reduce using rule 83 (factor -> varcte .)
    EGT             reduce using rule 83 (factor -> varcte .)
    ELT             reduce using rule 83 (factor -> varcte .)
    EQ              reduce using rule 83 (factor -> varcte .)
    GT              reduce using rule 83 (factor -> varcte .)
    LT              reduce using rule 83 (factor -> varcte .)
    AND             reduce using rule 83 (factor -> varcte .)
    OR              reduce using rule 83 (factor -> varcte .)
    TO              reduce using rule 83 (factor -> varcte .)
    ;               reduce using rule 83 (factor -> varcte .)
    DO2             reduce using rule 83 (factor -> varcte .)


state 52

    (84) factor -> MINUS . varcte
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    varcte                         shift and go to state 95
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 53

    (85) factor -> PLUS . varcte
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    varcte                         shift and go to state 96
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 54

    (86) factor -> ( . exp_par_start exp ) exp_par_end
    (87) exp_par_start -> .
    MINUS           reduce using rule 87 (exp_par_start -> .)
    PLUS            reduce using rule 87 (exp_par_start -> .)
    (               reduce using rule 87 (exp_par_start -> .)
    FLOATNUMBER     reduce using rule 87 (exp_par_start -> .)
    CHARACTER       reduce using rule 87 (exp_par_start -> .)
    INTNUMBER       reduce using rule 87 (exp_par_start -> .)
    ID              reduce using rule 87 (exp_par_start -> .)

    exp_par_start                  shift and go to state 97

state 55

    (103) varcte -> llamada .
    DETERMINANT     reduce using rule 103 (varcte -> llamada .)
    INVERSE         reduce using rule 103 (varcte -> llamada .)
    TRANSPOSE       reduce using rule 103 (varcte -> llamada .)
    DIVIDE          reduce using rule 103 (varcte -> llamada .)
    TIMES           reduce using rule 103 (varcte -> llamada .)
    MINUS           reduce using rule 103 (varcte -> llamada .)
    PLUS            reduce using rule 103 (varcte -> llamada .)
    ]               reduce using rule 103 (varcte -> llamada .)
    )               reduce using rule 103 (varcte -> llamada .)
    ,               reduce using rule 103 (varcte -> llamada .)
    NE              reduce using rule 103 (varcte -> llamada .)
    EGT             reduce using rule 103 (varcte -> llamada .)
    ELT             reduce using rule 103 (varcte -> llamada .)
    EQ              reduce using rule 103 (varcte -> llamada .)
    GT              reduce using rule 103 (varcte -> llamada .)
    LT              reduce using rule 103 (varcte -> llamada .)
    AND             reduce using rule 103 (varcte -> llamada .)
    OR              reduce using rule 103 (varcte -> llamada .)
    TO              reduce using rule 103 (varcte -> llamada .)
    ;               reduce using rule 103 (varcte -> llamada .)
    DO2             reduce using rule 103 (varcte -> llamada .)


state 56

    (104) varcte -> FLOATNUMBER .
    DETERMINANT     reduce using rule 104 (varcte -> FLOATNUMBER .)
    INVERSE         reduce using rule 104 (varcte -> FLOATNUMBER .)
    TRANSPOSE       reduce using rule 104 (varcte -> FLOATNUMBER .)
    DIVIDE          reduce using rule 104 (varcte -> FLOATNUMBER .)
    TIMES           reduce using rule 104 (varcte -> FLOATNUMBER .)
    MINUS           reduce using rule 104 (varcte -> FLOATNUMBER .)
    PLUS            reduce using rule 104 (varcte -> FLOATNUMBER .)
    ]               reduce using rule 104 (varcte -> FLOATNUMBER .)
    )               reduce using rule 104 (varcte -> FLOATNUMBER .)
    ,               reduce using rule 104 (varcte -> FLOATNUMBER .)
    NE              reduce using rule 104 (varcte -> FLOATNUMBER .)
    EGT             reduce using rule 104 (varcte -> FLOATNUMBER .)
    ELT             reduce using rule 104 (varcte -> FLOATNUMBER .)
    EQ              reduce using rule 104 (varcte -> FLOATNUMBER .)
    GT              reduce using rule 104 (varcte -> FLOATNUMBER .)
    LT              reduce using rule 104 (varcte -> FLOATNUMBER .)
    AND             reduce using rule 104 (varcte -> FLOATNUMBER .)
    OR              reduce using rule 104 (varcte -> FLOATNUMBER .)
    TO              reduce using rule 104 (varcte -> FLOATNUMBER .)
    ;               reduce using rule 104 (varcte -> FLOATNUMBER .)
    DO2             reduce using rule 104 (varcte -> FLOATNUMBER .)


state 57

    (105) varcte -> CHARACTER .
    DETERMINANT     reduce using rule 105 (varcte -> CHARACTER .)
    INVERSE         reduce using rule 105 (varcte -> CHARACTER .)
    TRANSPOSE       reduce using rule 105 (varcte -> CHARACTER .)
    DIVIDE          reduce using rule 105 (varcte -> CHARACTER .)
    TIMES           reduce using rule 105 (varcte -> CHARACTER .)
    MINUS           reduce using rule 105 (varcte -> CHARACTER .)
    PLUS            reduce using rule 105 (varcte -> CHARACTER .)
    ]               reduce using rule 105 (varcte -> CHARACTER .)
    )               reduce using rule 105 (varcte -> CHARACTER .)
    ,               reduce using rule 105 (varcte -> CHARACTER .)
    NE              reduce using rule 105 (varcte -> CHARACTER .)
    EGT             reduce using rule 105 (varcte -> CHARACTER .)
    ELT             reduce using rule 105 (varcte -> CHARACTER .)
    EQ              reduce using rule 105 (varcte -> CHARACTER .)
    GT              reduce using rule 105 (varcte -> CHARACTER .)
    LT              reduce using rule 105 (varcte -> CHARACTER .)
    AND             reduce using rule 105 (varcte -> CHARACTER .)
    OR              reduce using rule 105 (varcte -> CHARACTER .)
    TO              reduce using rule 105 (varcte -> CHARACTER .)
    ;               reduce using rule 105 (varcte -> CHARACTER .)
    DO2             reduce using rule 105 (varcte -> CHARACTER .)


state 58

    (106) varcte -> INTNUMBER .
    DETERMINANT     reduce using rule 106 (varcte -> INTNUMBER .)
    INVERSE         reduce using rule 106 (varcte -> INTNUMBER .)
    TRANSPOSE       reduce using rule 106 (varcte -> INTNUMBER .)
    DIVIDE          reduce using rule 106 (varcte -> INTNUMBER .)
    TIMES           reduce using rule 106 (varcte -> INTNUMBER .)
    MINUS           reduce using rule 106 (varcte -> INTNUMBER .)
    PLUS            reduce using rule 106 (varcte -> INTNUMBER .)
    ]               reduce using rule 106 (varcte -> INTNUMBER .)
    )               reduce using rule 106 (varcte -> INTNUMBER .)
    ,               reduce using rule 106 (varcte -> INTNUMBER .)
    NE              reduce using rule 106 (varcte -> INTNUMBER .)
    EGT             reduce using rule 106 (varcte -> INTNUMBER .)
    ELT             reduce using rule 106 (varcte -> INTNUMBER .)
    EQ              reduce using rule 106 (varcte -> INTNUMBER .)
    GT              reduce using rule 106 (varcte -> INTNUMBER .)
    LT              reduce using rule 106 (varcte -> INTNUMBER .)
    AND             reduce using rule 106 (varcte -> INTNUMBER .)
    OR              reduce using rule 106 (varcte -> INTNUMBER .)
    TO              reduce using rule 106 (varcte -> INTNUMBER .)
    ;               reduce using rule 106 (varcte -> INTNUMBER .)
    DO2             reduce using rule 106 (varcte -> INTNUMBER .)


state 59

    (107) varcte -> identificadores .
    DETERMINANT     reduce using rule 107 (varcte -> identificadores .)
    INVERSE         reduce using rule 107 (varcte -> identificadores .)
    TRANSPOSE       reduce using rule 107 (varcte -> identificadores .)
    DIVIDE          reduce using rule 107 (varcte -> identificadores .)
    TIMES           reduce using rule 107 (varcte -> identificadores .)
    MINUS           reduce using rule 107 (varcte -> identificadores .)
    PLUS            reduce using rule 107 (varcte -> identificadores .)
    ]               reduce using rule 107 (varcte -> identificadores .)
    )               reduce using rule 107 (varcte -> identificadores .)
    ,               reduce using rule 107 (varcte -> identificadores .)
    NE              reduce using rule 107 (varcte -> identificadores .)
    EGT             reduce using rule 107 (varcte -> identificadores .)
    ELT             reduce using rule 107 (varcte -> identificadores .)
    EQ              reduce using rule 107 (varcte -> identificadores .)
    GT              reduce using rule 107 (varcte -> identificadores .)
    LT              reduce using rule 107 (varcte -> identificadores .)
    AND             reduce using rule 107 (varcte -> identificadores .)
    OR              reduce using rule 107 (varcte -> identificadores .)
    TO              reduce using rule 107 (varcte -> identificadores .)
    ;               reduce using rule 107 (varcte -> identificadores .)
    DO2             reduce using rule 107 (varcte -> identificadores .)


state 60

    (99) llamada -> ID . ( llamada2 )
    (54) identificadores -> ID . identificadores2
    (55) identificadores2 -> . empty
    (56) identificadores2 -> . [ exp ] identificadores3
    (108) empty -> .
    (               shift and go to state 98
    [               shift and go to state 38
    DETERMINANT     reduce using rule 108 (empty -> .)
    INVERSE         reduce using rule 108 (empty -> .)
    TRANSPOSE       reduce using rule 108 (empty -> .)
    DIVIDE          reduce using rule 108 (empty -> .)
    TIMES           reduce using rule 108 (empty -> .)
    MINUS           reduce using rule 108 (empty -> .)
    PLUS            reduce using rule 108 (empty -> .)
    ]               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ,               reduce using rule 108 (empty -> .)
    NE              reduce using rule 108 (empty -> .)
    EGT             reduce using rule 108 (empty -> .)
    ELT             reduce using rule 108 (empty -> .)
    EQ              reduce using rule 108 (empty -> .)
    GT              reduce using rule 108 (empty -> .)
    LT              reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    DO2             reduce using rule 108 (empty -> .)

    identificadores2               shift and go to state 36
    empty                          shift and go to state 37

state 61

    (23) bloque -> { bloque2 . }
    }               shift and go to state 99


state 62

    (24) bloque2 -> empty .
    }               reduce using rule 24 (bloque2 -> empty .)


state 63

    (25) bloque2 -> estatuto . bloque2
    (24) bloque2 -> . empty
    (25) bloque2 -> . estatuto bloque2
    (108) empty -> .
    (26) estatuto -> . regresa
    (27) estatuto -> . estRepCond
    (28) estatuto -> . estRepNoCond
    (29) estatuto -> . estDesicion
    (30) estatuto -> . lee
    (31) estatuto -> . escritura
    (32) estatuto -> . asignacion
    (45) regresa -> . RETURN ( exp ) ;
    (52) estRepCond -> . WHILE ( expOR ) DO bloque
    (53) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (46) estDesicion -> . IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF
    (36) lee -> . PRINT ( lee2 ) ;
    (40) escritura -> . WRITE ( escritura2 ) ;
    (33) asignacion -> . identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ;
    (54) identificadores -> . ID identificadores2
    }               reduce using rule 108 (empty -> .)
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72
    FROM            shift and go to state 73
    IF              shift and go to state 75
    PRINT           shift and go to state 76
    WRITE           shift and go to state 77
    ID              shift and go to state 29

    estatuto                       shift and go to state 63
    bloque2                        shift and go to state 100
    empty                          shift and go to state 62
    regresa                        shift and go to state 64
    estRepCond                     shift and go to state 65
    estRepNoCond                   shift and go to state 66
    estDesicion                    shift and go to state 67
    lee                            shift and go to state 68
    escritura                      shift and go to state 69
    asignacion                     shift and go to state 70
    identificadores                shift and go to state 74

state 64

    (26) estatuto -> regresa .
    RETURN          reduce using rule 26 (estatuto -> regresa .)
    WHILE           reduce using rule 26 (estatuto -> regresa .)
    FROM            reduce using rule 26 (estatuto -> regresa .)
    IF              reduce using rule 26 (estatuto -> regresa .)
    PRINT           reduce using rule 26 (estatuto -> regresa .)
    WRITE           reduce using rule 26 (estatuto -> regresa .)
    ID              reduce using rule 26 (estatuto -> regresa .)
    }               reduce using rule 26 (estatuto -> regresa .)


state 65

    (27) estatuto -> estRepCond .
    RETURN          reduce using rule 27 (estatuto -> estRepCond .)
    WHILE           reduce using rule 27 (estatuto -> estRepCond .)
    FROM            reduce using rule 27 (estatuto -> estRepCond .)
    IF              reduce using rule 27 (estatuto -> estRepCond .)
    PRINT           reduce using rule 27 (estatuto -> estRepCond .)
    WRITE           reduce using rule 27 (estatuto -> estRepCond .)
    ID              reduce using rule 27 (estatuto -> estRepCond .)
    }               reduce using rule 27 (estatuto -> estRepCond .)


state 66

    (28) estatuto -> estRepNoCond .
    RETURN          reduce using rule 28 (estatuto -> estRepNoCond .)
    WHILE           reduce using rule 28 (estatuto -> estRepNoCond .)
    FROM            reduce using rule 28 (estatuto -> estRepNoCond .)
    IF              reduce using rule 28 (estatuto -> estRepNoCond .)
    PRINT           reduce using rule 28 (estatuto -> estRepNoCond .)
    WRITE           reduce using rule 28 (estatuto -> estRepNoCond .)
    ID              reduce using rule 28 (estatuto -> estRepNoCond .)
    }               reduce using rule 28 (estatuto -> estRepNoCond .)


state 67

    (29) estatuto -> estDesicion .
    RETURN          reduce using rule 29 (estatuto -> estDesicion .)
    WHILE           reduce using rule 29 (estatuto -> estDesicion .)
    FROM            reduce using rule 29 (estatuto -> estDesicion .)
    IF              reduce using rule 29 (estatuto -> estDesicion .)
    PRINT           reduce using rule 29 (estatuto -> estDesicion .)
    WRITE           reduce using rule 29 (estatuto -> estDesicion .)
    ID              reduce using rule 29 (estatuto -> estDesicion .)
    }               reduce using rule 29 (estatuto -> estDesicion .)


state 68

    (30) estatuto -> lee .
    RETURN          reduce using rule 30 (estatuto -> lee .)
    WHILE           reduce using rule 30 (estatuto -> lee .)
    FROM            reduce using rule 30 (estatuto -> lee .)
    IF              reduce using rule 30 (estatuto -> lee .)
    PRINT           reduce using rule 30 (estatuto -> lee .)
    WRITE           reduce using rule 30 (estatuto -> lee .)
    ID              reduce using rule 30 (estatuto -> lee .)
    }               reduce using rule 30 (estatuto -> lee .)


state 69

    (31) estatuto -> escritura .
    RETURN          reduce using rule 31 (estatuto -> escritura .)
    WHILE           reduce using rule 31 (estatuto -> escritura .)
    FROM            reduce using rule 31 (estatuto -> escritura .)
    IF              reduce using rule 31 (estatuto -> escritura .)
    PRINT           reduce using rule 31 (estatuto -> escritura .)
    WRITE           reduce using rule 31 (estatuto -> escritura .)
    ID              reduce using rule 31 (estatuto -> escritura .)
    }               reduce using rule 31 (estatuto -> escritura .)


state 70

    (32) estatuto -> asignacion .
    RETURN          reduce using rule 32 (estatuto -> asignacion .)
    WHILE           reduce using rule 32 (estatuto -> asignacion .)
    FROM            reduce using rule 32 (estatuto -> asignacion .)
    IF              reduce using rule 32 (estatuto -> asignacion .)
    PRINT           reduce using rule 32 (estatuto -> asignacion .)
    WRITE           reduce using rule 32 (estatuto -> asignacion .)
    ID              reduce using rule 32 (estatuto -> asignacion .)
    }               reduce using rule 32 (estatuto -> asignacion .)


state 71

    (45) regresa -> RETURN . ( exp ) ;
    (               shift and go to state 101


state 72

    (52) estRepCond -> WHILE . ( expOR ) DO bloque
    (               shift and go to state 102


state 73

    (53) estRepNoCond -> FROM . identificadores ASSIGN exp TO exp DO2 bloque
    (54) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    identificadores                shift and go to state 103

state 74

    (33) asignacion -> identificadores . asignacion_insert_var ASSIGN exp asignacion_pop_all ;
    (34) asignacion_insert_var -> .
    ASSIGN          reduce using rule 34 (asignacion_insert_var -> .)

    asignacion_insert_var          shift and go to state 104

state 75

    (46) estDesicion -> IF . ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF
    (               shift and go to state 105


state 76

    (36) lee -> PRINT . ( lee2 ) ;
    (               shift and go to state 106


state 77

    (40) escritura -> WRITE . ( escritura2 ) ;
    (               shift and go to state 107


state 78

    (15) funcion -> FUNCTION funcion2 ID save_id parametros vars . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 108

state 79

    (19) parametros -> ( parametros2 . )
    )               shift and go to state 109


state 80

    (20) parametros2 -> tipo . ID parametros3
    ID              shift and go to state 110


state 81

    (56) identificadores2 -> [ exp ] . identificadores3
    (57) identificadores3 -> . empty
    (58) identificadores3 -> . [ exp ]
    (108) empty -> .
    [               shift and go to state 111
    ,               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    ASSIGN          reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    DETERMINANT     reduce using rule 108 (empty -> .)
    INVERSE         reduce using rule 108 (empty -> .)
    TRANSPOSE       reduce using rule 108 (empty -> .)
    DIVIDE          reduce using rule 108 (empty -> .)
    TIMES           reduce using rule 108 (empty -> .)
    MINUS           reduce using rule 108 (empty -> .)
    PLUS            reduce using rule 108 (empty -> .)
    ]               reduce using rule 108 (empty -> .)
    NE              reduce using rule 108 (empty -> .)
    EGT             reduce using rule 108 (empty -> .)
    ELT             reduce using rule 108 (empty -> .)
    EQ              reduce using rule 108 (empty -> .)
    GT              reduce using rule 108 (empty -> .)
    LT              reduce using rule 108 (empty -> .)
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    TO              reduce using rule 108 (empty -> .)
    DO2             reduce using rule 108 (empty -> .)

    identificadores3               shift and go to state 112
    empty                          shift and go to state 113

state 82

    (78) exp -> termino exp2 .
    ]               reduce using rule 78 (exp -> termino exp2 .)
    )               reduce using rule 78 (exp -> termino exp2 .)
    ,               reduce using rule 78 (exp -> termino exp2 .)
    NE              reduce using rule 78 (exp -> termino exp2 .)
    EGT             reduce using rule 78 (exp -> termino exp2 .)
    ELT             reduce using rule 78 (exp -> termino exp2 .)
    EQ              reduce using rule 78 (exp -> termino exp2 .)
    GT              reduce using rule 78 (exp -> termino exp2 .)
    LT              reduce using rule 78 (exp -> termino exp2 .)
    AND             reduce using rule 78 (exp -> termino exp2 .)
    OR              reduce using rule 78 (exp -> termino exp2 .)
    TO              reduce using rule 78 (exp -> termino exp2 .)
    ;               reduce using rule 78 (exp -> termino exp2 .)
    DO2             reduce using rule 78 (exp -> termino exp2 .)


state 83

    (79) exp2 -> empty .
    ]               reduce using rule 79 (exp2 -> empty .)
    )               reduce using rule 79 (exp2 -> empty .)
    ,               reduce using rule 79 (exp2 -> empty .)
    NE              reduce using rule 79 (exp2 -> empty .)
    EGT             reduce using rule 79 (exp2 -> empty .)
    ELT             reduce using rule 79 (exp2 -> empty .)
    EQ              reduce using rule 79 (exp2 -> empty .)
    GT              reduce using rule 79 (exp2 -> empty .)
    LT              reduce using rule 79 (exp2 -> empty .)
    AND             reduce using rule 79 (exp2 -> empty .)
    OR              reduce using rule 79 (exp2 -> empty .)
    TO              reduce using rule 79 (exp2 -> empty .)
    ;               reduce using rule 79 (exp2 -> empty .)
    DO2             reduce using rule 79 (exp2 -> empty .)


state 84

    (80) exp2 -> MINUS . exp_op_insert exp
    (82) exp_op_insert -> .
    MINUS           reduce using rule 82 (exp_op_insert -> .)
    PLUS            reduce using rule 82 (exp_op_insert -> .)
    (               reduce using rule 82 (exp_op_insert -> .)
    FLOATNUMBER     reduce using rule 82 (exp_op_insert -> .)
    CHARACTER       reduce using rule 82 (exp_op_insert -> .)
    INTNUMBER       reduce using rule 82 (exp_op_insert -> .)
    ID              reduce using rule 82 (exp_op_insert -> .)

    exp_op_insert                  shift and go to state 114

state 85

    (81) exp2 -> PLUS . exp_op_insert exp
    (82) exp_op_insert -> .
    MINUS           reduce using rule 82 (exp_op_insert -> .)
    PLUS            reduce using rule 82 (exp_op_insert -> .)
    (               reduce using rule 82 (exp_op_insert -> .)
    FLOATNUMBER     reduce using rule 82 (exp_op_insert -> .)
    CHARACTER       reduce using rule 82 (exp_op_insert -> .)
    INTNUMBER       reduce using rule 82 (exp_op_insert -> .)
    ID              reduce using rule 82 (exp_op_insert -> .)

    exp_op_insert                  shift and go to state 115

state 86

    (94) termino -> opmat termino2 .
    MINUS           reduce using rule 94 (termino -> opmat termino2 .)
    PLUS            reduce using rule 94 (termino -> opmat termino2 .)
    ]               reduce using rule 94 (termino -> opmat termino2 .)
    )               reduce using rule 94 (termino -> opmat termino2 .)
    ,               reduce using rule 94 (termino -> opmat termino2 .)
    NE              reduce using rule 94 (termino -> opmat termino2 .)
    EGT             reduce using rule 94 (termino -> opmat termino2 .)
    ELT             reduce using rule 94 (termino -> opmat termino2 .)
    EQ              reduce using rule 94 (termino -> opmat termino2 .)
    GT              reduce using rule 94 (termino -> opmat termino2 .)
    LT              reduce using rule 94 (termino -> opmat termino2 .)
    AND             reduce using rule 94 (termino -> opmat termino2 .)
    OR              reduce using rule 94 (termino -> opmat termino2 .)
    TO              reduce using rule 94 (termino -> opmat termino2 .)
    ;               reduce using rule 94 (termino -> opmat termino2 .)
    DO2             reduce using rule 94 (termino -> opmat termino2 .)


state 87

    (95) termino2 -> empty .
    MINUS           reduce using rule 95 (termino2 -> empty .)
    PLUS            reduce using rule 95 (termino2 -> empty .)
    ]               reduce using rule 95 (termino2 -> empty .)
    )               reduce using rule 95 (termino2 -> empty .)
    ,               reduce using rule 95 (termino2 -> empty .)
    NE              reduce using rule 95 (termino2 -> empty .)
    EGT             reduce using rule 95 (termino2 -> empty .)
    ELT             reduce using rule 95 (termino2 -> empty .)
    EQ              reduce using rule 95 (termino2 -> empty .)
    GT              reduce using rule 95 (termino2 -> empty .)
    LT              reduce using rule 95 (termino2 -> empty .)
    AND             reduce using rule 95 (termino2 -> empty .)
    OR              reduce using rule 95 (termino2 -> empty .)
    TO              reduce using rule 95 (termino2 -> empty .)
    ;               reduce using rule 95 (termino2 -> empty .)
    DO2             reduce using rule 95 (termino2 -> empty .)


state 88

    (96) termino2 -> DIVIDE . term_op_insert termino
    (98) term_op_insert -> .
    MINUS           reduce using rule 98 (term_op_insert -> .)
    PLUS            reduce using rule 98 (term_op_insert -> .)
    (               reduce using rule 98 (term_op_insert -> .)
    FLOATNUMBER     reduce using rule 98 (term_op_insert -> .)
    CHARACTER       reduce using rule 98 (term_op_insert -> .)
    INTNUMBER       reduce using rule 98 (term_op_insert -> .)
    ID              reduce using rule 98 (term_op_insert -> .)

    term_op_insert                 shift and go to state 116

state 89

    (97) termino2 -> TIMES . term_op_insert termino
    (98) term_op_insert -> .
    MINUS           reduce using rule 98 (term_op_insert -> .)
    PLUS            reduce using rule 98 (term_op_insert -> .)
    (               reduce using rule 98 (term_op_insert -> .)
    FLOATNUMBER     reduce using rule 98 (term_op_insert -> .)
    CHARACTER       reduce using rule 98 (term_op_insert -> .)
    INTNUMBER       reduce using rule 98 (term_op_insert -> .)
    ID              reduce using rule 98 (term_op_insert -> .)

    term_op_insert                 shift and go to state 117

state 90

    (89) opmat -> factor opmat2 .
    DIVIDE          reduce using rule 89 (opmat -> factor opmat2 .)
    TIMES           reduce using rule 89 (opmat -> factor opmat2 .)
    MINUS           reduce using rule 89 (opmat -> factor opmat2 .)
    PLUS            reduce using rule 89 (opmat -> factor opmat2 .)
    ]               reduce using rule 89 (opmat -> factor opmat2 .)
    )               reduce using rule 89 (opmat -> factor opmat2 .)
    ,               reduce using rule 89 (opmat -> factor opmat2 .)
    NE              reduce using rule 89 (opmat -> factor opmat2 .)
    EGT             reduce using rule 89 (opmat -> factor opmat2 .)
    ELT             reduce using rule 89 (opmat -> factor opmat2 .)
    EQ              reduce using rule 89 (opmat -> factor opmat2 .)
    GT              reduce using rule 89 (opmat -> factor opmat2 .)
    LT              reduce using rule 89 (opmat -> factor opmat2 .)
    AND             reduce using rule 89 (opmat -> factor opmat2 .)
    OR              reduce using rule 89 (opmat -> factor opmat2 .)
    TO              reduce using rule 89 (opmat -> factor opmat2 .)
    ;               reduce using rule 89 (opmat -> factor opmat2 .)
    DO2             reduce using rule 89 (opmat -> factor opmat2 .)


state 91

    (90) opmat2 -> empty .
    DIVIDE          reduce using rule 90 (opmat2 -> empty .)
    TIMES           reduce using rule 90 (opmat2 -> empty .)
    MINUS           reduce using rule 90 (opmat2 -> empty .)
    PLUS            reduce using rule 90 (opmat2 -> empty .)
    ]               reduce using rule 90 (opmat2 -> empty .)
    )               reduce using rule 90 (opmat2 -> empty .)
    ,               reduce using rule 90 (opmat2 -> empty .)
    NE              reduce using rule 90 (opmat2 -> empty .)
    EGT             reduce using rule 90 (opmat2 -> empty .)
    ELT             reduce using rule 90 (opmat2 -> empty .)
    EQ              reduce using rule 90 (opmat2 -> empty .)
    GT              reduce using rule 90 (opmat2 -> empty .)
    LT              reduce using rule 90 (opmat2 -> empty .)
    AND             reduce using rule 90 (opmat2 -> empty .)
    OR              reduce using rule 90 (opmat2 -> empty .)
    TO              reduce using rule 90 (opmat2 -> empty .)
    ;               reduce using rule 90 (opmat2 -> empty .)
    DO2             reduce using rule 90 (opmat2 -> empty .)


state 92

    (91) opmat2 -> DETERMINANT .
    DIVIDE          reduce using rule 91 (opmat2 -> DETERMINANT .)
    TIMES           reduce using rule 91 (opmat2 -> DETERMINANT .)
    MINUS           reduce using rule 91 (opmat2 -> DETERMINANT .)
    PLUS            reduce using rule 91 (opmat2 -> DETERMINANT .)
    ]               reduce using rule 91 (opmat2 -> DETERMINANT .)
    )               reduce using rule 91 (opmat2 -> DETERMINANT .)
    ,               reduce using rule 91 (opmat2 -> DETERMINANT .)
    NE              reduce using rule 91 (opmat2 -> DETERMINANT .)
    EGT             reduce using rule 91 (opmat2 -> DETERMINANT .)
    ELT             reduce using rule 91 (opmat2 -> DETERMINANT .)
    EQ              reduce using rule 91 (opmat2 -> DETERMINANT .)
    GT              reduce using rule 91 (opmat2 -> DETERMINANT .)
    LT              reduce using rule 91 (opmat2 -> DETERMINANT .)
    AND             reduce using rule 91 (opmat2 -> DETERMINANT .)
    OR              reduce using rule 91 (opmat2 -> DETERMINANT .)
    TO              reduce using rule 91 (opmat2 -> DETERMINANT .)
    ;               reduce using rule 91 (opmat2 -> DETERMINANT .)
    DO2             reduce using rule 91 (opmat2 -> DETERMINANT .)


state 93

    (92) opmat2 -> INVERSE .
    DIVIDE          reduce using rule 92 (opmat2 -> INVERSE .)
    TIMES           reduce using rule 92 (opmat2 -> INVERSE .)
    MINUS           reduce using rule 92 (opmat2 -> INVERSE .)
    PLUS            reduce using rule 92 (opmat2 -> INVERSE .)
    ]               reduce using rule 92 (opmat2 -> INVERSE .)
    )               reduce using rule 92 (opmat2 -> INVERSE .)
    ,               reduce using rule 92 (opmat2 -> INVERSE .)
    NE              reduce using rule 92 (opmat2 -> INVERSE .)
    EGT             reduce using rule 92 (opmat2 -> INVERSE .)
    ELT             reduce using rule 92 (opmat2 -> INVERSE .)
    EQ              reduce using rule 92 (opmat2 -> INVERSE .)
    GT              reduce using rule 92 (opmat2 -> INVERSE .)
    LT              reduce using rule 92 (opmat2 -> INVERSE .)
    AND             reduce using rule 92 (opmat2 -> INVERSE .)
    OR              reduce using rule 92 (opmat2 -> INVERSE .)
    TO              reduce using rule 92 (opmat2 -> INVERSE .)
    ;               reduce using rule 92 (opmat2 -> INVERSE .)
    DO2             reduce using rule 92 (opmat2 -> INVERSE .)


state 94

    (93) opmat2 -> TRANSPOSE .
    DIVIDE          reduce using rule 93 (opmat2 -> TRANSPOSE .)
    TIMES           reduce using rule 93 (opmat2 -> TRANSPOSE .)
    MINUS           reduce using rule 93 (opmat2 -> TRANSPOSE .)
    PLUS            reduce using rule 93 (opmat2 -> TRANSPOSE .)
    ]               reduce using rule 93 (opmat2 -> TRANSPOSE .)
    )               reduce using rule 93 (opmat2 -> TRANSPOSE .)
    ,               reduce using rule 93 (opmat2 -> TRANSPOSE .)
    NE              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    EGT             reduce using rule 93 (opmat2 -> TRANSPOSE .)
    ELT             reduce using rule 93 (opmat2 -> TRANSPOSE .)
    EQ              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    GT              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    LT              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    AND             reduce using rule 93 (opmat2 -> TRANSPOSE .)
    OR              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    TO              reduce using rule 93 (opmat2 -> TRANSPOSE .)
    ;               reduce using rule 93 (opmat2 -> TRANSPOSE .)
    DO2             reduce using rule 93 (opmat2 -> TRANSPOSE .)


state 95

    (84) factor -> MINUS varcte .
    DETERMINANT     reduce using rule 84 (factor -> MINUS varcte .)
    INVERSE         reduce using rule 84 (factor -> MINUS varcte .)
    TRANSPOSE       reduce using rule 84 (factor -> MINUS varcte .)
    DIVIDE          reduce using rule 84 (factor -> MINUS varcte .)
    TIMES           reduce using rule 84 (factor -> MINUS varcte .)
    MINUS           reduce using rule 84 (factor -> MINUS varcte .)
    PLUS            reduce using rule 84 (factor -> MINUS varcte .)
    ]               reduce using rule 84 (factor -> MINUS varcte .)
    )               reduce using rule 84 (factor -> MINUS varcte .)
    ,               reduce using rule 84 (factor -> MINUS varcte .)
    NE              reduce using rule 84 (factor -> MINUS varcte .)
    EGT             reduce using rule 84 (factor -> MINUS varcte .)
    ELT             reduce using rule 84 (factor -> MINUS varcte .)
    EQ              reduce using rule 84 (factor -> MINUS varcte .)
    GT              reduce using rule 84 (factor -> MINUS varcte .)
    LT              reduce using rule 84 (factor -> MINUS varcte .)
    AND             reduce using rule 84 (factor -> MINUS varcte .)
    OR              reduce using rule 84 (factor -> MINUS varcte .)
    TO              reduce using rule 84 (factor -> MINUS varcte .)
    ;               reduce using rule 84 (factor -> MINUS varcte .)
    DO2             reduce using rule 84 (factor -> MINUS varcte .)


state 96

    (85) factor -> PLUS varcte .
    DETERMINANT     reduce using rule 85 (factor -> PLUS varcte .)
    INVERSE         reduce using rule 85 (factor -> PLUS varcte .)
    TRANSPOSE       reduce using rule 85 (factor -> PLUS varcte .)
    DIVIDE          reduce using rule 85 (factor -> PLUS varcte .)
    TIMES           reduce using rule 85 (factor -> PLUS varcte .)
    MINUS           reduce using rule 85 (factor -> PLUS varcte .)
    PLUS            reduce using rule 85 (factor -> PLUS varcte .)
    ]               reduce using rule 85 (factor -> PLUS varcte .)
    )               reduce using rule 85 (factor -> PLUS varcte .)
    ,               reduce using rule 85 (factor -> PLUS varcte .)
    NE              reduce using rule 85 (factor -> PLUS varcte .)
    EGT             reduce using rule 85 (factor -> PLUS varcte .)
    ELT             reduce using rule 85 (factor -> PLUS varcte .)
    EQ              reduce using rule 85 (factor -> PLUS varcte .)
    GT              reduce using rule 85 (factor -> PLUS varcte .)
    LT              reduce using rule 85 (factor -> PLUS varcte .)
    AND             reduce using rule 85 (factor -> PLUS varcte .)
    OR              reduce using rule 85 (factor -> PLUS varcte .)
    TO              reduce using rule 85 (factor -> PLUS varcte .)
    ;               reduce using rule 85 (factor -> PLUS varcte .)
    DO2             reduce using rule 85 (factor -> PLUS varcte .)


state 97

    (86) factor -> ( exp_par_start . exp ) exp_par_end
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 118
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 98

    (99) llamada -> ID ( . llamada2 )
    (100) llamada2 -> . exp llamada3
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    llamada2                       shift and go to state 119
    exp                            shift and go to state 120
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 99

    (23) bloque -> { bloque2 } .
    $end            reduce using rule 23 (bloque -> { bloque2 } .)
    FUNCTION        reduce using rule 23 (bloque -> { bloque2 } .)
    PRINCIPAL       reduce using rule 23 (bloque -> { bloque2 } .)
    RETURN          reduce using rule 23 (bloque -> { bloque2 } .)
    WHILE           reduce using rule 23 (bloque -> { bloque2 } .)
    FROM            reduce using rule 23 (bloque -> { bloque2 } .)
    IF              reduce using rule 23 (bloque -> { bloque2 } .)
    PRINT           reduce using rule 23 (bloque -> { bloque2 } .)
    WRITE           reduce using rule 23 (bloque -> { bloque2 } .)
    ID              reduce using rule 23 (bloque -> { bloque2 } .)
    }               reduce using rule 23 (bloque -> { bloque2 } .)
    ELSE            reduce using rule 23 (bloque -> { bloque2 } .)


state 100

    (25) bloque2 -> estatuto bloque2 .
    }               reduce using rule 25 (bloque2 -> estatuto bloque2 .)


state 101

    (45) regresa -> RETURN ( . exp ) ;
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 121
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 102

    (52) estRepCond -> WHILE ( . expOR ) DO bloque
    (62) expOR -> . expAND expOR2
    (65) expAND -> . expresion expAND2
    (68) expresion -> . exp expresion2 quad_expresion
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 122
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 103

    (53) estRepNoCond -> FROM identificadores . ASSIGN exp TO exp DO2 bloque
    ASSIGN          shift and go to state 126


state 104

    (33) asignacion -> identificadores asignacion_insert_var . ASSIGN exp asignacion_pop_all ;
    ASSIGN          shift and go to state 127


state 105

    (46) estDesicion -> IF ( . expOR ) if_gotF bloque estDesicion2 if_fill_gotF
    (62) expOR -> . expAND expOR2
    (65) expAND -> . expresion expAND2
    (68) expresion -> . exp expresion2 quad_expresion
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 128
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 106

    (36) lee -> PRINT ( . lee2 ) ;
    (37) lee2 -> . identificadores lee3
    (54) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    lee2                           shift and go to state 129
    identificadores                shift and go to state 130

state 107

    (40) escritura -> WRITE ( . escritura2 ) ;
    (41) escritura2 -> . STRING escritura3
    (42) escritura2 -> . exp escritura3
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    STRING          shift and go to state 132
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    escritura2                     shift and go to state 131
    exp                            shift and go to state 133
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 108

    (15) funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .
    FUNCTION        reduce using rule 15 (funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .)
    PRINCIPAL       reduce using rule 15 (funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .)


state 109

    (19) parametros -> ( parametros2 ) .
    VAR             reduce using rule 19 (parametros -> ( parametros2 ) .)


state 110

    (20) parametros2 -> tipo ID . parametros3
    (21) parametros3 -> . empty
    (22) parametros3 -> . , parametros2
    (108) empty -> .
    ,               shift and go to state 136
    )               reduce using rule 108 (empty -> .)

    parametros3                    shift and go to state 134
    empty                          shift and go to state 135

state 111

    (58) identificadores3 -> [ . exp ]
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 137
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 112

    (56) identificadores2 -> [ exp ] identificadores3 .
    ,               reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    ;               reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    ASSIGN          reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    )               reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    DETERMINANT     reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    INVERSE         reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    TRANSPOSE       reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    DIVIDE          reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    TIMES           reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    MINUS           reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    PLUS            reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    ]               reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    NE              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    EGT             reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    ELT             reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    EQ              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    GT              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    LT              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    AND             reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    OR              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    TO              reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)
    DO2             reduce using rule 56 (identificadores2 -> [ exp ] identificadores3 .)


state 113

    (57) identificadores3 -> empty .
    ,               reduce using rule 57 (identificadores3 -> empty .)
    ;               reduce using rule 57 (identificadores3 -> empty .)
    ASSIGN          reduce using rule 57 (identificadores3 -> empty .)
    )               reduce using rule 57 (identificadores3 -> empty .)
    DETERMINANT     reduce using rule 57 (identificadores3 -> empty .)
    INVERSE         reduce using rule 57 (identificadores3 -> empty .)
    TRANSPOSE       reduce using rule 57 (identificadores3 -> empty .)
    DIVIDE          reduce using rule 57 (identificadores3 -> empty .)
    TIMES           reduce using rule 57 (identificadores3 -> empty .)
    MINUS           reduce using rule 57 (identificadores3 -> empty .)
    PLUS            reduce using rule 57 (identificadores3 -> empty .)
    ]               reduce using rule 57 (identificadores3 -> empty .)
    NE              reduce using rule 57 (identificadores3 -> empty .)
    EGT             reduce using rule 57 (identificadores3 -> empty .)
    ELT             reduce using rule 57 (identificadores3 -> empty .)
    EQ              reduce using rule 57 (identificadores3 -> empty .)
    GT              reduce using rule 57 (identificadores3 -> empty .)
    LT              reduce using rule 57 (identificadores3 -> empty .)
    AND             reduce using rule 57 (identificadores3 -> empty .)
    OR              reduce using rule 57 (identificadores3 -> empty .)
    TO              reduce using rule 57 (identificadores3 -> empty .)
    DO2             reduce using rule 57 (identificadores3 -> empty .)


state 114

    (80) exp2 -> MINUS exp_op_insert . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 138
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 115

    (81) exp2 -> PLUS exp_op_insert . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 139
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 116

    (96) termino2 -> DIVIDE term_op_insert . termino
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    termino                        shift and go to state 140
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 117

    (97) termino2 -> TIMES term_op_insert . termino
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    termino                        shift and go to state 141
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 118

    (86) factor -> ( exp_par_start exp . ) exp_par_end
    )               shift and go to state 142


state 119

    (99) llamada -> ID ( llamada2 . )
    )               shift and go to state 143


state 120

    (100) llamada2 -> exp . llamada3
    (101) llamada3 -> . empty
    (102) llamada3 -> . , llamada2
    (108) empty -> .
    ,               shift and go to state 146
    )               reduce using rule 108 (empty -> .)

    llamada3                       shift and go to state 144
    empty                          shift and go to state 145

state 121

    (45) regresa -> RETURN ( exp . ) ;
    )               shift and go to state 147


state 122

    (52) estRepCond -> WHILE ( expOR . ) DO bloque
    )               shift and go to state 148


state 123

    (62) expOR -> expAND . expOR2
    (63) expOR2 -> . empty
    (64) expOR2 -> . OR expOR
    (108) empty -> .
    OR              shift and go to state 151
    )               reduce using rule 108 (empty -> .)

    expOR2                         shift and go to state 149
    empty                          shift and go to state 150

state 124

    (65) expAND -> expresion . expAND2
    (66) expAND2 -> . empty
    (67) expAND2 -> . AND expAND
    (108) empty -> .
    AND             shift and go to state 154
    OR              reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    expAND2                        shift and go to state 152
    empty                          shift and go to state 153

state 125

    (68) expresion -> exp . expresion2 quad_expresion
    (70) expresion2 -> . empty
    (71) expresion2 -> . NE push_bool_op exp
    (72) expresion2 -> . EGT push_bool_op exp
    (73) expresion2 -> . ELT push_bool_op exp
    (74) expresion2 -> . EQ push_bool_op exp
    (75) expresion2 -> . GT push_bool_op exp
    (76) expresion2 -> . LT push_bool_op exp
    (108) empty -> .
    NE              shift and go to state 157
    EGT             shift and go to state 158
    ELT             shift and go to state 159
    EQ              shift and go to state 160
    GT              shift and go to state 161
    LT              shift and go to state 162
    AND             reduce using rule 108 (empty -> .)
    OR              reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    expresion2                     shift and go to state 155
    empty                          shift and go to state 156

state 126

    (53) estRepNoCond -> FROM identificadores ASSIGN . exp TO exp DO2 bloque
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 163
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 127

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN . exp asignacion_pop_all ;
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 164
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 128

    (46) estDesicion -> IF ( expOR . ) if_gotF bloque estDesicion2 if_fill_gotF
    )               shift and go to state 165


state 129

    (36) lee -> PRINT ( lee2 . ) ;
    )               shift and go to state 166


state 130

    (37) lee2 -> identificadores . lee3
    (38) lee3 -> . empty
    (39) lee3 -> . , lee2
    (108) empty -> .
    ,               shift and go to state 169
    )               reduce using rule 108 (empty -> .)

    lee3                           shift and go to state 167
    empty                          shift and go to state 168

state 131

    (40) escritura -> WRITE ( escritura2 . ) ;
    )               shift and go to state 170


state 132

    (41) escritura2 -> STRING . escritura3
    (43) escritura3 -> . empty
    (44) escritura3 -> . , escritura2
    (108) empty -> .
    ,               shift and go to state 173
    )               reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 171
    empty                          shift and go to state 172

state 133

    (42) escritura2 -> exp . escritura3
    (43) escritura3 -> . empty
    (44) escritura3 -> . , escritura2
    (108) empty -> .
    ,               shift and go to state 173
    )               reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 174
    empty                          shift and go to state 172

state 134

    (20) parametros2 -> tipo ID parametros3 .
    )               reduce using rule 20 (parametros2 -> tipo ID parametros3 .)


state 135

    (21) parametros3 -> empty .
    )               reduce using rule 21 (parametros3 -> empty .)


state 136

    (22) parametros3 -> , . parametros2
    (20) parametros2 -> . tipo ID parametros3
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (61) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    parametros2                    shift and go to state 175
    tipo                           shift and go to state 80

state 137

    (58) identificadores3 -> [ exp . ]
    ]               shift and go to state 176


state 138

    (80) exp2 -> MINUS exp_op_insert exp .
    ]               reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    )               reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    ,               reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    NE              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    EGT             reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    ELT             reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    EQ              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    GT              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    LT              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    AND             reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    OR              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    TO              reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    ;               reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)
    DO2             reduce using rule 80 (exp2 -> MINUS exp_op_insert exp .)


state 139

    (81) exp2 -> PLUS exp_op_insert exp .
    ]               reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    )               reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    ,               reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    NE              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    EGT             reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    ELT             reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    EQ              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    GT              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    LT              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    AND             reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    OR              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    TO              reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    ;               reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)
    DO2             reduce using rule 81 (exp2 -> PLUS exp_op_insert exp .)


state 140

    (96) termino2 -> DIVIDE term_op_insert termino .
    MINUS           reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    PLUS            reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    ]               reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    )               reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    ,               reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    NE              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    EGT             reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    ELT             reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    EQ              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    GT              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    LT              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    AND             reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    OR              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    TO              reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    ;               reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)
    DO2             reduce using rule 96 (termino2 -> DIVIDE term_op_insert termino .)


state 141

    (97) termino2 -> TIMES term_op_insert termino .
    MINUS           reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    PLUS            reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    ]               reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    )               reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    ,               reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    NE              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    EGT             reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    ELT             reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    EQ              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    GT              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    LT              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    AND             reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    OR              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    TO              reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    ;               reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)
    DO2             reduce using rule 97 (termino2 -> TIMES term_op_insert termino .)


state 142

    (86) factor -> ( exp_par_start exp ) . exp_par_end
    (88) exp_par_end -> .
    DETERMINANT     reduce using rule 88 (exp_par_end -> .)
    INVERSE         reduce using rule 88 (exp_par_end -> .)
    TRANSPOSE       reduce using rule 88 (exp_par_end -> .)
    DIVIDE          reduce using rule 88 (exp_par_end -> .)
    TIMES           reduce using rule 88 (exp_par_end -> .)
    MINUS           reduce using rule 88 (exp_par_end -> .)
    PLUS            reduce using rule 88 (exp_par_end -> .)
    ]               reduce using rule 88 (exp_par_end -> .)
    )               reduce using rule 88 (exp_par_end -> .)
    ,               reduce using rule 88 (exp_par_end -> .)
    NE              reduce using rule 88 (exp_par_end -> .)
    EGT             reduce using rule 88 (exp_par_end -> .)
    ELT             reduce using rule 88 (exp_par_end -> .)
    EQ              reduce using rule 88 (exp_par_end -> .)
    GT              reduce using rule 88 (exp_par_end -> .)
    LT              reduce using rule 88 (exp_par_end -> .)
    AND             reduce using rule 88 (exp_par_end -> .)
    OR              reduce using rule 88 (exp_par_end -> .)
    TO              reduce using rule 88 (exp_par_end -> .)
    ;               reduce using rule 88 (exp_par_end -> .)
    DO2             reduce using rule 88 (exp_par_end -> .)

    exp_par_end                    shift and go to state 177

state 143

    (99) llamada -> ID ( llamada2 ) .
    DETERMINANT     reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    INVERSE         reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    TRANSPOSE       reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    DIVIDE          reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    TIMES           reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    MINUS           reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    PLUS            reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    ]               reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    )               reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    ,               reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    NE              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    EGT             reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    ELT             reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    EQ              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    GT              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    LT              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    AND             reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    OR              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    TO              reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    ;               reduce using rule 99 (llamada -> ID ( llamada2 ) .)
    DO2             reduce using rule 99 (llamada -> ID ( llamada2 ) .)


state 144

    (100) llamada2 -> exp llamada3 .
    )               reduce using rule 100 (llamada2 -> exp llamada3 .)


state 145

    (101) llamada3 -> empty .
    )               reduce using rule 101 (llamada3 -> empty .)


state 146

    (102) llamada3 -> , . llamada2
    (100) llamada2 -> . exp llamada3
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    llamada2                       shift and go to state 178
    exp                            shift and go to state 120
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 147

    (45) regresa -> RETURN ( exp ) . ;
    ;               shift and go to state 179


state 148

    (52) estRepCond -> WHILE ( expOR ) . DO bloque
    DO              shift and go to state 180


state 149

    (62) expOR -> expAND expOR2 .
    )               reduce using rule 62 (expOR -> expAND expOR2 .)


state 150

    (63) expOR2 -> empty .
    )               reduce using rule 63 (expOR2 -> empty .)


state 151

    (64) expOR2 -> OR . expOR
    (62) expOR -> . expAND expOR2
    (65) expAND -> . expresion expAND2
    (68) expresion -> . exp expresion2 quad_expresion
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 181
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 152

    (65) expAND -> expresion expAND2 .
    OR              reduce using rule 65 (expAND -> expresion expAND2 .)
    )               reduce using rule 65 (expAND -> expresion expAND2 .)


state 153

    (66) expAND2 -> empty .
    OR              reduce using rule 66 (expAND2 -> empty .)
    )               reduce using rule 66 (expAND2 -> empty .)


state 154

    (67) expAND2 -> AND . expAND
    (65) expAND -> . expresion expAND2
    (68) expresion -> . exp expresion2 quad_expresion
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expAND                         shift and go to state 182
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 155

    (68) expresion -> exp expresion2 . quad_expresion
    (69) quad_expresion -> .
    AND             reduce using rule 69 (quad_expresion -> .)
    OR              reduce using rule 69 (quad_expresion -> .)
    )               reduce using rule 69 (quad_expresion -> .)

    quad_expresion                 shift and go to state 183

state 156

    (70) expresion2 -> empty .
    AND             reduce using rule 70 (expresion2 -> empty .)
    OR              reduce using rule 70 (expresion2 -> empty .)
    )               reduce using rule 70 (expresion2 -> empty .)


state 157

    (71) expresion2 -> NE . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 184

state 158

    (72) expresion2 -> EGT . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 185

state 159

    (73) expresion2 -> ELT . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 186

state 160

    (74) expresion2 -> EQ . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 187

state 161

    (75) expresion2 -> GT . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 188

state 162

    (76) expresion2 -> LT . push_bool_op exp
    (77) push_bool_op -> .
    MINUS           reduce using rule 77 (push_bool_op -> .)
    PLUS            reduce using rule 77 (push_bool_op -> .)
    (               reduce using rule 77 (push_bool_op -> .)
    FLOATNUMBER     reduce using rule 77 (push_bool_op -> .)
    CHARACTER       reduce using rule 77 (push_bool_op -> .)
    INTNUMBER       reduce using rule 77 (push_bool_op -> .)
    ID              reduce using rule 77 (push_bool_op -> .)

    push_bool_op                   shift and go to state 189

state 163

    (53) estRepNoCond -> FROM identificadores ASSIGN exp . TO exp DO2 bloque
    TO              shift and go to state 190


state 164

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN exp . asignacion_pop_all ;
    (35) asignacion_pop_all -> .
    ;               reduce using rule 35 (asignacion_pop_all -> .)

    asignacion_pop_all             shift and go to state 191

state 165

    (46) estDesicion -> IF ( expOR ) . if_gotF bloque estDesicion2 if_fill_gotF
    (47) if_gotF -> .
    {               reduce using rule 47 (if_gotF -> .)

    if_gotF                        shift and go to state 192

state 166

    (36) lee -> PRINT ( lee2 ) . ;
    ;               shift and go to state 193


state 167

    (37) lee2 -> identificadores lee3 .
    )               reduce using rule 37 (lee2 -> identificadores lee3 .)


state 168

    (38) lee3 -> empty .
    )               reduce using rule 38 (lee3 -> empty .)


state 169

    (39) lee3 -> , . lee2
    (37) lee2 -> . identificadores lee3
    (54) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    lee2                           shift and go to state 194
    identificadores                shift and go to state 130

state 170

    (40) escritura -> WRITE ( escritura2 ) . ;
    ;               shift and go to state 195


state 171

    (41) escritura2 -> STRING escritura3 .
    )               reduce using rule 41 (escritura2 -> STRING escritura3 .)


state 172

    (43) escritura3 -> empty .
    )               reduce using rule 43 (escritura3 -> empty .)


state 173

    (44) escritura3 -> , . escritura2
    (41) escritura2 -> . STRING escritura3
    (42) escritura2 -> . exp escritura3
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    STRING          shift and go to state 132
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    escritura2                     shift and go to state 196
    exp                            shift and go to state 133
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 174

    (42) escritura2 -> exp escritura3 .
    )               reduce using rule 42 (escritura2 -> exp escritura3 .)


state 175

    (22) parametros3 -> , parametros2 .
    )               reduce using rule 22 (parametros3 -> , parametros2 .)


state 176

    (58) identificadores3 -> [ exp ] .
    ,               reduce using rule 58 (identificadores3 -> [ exp ] .)
    ;               reduce using rule 58 (identificadores3 -> [ exp ] .)
    ASSIGN          reduce using rule 58 (identificadores3 -> [ exp ] .)
    )               reduce using rule 58 (identificadores3 -> [ exp ] .)
    DETERMINANT     reduce using rule 58 (identificadores3 -> [ exp ] .)
    INVERSE         reduce using rule 58 (identificadores3 -> [ exp ] .)
    TRANSPOSE       reduce using rule 58 (identificadores3 -> [ exp ] .)
    DIVIDE          reduce using rule 58 (identificadores3 -> [ exp ] .)
    TIMES           reduce using rule 58 (identificadores3 -> [ exp ] .)
    MINUS           reduce using rule 58 (identificadores3 -> [ exp ] .)
    PLUS            reduce using rule 58 (identificadores3 -> [ exp ] .)
    ]               reduce using rule 58 (identificadores3 -> [ exp ] .)
    NE              reduce using rule 58 (identificadores3 -> [ exp ] .)
    EGT             reduce using rule 58 (identificadores3 -> [ exp ] .)
    ELT             reduce using rule 58 (identificadores3 -> [ exp ] .)
    EQ              reduce using rule 58 (identificadores3 -> [ exp ] .)
    GT              reduce using rule 58 (identificadores3 -> [ exp ] .)
    LT              reduce using rule 58 (identificadores3 -> [ exp ] .)
    AND             reduce using rule 58 (identificadores3 -> [ exp ] .)
    OR              reduce using rule 58 (identificadores3 -> [ exp ] .)
    TO              reduce using rule 58 (identificadores3 -> [ exp ] .)
    DO2             reduce using rule 58 (identificadores3 -> [ exp ] .)


state 177

    (86) factor -> ( exp_par_start exp ) exp_par_end .
    DETERMINANT     reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    INVERSE         reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    TRANSPOSE       reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    DIVIDE          reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    TIMES           reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    MINUS           reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    PLUS            reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    ]               reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    )               reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    ,               reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    NE              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    EGT             reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    ELT             reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    EQ              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    GT              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    LT              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    AND             reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    OR              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    TO              reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    ;               reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)
    DO2             reduce using rule 86 (factor -> ( exp_par_start exp ) exp_par_end .)


state 178

    (102) llamada3 -> , llamada2 .
    )               reduce using rule 102 (llamada3 -> , llamada2 .)


state 179

    (45) regresa -> RETURN ( exp ) ; .
    RETURN          reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    WHILE           reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    FROM            reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    IF              reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    PRINT           reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    WRITE           reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    ID              reduce using rule 45 (regresa -> RETURN ( exp ) ; .)
    }               reduce using rule 45 (regresa -> RETURN ( exp ) ; .)


state 180

    (52) estRepCond -> WHILE ( expOR ) DO . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 197

state 181

    (64) expOR2 -> OR expOR .
    )               reduce using rule 64 (expOR2 -> OR expOR .)


state 182

    (67) expAND2 -> AND expAND .
    OR              reduce using rule 67 (expAND2 -> AND expAND .)
    )               reduce using rule 67 (expAND2 -> AND expAND .)


state 183

    (68) expresion -> exp expresion2 quad_expresion .
    AND             reduce using rule 68 (expresion -> exp expresion2 quad_expresion .)
    OR              reduce using rule 68 (expresion -> exp expresion2 quad_expresion .)
    )               reduce using rule 68 (expresion -> exp expresion2 quad_expresion .)


state 184

    (71) expresion2 -> NE push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 198
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 185

    (72) expresion2 -> EGT push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 199
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 186

    (73) expresion2 -> ELT push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 200
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 187

    (74) expresion2 -> EQ push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 201
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 188

    (75) expresion2 -> GT push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 202
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 189

    (76) expresion2 -> LT push_bool_op . exp
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 203
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 190

    (53) estRepNoCond -> FROM identificadores ASSIGN exp TO . exp DO2 bloque
    (78) exp -> . termino exp2
    (94) termino -> . opmat termino2
    (89) opmat -> . factor opmat2
    (83) factor -> . varcte
    (84) factor -> . MINUS varcte
    (85) factor -> . PLUS varcte
    (86) factor -> . ( exp_par_start exp ) exp_par_end
    (103) varcte -> . llamada
    (104) varcte -> . FLOATNUMBER
    (105) varcte -> . CHARACTER
    (106) varcte -> . INTNUMBER
    (107) varcte -> . identificadores
    (99) llamada -> . ID ( llamada2 )
    (54) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 204
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 191

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all . ;
    ;               shift and go to state 205


state 192

    (46) estDesicion -> IF ( expOR ) if_gotF . bloque estDesicion2 if_fill_gotF
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 206

state 193

    (36) lee -> PRINT ( lee2 ) ; .
    RETURN          reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    WHILE           reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    FROM            reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    IF              reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    PRINT           reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    WRITE           reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    ID              reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)
    }               reduce using rule 36 (lee -> PRINT ( lee2 ) ; .)


state 194

    (39) lee3 -> , lee2 .
    )               reduce using rule 39 (lee3 -> , lee2 .)


state 195

    (40) escritura -> WRITE ( escritura2 ) ; .
    RETURN          reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    WHILE           reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    FROM            reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    IF              reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    PRINT           reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    WRITE           reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    ID              reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)
    }               reduce using rule 40 (escritura -> WRITE ( escritura2 ) ; .)


state 196

    (44) escritura3 -> , escritura2 .
    )               reduce using rule 44 (escritura3 -> , escritura2 .)


state 197

    (52) estRepCond -> WHILE ( expOR ) DO bloque .
    RETURN          reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WHILE           reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    FROM            reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    IF              reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    PRINT           reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WRITE           reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    ID              reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)
    }               reduce using rule 52 (estRepCond -> WHILE ( expOR ) DO bloque .)


state 198

    (71) expresion2 -> NE push_bool_op exp .
    AND             reduce using rule 71 (expresion2 -> NE push_bool_op exp .)
    OR              reduce using rule 71 (expresion2 -> NE push_bool_op exp .)
    )               reduce using rule 71 (expresion2 -> NE push_bool_op exp .)


state 199

    (72) expresion2 -> EGT push_bool_op exp .
    AND             reduce using rule 72 (expresion2 -> EGT push_bool_op exp .)
    OR              reduce using rule 72 (expresion2 -> EGT push_bool_op exp .)
    )               reduce using rule 72 (expresion2 -> EGT push_bool_op exp .)


state 200

    (73) expresion2 -> ELT push_bool_op exp .
    AND             reduce using rule 73 (expresion2 -> ELT push_bool_op exp .)
    OR              reduce using rule 73 (expresion2 -> ELT push_bool_op exp .)
    )               reduce using rule 73 (expresion2 -> ELT push_bool_op exp .)


state 201

    (74) expresion2 -> EQ push_bool_op exp .
    AND             reduce using rule 74 (expresion2 -> EQ push_bool_op exp .)
    OR              reduce using rule 74 (expresion2 -> EQ push_bool_op exp .)
    )               reduce using rule 74 (expresion2 -> EQ push_bool_op exp .)


state 202

    (75) expresion2 -> GT push_bool_op exp .
    AND             reduce using rule 75 (expresion2 -> GT push_bool_op exp .)
    OR              reduce using rule 75 (expresion2 -> GT push_bool_op exp .)
    )               reduce using rule 75 (expresion2 -> GT push_bool_op exp .)


state 203

    (76) expresion2 -> LT push_bool_op exp .
    AND             reduce using rule 76 (expresion2 -> LT push_bool_op exp .)
    OR              reduce using rule 76 (expresion2 -> LT push_bool_op exp .)
    )               reduce using rule 76 (expresion2 -> LT push_bool_op exp .)


state 204

    (53) estRepNoCond -> FROM identificadores ASSIGN exp TO exp . DO2 bloque
    DO2             shift and go to state 207


state 205

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .
    RETURN          reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    WHILE           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    FROM            reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    IF              reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    PRINT           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    WRITE           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    ID              reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)
    }               reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp asignacion_pop_all ; .)


state 206

    (46) estDesicion -> IF ( expOR ) if_gotF bloque . estDesicion2 if_fill_gotF
    (49) estDesicion2 -> . empty
    (50) estDesicion2 -> . ELSE if_goto bloque
    (108) empty -> .
    ELSE            shift and go to state 210
    RETURN          reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FROM            reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    PRINT           reduce using rule 108 (empty -> .)
    WRITE           reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    }               reduce using rule 108 (empty -> .)

    estDesicion2                   shift and go to state 208
    empty                          shift and go to state 209

state 207

    (53) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 211

state 208

    (46) estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 . if_fill_gotF
    (48) if_fill_gotF -> .
    RETURN          reduce using rule 48 (if_fill_gotF -> .)
    WHILE           reduce using rule 48 (if_fill_gotF -> .)
    FROM            reduce using rule 48 (if_fill_gotF -> .)
    IF              reduce using rule 48 (if_fill_gotF -> .)
    PRINT           reduce using rule 48 (if_fill_gotF -> .)
    WRITE           reduce using rule 48 (if_fill_gotF -> .)
    ID              reduce using rule 48 (if_fill_gotF -> .)
    }               reduce using rule 48 (if_fill_gotF -> .)

    if_fill_gotF                   shift and go to state 212

state 209

    (49) estDesicion2 -> empty .
    RETURN          reduce using rule 49 (estDesicion2 -> empty .)
    WHILE           reduce using rule 49 (estDesicion2 -> empty .)
    FROM            reduce using rule 49 (estDesicion2 -> empty .)
    IF              reduce using rule 49 (estDesicion2 -> empty .)
    PRINT           reduce using rule 49 (estDesicion2 -> empty .)
    WRITE           reduce using rule 49 (estDesicion2 -> empty .)
    ID              reduce using rule 49 (estDesicion2 -> empty .)
    }               reduce using rule 49 (estDesicion2 -> empty .)


state 210

    (50) estDesicion2 -> ELSE . if_goto bloque
    (51) if_goto -> .
    {               reduce using rule 51 (if_goto -> .)

    if_goto                        shift and go to state 213

state 211

    (53) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .
    RETURN          reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WHILE           reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    FROM            reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    IF              reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    PRINT           reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WRITE           reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    ID              reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    }               reduce using rule 53 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)


state 212

    (46) estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .
    RETURN          reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    WHILE           reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    FROM            reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    IF              reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    PRINT           reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    WRITE           reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    ID              reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)
    }               reduce using rule 46 (estDesicion -> IF ( expOR ) if_gotF bloque estDesicion2 if_fill_gotF .)


state 213

    (50) estDesicion2 -> ELSE if_goto . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 214

state 214

    (50) estDesicion2 -> ELSE if_goto bloque .
    RETURN          reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    WHILE           reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    FROM            reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    IF              reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    PRINT           reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    WRITE           reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    ID              reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
    }               reduce using rule 50 (estDesicion2 -> ELSE if_goto bloque .)
