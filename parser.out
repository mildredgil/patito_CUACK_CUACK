Grammar:

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL ( ) bloque
Rule 2     programa2 -> empty
Rule 3     programa2 -> vars
Rule 4     programa3 -> empty
Rule 5     programa3 -> funcion programa2
Rule 6     vars -> VAR var1
Rule 7     var1 -> tipo ids ; var2
Rule 8     var2 -> empty
Rule 9     var2 -> var1
Rule 10    ids -> identificadores ids2
Rule 11    ids2 -> empty
Rule 12    ids2 -> ids
Rule 13    funcion -> FUNCTION funcion2 ID parametros vars bloque
Rule 14    funcion2 -> VOID
Rule 15    funcion2 -> tipo
Rule 16    parametros -> ( parametros2 )
Rule 17    parametros2 -> tipo ID parametros3
Rule 18    parametros3 -> empty
Rule 19    parametros3 -> , parametros2
Rule 20    bloque -> { bloque2 }
Rule 21    bloque2 -> empty
Rule 22    bloque2 -> estatuto bloque2
Rule 23    estatuto -> regresa
Rule 24    estatuto -> estRepCond
Rule 25    estatuto -> estRepNoCond
Rule 26    estatuto -> estDesicion
Rule 27    estatuto -> lee
Rule 28    estatuto -> escritura
Rule 29    estatuto -> asignacion
Rule 30    asignacion -> identificadores ASSIGN exp ;
Rule 31    lee -> PRINT ( lee2 ) ;
Rule 32    lee2 -> identificadores lee3
Rule 33    lee3 -> empty
Rule 34    lee3 -> , lee2
Rule 35    escritura -> WRITE ( escritura2 ) ;
Rule 36    escritura2 -> STRING escritura3
Rule 37    escritura2 -> exp escritura3
Rule 38    escritura3 -> empty
Rule 39    escritura3 -> , escritura2
Rule 40    regresa -> RETURN ( exp ) ;
Rule 41    estDesicion -> IF ( expOR ) bloque estDesicion2
Rule 42    estDesicion2 -> empty
Rule 43    estDesicion2 -> ELSE bloque
Rule 44    estRepCond -> WHILE ( expOR ) DO bloque
Rule 45    estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque
Rule 46    identificadores -> ID identificadores2
Rule 47    identificadores2 -> empty
Rule 48    identificadores2 -> [ exp ] identificadores3
Rule 49    identificadores3 -> empty
Rule 50    identificadores3 -> [ exp ]
Rule 51    tipo -> FLOAT
Rule 52    tipo -> CHAR
Rule 53    tipo -> INT
Rule 54    expOR -> expAND expOR2
Rule 55    expOR2 -> empty
Rule 56    expOR2 -> OR expOR
Rule 57    expAND -> expresion expAND2
Rule 58    expAND2 -> empty
Rule 59    expAND2 -> AND expAND
Rule 60    expresion -> exp expresion2
Rule 61    expresion2 -> empty
Rule 62    expresion2 -> NE exp
Rule 63    expresion2 -> EGT exp
Rule 64    expresion2 -> ELT exp
Rule 65    expresion2 -> EQ exp
Rule 66    expresion2 -> GT exp
Rule 67    expresion2 -> LT exp
Rule 68    exp -> termino exp2
Rule 69    exp2 -> empty
Rule 70    exp2 -> MINUS exp  [precedence=left, level=1]
Rule 71    exp2 -> PLUS exp  [precedence=left, level=1]
Rule 72    factor -> varcte
Rule 73    factor -> MINUS varcte  [precedence=left, level=1]
Rule 74    factor -> PLUS varcte  [precedence=left, level=1]
Rule 75    factor -> ( exp )
Rule 76    opmat -> factor opmat2
Rule 77    opmat2 -> empty
Rule 78    opmat2 -> DETERMINANT
Rule 79    opmat2 -> INVERSE
Rule 80    opmat2 -> TRANSPOSE
Rule 81    termino -> opmat termino2
Rule 82    termino2 -> empty
Rule 83    termino2 -> DIVIDE termino
Rule 84    termino2 -> TIMES termino
Rule 85    llamada -> ID ( llamada2 )
Rule 86    llamada2 -> exp llamada3
Rule 87    llamada3 -> empty
Rule 88    llamada3 -> , llamada2
Rule 89    varcte -> llamada
Rule 90    varcte -> FLOATNUMBER
Rule 91    varcte -> CHARACTER
Rule 92    varcte -> INTNUMBER
Rule 93    varcte -> identificadores
Rule 94    empty -> <empty>

Terminals, with rules where they appear:

(                    : 1 16 31 35 40 41 44 75 85
)                    : 1 16 31 35 40 41 44 75 85
,                    : 19 34 39 88
;                    : 1 7 30 31 35 40
AND                  : 59
ASSIGN               : 30 45
CHAR                 : 52
CHARACTER            : 91
DETERMINANT          : 78
DIVIDE               : 83
DO                   : 44
DO2                  : 45
EGT                  : 63
ELSE                 : 43
ELT                  : 64
EQ                   : 65
FLOAT                : 51
FLOATNUMBER          : 90
FROM                 : 45
FUNCTION             : 13
GT                   : 66
ID                   : 1 13 17 46 85
IF                   : 41
INT                  : 53
INTNUMBER            : 92
INVERSE              : 79
LT                   : 67
MINUS                : 70 73
NE                   : 62
OR                   : 56
PLUS                 : 71 74
PRINCIPAL            : 1
PRINT                : 31
PROGRAM              : 1
RETURN               : 40
STRING               : 36
TIMES                : 84
TO                   : 45
TRANSPOSE            : 80
VAR                  : 6
VOID                 : 14
WHILE                : 44
WRITE                : 35
[                    : 48 50
]                    : 48 50
error                : 
{                    : 20
}                    : 20

Nonterminals, with rules where they appear:

asignacion           : 29
bloque               : 1 13 41 43 44 45
bloque2              : 20 22
empty                : 2 4 8 11 18 21 33 38 42 47 49 55 58 61 69 77 82 87
escritura            : 28
escritura2           : 35 39
escritura3           : 36 37
estDesicion          : 26
estDesicion2         : 41
estRepCond           : 24
estRepNoCond         : 25
estatuto             : 22
exp                  : 30 37 40 45 45 48 50 60 62 63 64 65 66 67 70 71 75 86
exp2                 : 68
expAND               : 54 59
expAND2              : 57
expOR                : 41 44 56
expOR2               : 54
expresion            : 57
expresion2           : 60
factor               : 76
funcion              : 5
funcion2             : 13
identificadores      : 10 30 32 45 93
identificadores2     : 46
identificadores3     : 48
ids                  : 7 12
ids2                 : 10
lee                  : 27
lee2                 : 31 34
lee3                 : 32
llamada              : 89
llamada2             : 85 88
llamada3             : 86
opmat                : 81
opmat2               : 76
parametros           : 13
parametros2          : 16 19
parametros3          : 17
programa             : 0
programa2            : 1 5
programa3            : 1
regresa              : 23
termino              : 68 83 84
termino2             : 81
tipo                 : 7 15 17
var1                 : 6 9
var2                 : 7
varcte               : 72 73 74
vars                 : 3 13


state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID ; programa2 programa3 PRINCIPAL ( ) bloque
    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .


state 2

    (1) programa -> PROGRAM . ID ; programa2 programa3 PRINCIPAL ( ) bloque
    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . ; programa2 programa3 PRINCIPAL ( ) bloque
    ;               shift and go to state 4


state 4

    (1) programa -> PROGRAM ID ; . programa2 programa3 PRINCIPAL ( ) bloque
    (2) programa2 -> . empty
    (3) programa2 -> . vars
    (94) empty -> .
    (6) vars -> . VAR var1
    FUNCTION        reduce using rule 94 (empty -> .)
    PRINCIPAL       reduce using rule 94 (empty -> .)
    VAR             shift and go to state 8

    programa2                      shift and go to state 5
    empty                          shift and go to state 6
    vars                           shift and go to state 7

state 5

    (1) programa -> PROGRAM ID ; programa2 . programa3 PRINCIPAL ( ) bloque
    (4) programa3 -> . empty
    (5) programa3 -> . funcion programa2
    (94) empty -> .
    (13) funcion -> . FUNCTION funcion2 ID parametros vars bloque
    PRINCIPAL       reduce using rule 94 (empty -> .)
    FUNCTION        shift and go to state 12

    programa3                      shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 11

state 6

    (2) programa2 -> empty .
    FUNCTION        reduce using rule 2 (programa2 -> empty .)
    PRINCIPAL       reduce using rule 2 (programa2 -> empty .)


state 7

    (3) programa2 -> vars .
    FUNCTION        reduce using rule 3 (programa2 -> vars .)
    PRINCIPAL       reduce using rule 3 (programa2 -> vars .)


state 8

    (6) vars -> VAR . var1
    (7) var1 -> . tipo ids ; var2
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . INT
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    INT             shift and go to state 17

    var1                           shift and go to state 13
    tipo                           shift and go to state 14

state 9

    (1) programa -> PROGRAM ID ; programa2 programa3 . PRINCIPAL ( ) bloque
    PRINCIPAL       shift and go to state 18


state 10

    (4) programa3 -> empty .
    PRINCIPAL       reduce using rule 4 (programa3 -> empty .)


state 11

    (5) programa3 -> funcion . programa2
    (2) programa2 -> . empty
    (3) programa2 -> . vars
    (94) empty -> .
    (6) vars -> . VAR var1
    PRINCIPAL       reduce using rule 94 (empty -> .)
    VAR             shift and go to state 8

    programa2                      shift and go to state 19
    empty                          shift and go to state 6
    vars                           shift and go to state 7

state 12

    (13) funcion -> FUNCTION . funcion2 ID parametros vars bloque
    (14) funcion2 -> . VOID
    (15) funcion2 -> . tipo
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . INT
    VOID            shift and go to state 21
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    INT             shift and go to state 17

    funcion2                       shift and go to state 20
    tipo                           shift and go to state 22

state 13

    (6) vars -> VAR var1 .
    FUNCTION        reduce using rule 6 (vars -> VAR var1 .)
    PRINCIPAL       reduce using rule 6 (vars -> VAR var1 .)
    {               reduce using rule 6 (vars -> VAR var1 .)


state 14

    (7) var1 -> tipo . ids ; var2
    (10) ids -> . identificadores ids2
    (46) identificadores -> . ID identificadores2
    ID              shift and go to state 25

    ids                            shift and go to state 23
    identificadores                shift and go to state 24

state 15

    (51) tipo -> FLOAT .
    ID              reduce using rule 51 (tipo -> FLOAT .)


state 16

    (52) tipo -> CHAR .
    ID              reduce using rule 52 (tipo -> CHAR .)


state 17

    (53) tipo -> INT .
    ID              reduce using rule 53 (tipo -> INT .)


state 18

    (1) programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL . ( ) bloque
    (               shift and go to state 26


state 19

    (5) programa3 -> funcion programa2 .
    PRINCIPAL       reduce using rule 5 (programa3 -> funcion programa2 .)


state 20

    (13) funcion -> FUNCTION funcion2 . ID parametros vars bloque
    ID              shift and go to state 27


state 21

    (14) funcion2 -> VOID .
    ID              reduce using rule 14 (funcion2 -> VOID .)


state 22

    (15) funcion2 -> tipo .
    ID              reduce using rule 15 (funcion2 -> tipo .)


state 23

    (7) var1 -> tipo ids . ; var2
    ;               shift and go to state 28


state 24

    (10) ids -> identificadores . ids2
    (11) ids2 -> . empty
    (12) ids2 -> . ids
    (94) empty -> .
    (10) ids -> . identificadores ids2
    (46) identificadores -> . ID identificadores2
    ;               reduce using rule 94 (empty -> .)
    ID              shift and go to state 25

    identificadores                shift and go to state 24
    ids2                           shift and go to state 29
    empty                          shift and go to state 30
    ids                            shift and go to state 31

state 25

    (46) identificadores -> ID . identificadores2
    (47) identificadores2 -> . empty
    (48) identificadores2 -> . [ exp ] identificadores3
    (94) empty -> .
    [               shift and go to state 34
    ID              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    ASSIGN          reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)

    identificadores2               shift and go to state 32
    empty                          shift and go to state 33

state 26

    (1) programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL ( . ) bloque
    )               shift and go to state 35


state 27

    (13) funcion -> FUNCTION funcion2 ID . parametros vars bloque
    (16) parametros -> . ( parametros2 )
    (               shift and go to state 37

    parametros                     shift and go to state 36

state 28

    (7) var1 -> tipo ids ; . var2
    (8) var2 -> . empty
    (9) var2 -> . var1
    (94) empty -> .
    (7) var1 -> . tipo ids ; var2
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . INT
    FUNCTION        reduce using rule 94 (empty -> .)
    PRINCIPAL       reduce using rule 94 (empty -> .)
    {               reduce using rule 94 (empty -> .)
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    INT             shift and go to state 17

    tipo                           shift and go to state 14
    var2                           shift and go to state 38
    empty                          shift and go to state 39
    var1                           shift and go to state 40

state 29

    (10) ids -> identificadores ids2 .
    ;               reduce using rule 10 (ids -> identificadores ids2 .)


state 30

    (11) ids2 -> empty .
    ;               reduce using rule 11 (ids2 -> empty .)


state 31

    (12) ids2 -> ids .
    ;               reduce using rule 12 (ids2 -> ids .)


state 32

    (46) identificadores -> ID identificadores2 .
    ID              reduce using rule 46 (identificadores -> ID identificadores2 .)
    ;               reduce using rule 46 (identificadores -> ID identificadores2 .)
    DETERMINANT     reduce using rule 46 (identificadores -> ID identificadores2 .)
    INVERSE         reduce using rule 46 (identificadores -> ID identificadores2 .)
    TRANSPOSE       reduce using rule 46 (identificadores -> ID identificadores2 .)
    DIVIDE          reduce using rule 46 (identificadores -> ID identificadores2 .)
    TIMES           reduce using rule 46 (identificadores -> ID identificadores2 .)
    MINUS           reduce using rule 46 (identificadores -> ID identificadores2 .)
    PLUS            reduce using rule 46 (identificadores -> ID identificadores2 .)
    ]               reduce using rule 46 (identificadores -> ID identificadores2 .)
    )               reduce using rule 46 (identificadores -> ID identificadores2 .)
    ,               reduce using rule 46 (identificadores -> ID identificadores2 .)
    NE              reduce using rule 46 (identificadores -> ID identificadores2 .)
    EGT             reduce using rule 46 (identificadores -> ID identificadores2 .)
    ELT             reduce using rule 46 (identificadores -> ID identificadores2 .)
    EQ              reduce using rule 46 (identificadores -> ID identificadores2 .)
    GT              reduce using rule 46 (identificadores -> ID identificadores2 .)
    LT              reduce using rule 46 (identificadores -> ID identificadores2 .)
    AND             reduce using rule 46 (identificadores -> ID identificadores2 .)
    OR              reduce using rule 46 (identificadores -> ID identificadores2 .)
    TO              reduce using rule 46 (identificadores -> ID identificadores2 .)
    DO2             reduce using rule 46 (identificadores -> ID identificadores2 .)
    ASSIGN          reduce using rule 46 (identificadores -> ID identificadores2 .)


state 33

    (47) identificadores2 -> empty .
    ID              reduce using rule 47 (identificadores2 -> empty .)
    ;               reduce using rule 47 (identificadores2 -> empty .)
    ASSIGN          reduce using rule 47 (identificadores2 -> empty .)
    ,               reduce using rule 47 (identificadores2 -> empty .)
    )               reduce using rule 47 (identificadores2 -> empty .)
    DETERMINANT     reduce using rule 47 (identificadores2 -> empty .)
    INVERSE         reduce using rule 47 (identificadores2 -> empty .)
    TRANSPOSE       reduce using rule 47 (identificadores2 -> empty .)
    DIVIDE          reduce using rule 47 (identificadores2 -> empty .)
    TIMES           reduce using rule 47 (identificadores2 -> empty .)
    MINUS           reduce using rule 47 (identificadores2 -> empty .)
    PLUS            reduce using rule 47 (identificadores2 -> empty .)
    ]               reduce using rule 47 (identificadores2 -> empty .)
    NE              reduce using rule 47 (identificadores2 -> empty .)
    EGT             reduce using rule 47 (identificadores2 -> empty .)
    ELT             reduce using rule 47 (identificadores2 -> empty .)
    EQ              reduce using rule 47 (identificadores2 -> empty .)
    GT              reduce using rule 47 (identificadores2 -> empty .)
    LT              reduce using rule 47 (identificadores2 -> empty .)
    AND             reduce using rule 47 (identificadores2 -> empty .)
    OR              reduce using rule 47 (identificadores2 -> empty .)
    TO              reduce using rule 47 (identificadores2 -> empty .)
    DO2             reduce using rule 47 (identificadores2 -> empty .)


state 34

    (48) identificadores2 -> [ . exp ] identificadores3
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 41
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 35

    (1) programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL ( ) . bloque
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 55

state 36

    (13) funcion -> FUNCTION funcion2 ID parametros . vars bloque
    (6) vars -> . VAR var1
    VAR             shift and go to state 8

    vars                           shift and go to state 57

state 37

    (16) parametros -> ( . parametros2 )
    (17) parametros2 -> . tipo ID parametros3
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . INT
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    INT             shift and go to state 17

    parametros2                    shift and go to state 58
    tipo                           shift and go to state 59

state 38

    (7) var1 -> tipo ids ; var2 .
    FUNCTION        reduce using rule 7 (var1 -> tipo ids ; var2 .)
    PRINCIPAL       reduce using rule 7 (var1 -> tipo ids ; var2 .)
    {               reduce using rule 7 (var1 -> tipo ids ; var2 .)


state 39

    (8) var2 -> empty .
    FUNCTION        reduce using rule 8 (var2 -> empty .)
    PRINCIPAL       reduce using rule 8 (var2 -> empty .)
    {               reduce using rule 8 (var2 -> empty .)


state 40

    (9) var2 -> var1 .
    FUNCTION        reduce using rule 9 (var2 -> var1 .)
    PRINCIPAL       reduce using rule 9 (var2 -> var1 .)
    {               reduce using rule 9 (var2 -> var1 .)


state 41

    (48) identificadores2 -> [ exp . ] identificadores3
    ]               shift and go to state 60


state 42

    (68) exp -> termino . exp2
    (69) exp2 -> . empty
    (70) exp2 -> . MINUS exp
    (71) exp2 -> . PLUS exp
    (94) empty -> .
    MINUS           shift and go to state 63
    PLUS            shift and go to state 64
    ]               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    NE              reduce using rule 94 (empty -> .)
    EGT             reduce using rule 94 (empty -> .)
    ELT             reduce using rule 94 (empty -> .)
    EQ              reduce using rule 94 (empty -> .)
    GT              reduce using rule 94 (empty -> .)
    LT              reduce using rule 94 (empty -> .)
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    TO              reduce using rule 94 (empty -> .)
    DO2             reduce using rule 94 (empty -> .)

    exp2                           shift and go to state 61
    empty                          shift and go to state 62

state 43

    (81) termino -> opmat . termino2
    (82) termino2 -> . empty
    (83) termino2 -> . DIVIDE termino
    (84) termino2 -> . TIMES termino
    (94) empty -> .
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 68
    MINUS           reduce using rule 94 (empty -> .)
    PLUS            reduce using rule 94 (empty -> .)
    ]               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    NE              reduce using rule 94 (empty -> .)
    EGT             reduce using rule 94 (empty -> .)
    ELT             reduce using rule 94 (empty -> .)
    EQ              reduce using rule 94 (empty -> .)
    GT              reduce using rule 94 (empty -> .)
    LT              reduce using rule 94 (empty -> .)
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    TO              reduce using rule 94 (empty -> .)
    DO2             reduce using rule 94 (empty -> .)

    termino2                       shift and go to state 65
    empty                          shift and go to state 66

state 44

    (76) opmat -> factor . opmat2
    (77) opmat2 -> . empty
    (78) opmat2 -> . DETERMINANT
    (79) opmat2 -> . INVERSE
    (80) opmat2 -> . TRANSPOSE
    (94) empty -> .
    DETERMINANT     shift and go to state 71
    INVERSE         shift and go to state 72
    TRANSPOSE       shift and go to state 73
    DIVIDE          reduce using rule 94 (empty -> .)
    TIMES           reduce using rule 94 (empty -> .)
    MINUS           reduce using rule 94 (empty -> .)
    PLUS            reduce using rule 94 (empty -> .)
    ]               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    NE              reduce using rule 94 (empty -> .)
    EGT             reduce using rule 94 (empty -> .)
    ELT             reduce using rule 94 (empty -> .)
    EQ              reduce using rule 94 (empty -> .)
    GT              reduce using rule 94 (empty -> .)
    LT              reduce using rule 94 (empty -> .)
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    TO              reduce using rule 94 (empty -> .)
    DO2             reduce using rule 94 (empty -> .)

    opmat2                         shift and go to state 69
    empty                          shift and go to state 70

state 45

    (72) factor -> varcte .
    DETERMINANT     reduce using rule 72 (factor -> varcte .)
    INVERSE         reduce using rule 72 (factor -> varcte .)
    TRANSPOSE       reduce using rule 72 (factor -> varcte .)
    DIVIDE          reduce using rule 72 (factor -> varcte .)
    TIMES           reduce using rule 72 (factor -> varcte .)
    MINUS           reduce using rule 72 (factor -> varcte .)
    PLUS            reduce using rule 72 (factor -> varcte .)
    ]               reduce using rule 72 (factor -> varcte .)
    )               reduce using rule 72 (factor -> varcte .)
    ,               reduce using rule 72 (factor -> varcte .)
    NE              reduce using rule 72 (factor -> varcte .)
    EGT             reduce using rule 72 (factor -> varcte .)
    ELT             reduce using rule 72 (factor -> varcte .)
    EQ              reduce using rule 72 (factor -> varcte .)
    GT              reduce using rule 72 (factor -> varcte .)
    LT              reduce using rule 72 (factor -> varcte .)
    AND             reduce using rule 72 (factor -> varcte .)
    OR              reduce using rule 72 (factor -> varcte .)
    ;               reduce using rule 72 (factor -> varcte .)
    TO              reduce using rule 72 (factor -> varcte .)
    DO2             reduce using rule 72 (factor -> varcte .)


state 46

    (73) factor -> MINUS . varcte
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    varcte                         shift and go to state 74
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 47

    (74) factor -> PLUS . varcte
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    varcte                         shift and go to state 75
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 48

    (75) factor -> ( . exp )
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 76
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 49

    (89) varcte -> llamada .
    DETERMINANT     reduce using rule 89 (varcte -> llamada .)
    INVERSE         reduce using rule 89 (varcte -> llamada .)
    TRANSPOSE       reduce using rule 89 (varcte -> llamada .)
    DIVIDE          reduce using rule 89 (varcte -> llamada .)
    TIMES           reduce using rule 89 (varcte -> llamada .)
    MINUS           reduce using rule 89 (varcte -> llamada .)
    PLUS            reduce using rule 89 (varcte -> llamada .)
    ]               reduce using rule 89 (varcte -> llamada .)
    )               reduce using rule 89 (varcte -> llamada .)
    ,               reduce using rule 89 (varcte -> llamada .)
    NE              reduce using rule 89 (varcte -> llamada .)
    EGT             reduce using rule 89 (varcte -> llamada .)
    ELT             reduce using rule 89 (varcte -> llamada .)
    EQ              reduce using rule 89 (varcte -> llamada .)
    GT              reduce using rule 89 (varcte -> llamada .)
    LT              reduce using rule 89 (varcte -> llamada .)
    AND             reduce using rule 89 (varcte -> llamada .)
    OR              reduce using rule 89 (varcte -> llamada .)
    ;               reduce using rule 89 (varcte -> llamada .)
    TO              reduce using rule 89 (varcte -> llamada .)
    DO2             reduce using rule 89 (varcte -> llamada .)


state 50

    (90) varcte -> FLOATNUMBER .
    DETERMINANT     reduce using rule 90 (varcte -> FLOATNUMBER .)
    INVERSE         reduce using rule 90 (varcte -> FLOATNUMBER .)
    TRANSPOSE       reduce using rule 90 (varcte -> FLOATNUMBER .)
    DIVIDE          reduce using rule 90 (varcte -> FLOATNUMBER .)
    TIMES           reduce using rule 90 (varcte -> FLOATNUMBER .)
    MINUS           reduce using rule 90 (varcte -> FLOATNUMBER .)
    PLUS            reduce using rule 90 (varcte -> FLOATNUMBER .)
    ]               reduce using rule 90 (varcte -> FLOATNUMBER .)
    )               reduce using rule 90 (varcte -> FLOATNUMBER .)
    ,               reduce using rule 90 (varcte -> FLOATNUMBER .)
    NE              reduce using rule 90 (varcte -> FLOATNUMBER .)
    EGT             reduce using rule 90 (varcte -> FLOATNUMBER .)
    ELT             reduce using rule 90 (varcte -> FLOATNUMBER .)
    EQ              reduce using rule 90 (varcte -> FLOATNUMBER .)
    GT              reduce using rule 90 (varcte -> FLOATNUMBER .)
    LT              reduce using rule 90 (varcte -> FLOATNUMBER .)
    AND             reduce using rule 90 (varcte -> FLOATNUMBER .)
    OR              reduce using rule 90 (varcte -> FLOATNUMBER .)
    ;               reduce using rule 90 (varcte -> FLOATNUMBER .)
    TO              reduce using rule 90 (varcte -> FLOATNUMBER .)
    DO2             reduce using rule 90 (varcte -> FLOATNUMBER .)


state 51

    (91) varcte -> CHARACTER .
    DETERMINANT     reduce using rule 91 (varcte -> CHARACTER .)
    INVERSE         reduce using rule 91 (varcte -> CHARACTER .)
    TRANSPOSE       reduce using rule 91 (varcte -> CHARACTER .)
    DIVIDE          reduce using rule 91 (varcte -> CHARACTER .)
    TIMES           reduce using rule 91 (varcte -> CHARACTER .)
    MINUS           reduce using rule 91 (varcte -> CHARACTER .)
    PLUS            reduce using rule 91 (varcte -> CHARACTER .)
    ]               reduce using rule 91 (varcte -> CHARACTER .)
    )               reduce using rule 91 (varcte -> CHARACTER .)
    ,               reduce using rule 91 (varcte -> CHARACTER .)
    NE              reduce using rule 91 (varcte -> CHARACTER .)
    EGT             reduce using rule 91 (varcte -> CHARACTER .)
    ELT             reduce using rule 91 (varcte -> CHARACTER .)
    EQ              reduce using rule 91 (varcte -> CHARACTER .)
    GT              reduce using rule 91 (varcte -> CHARACTER .)
    LT              reduce using rule 91 (varcte -> CHARACTER .)
    AND             reduce using rule 91 (varcte -> CHARACTER .)
    OR              reduce using rule 91 (varcte -> CHARACTER .)
    ;               reduce using rule 91 (varcte -> CHARACTER .)
    TO              reduce using rule 91 (varcte -> CHARACTER .)
    DO2             reduce using rule 91 (varcte -> CHARACTER .)


state 52

    (92) varcte -> INTNUMBER .
    DETERMINANT     reduce using rule 92 (varcte -> INTNUMBER .)
    INVERSE         reduce using rule 92 (varcte -> INTNUMBER .)
    TRANSPOSE       reduce using rule 92 (varcte -> INTNUMBER .)
    DIVIDE          reduce using rule 92 (varcte -> INTNUMBER .)
    TIMES           reduce using rule 92 (varcte -> INTNUMBER .)
    MINUS           reduce using rule 92 (varcte -> INTNUMBER .)
    PLUS            reduce using rule 92 (varcte -> INTNUMBER .)
    ]               reduce using rule 92 (varcte -> INTNUMBER .)
    )               reduce using rule 92 (varcte -> INTNUMBER .)
    ,               reduce using rule 92 (varcte -> INTNUMBER .)
    NE              reduce using rule 92 (varcte -> INTNUMBER .)
    EGT             reduce using rule 92 (varcte -> INTNUMBER .)
    ELT             reduce using rule 92 (varcte -> INTNUMBER .)
    EQ              reduce using rule 92 (varcte -> INTNUMBER .)
    GT              reduce using rule 92 (varcte -> INTNUMBER .)
    LT              reduce using rule 92 (varcte -> INTNUMBER .)
    AND             reduce using rule 92 (varcte -> INTNUMBER .)
    OR              reduce using rule 92 (varcte -> INTNUMBER .)
    ;               reduce using rule 92 (varcte -> INTNUMBER .)
    TO              reduce using rule 92 (varcte -> INTNUMBER .)
    DO2             reduce using rule 92 (varcte -> INTNUMBER .)


state 53

    (93) varcte -> identificadores .
    DETERMINANT     reduce using rule 93 (varcte -> identificadores .)
    INVERSE         reduce using rule 93 (varcte -> identificadores .)
    TRANSPOSE       reduce using rule 93 (varcte -> identificadores .)
    DIVIDE          reduce using rule 93 (varcte -> identificadores .)
    TIMES           reduce using rule 93 (varcte -> identificadores .)
    MINUS           reduce using rule 93 (varcte -> identificadores .)
    PLUS            reduce using rule 93 (varcte -> identificadores .)
    ]               reduce using rule 93 (varcte -> identificadores .)
    )               reduce using rule 93 (varcte -> identificadores .)
    ,               reduce using rule 93 (varcte -> identificadores .)
    NE              reduce using rule 93 (varcte -> identificadores .)
    EGT             reduce using rule 93 (varcte -> identificadores .)
    ELT             reduce using rule 93 (varcte -> identificadores .)
    EQ              reduce using rule 93 (varcte -> identificadores .)
    GT              reduce using rule 93 (varcte -> identificadores .)
    LT              reduce using rule 93 (varcte -> identificadores .)
    AND             reduce using rule 93 (varcte -> identificadores .)
    OR              reduce using rule 93 (varcte -> identificadores .)
    ;               reduce using rule 93 (varcte -> identificadores .)
    TO              reduce using rule 93 (varcte -> identificadores .)
    DO2             reduce using rule 93 (varcte -> identificadores .)


state 54

    (85) llamada -> ID . ( llamada2 )
    (46) identificadores -> ID . identificadores2
    (47) identificadores2 -> . empty
    (48) identificadores2 -> . [ exp ] identificadores3
    (94) empty -> .
    (               shift and go to state 77
    [               shift and go to state 34
    DETERMINANT     reduce using rule 94 (empty -> .)
    INVERSE         reduce using rule 94 (empty -> .)
    TRANSPOSE       reduce using rule 94 (empty -> .)
    DIVIDE          reduce using rule 94 (empty -> .)
    TIMES           reduce using rule 94 (empty -> .)
    MINUS           reduce using rule 94 (empty -> .)
    PLUS            reduce using rule 94 (empty -> .)
    ]               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    NE              reduce using rule 94 (empty -> .)
    EGT             reduce using rule 94 (empty -> .)
    ELT             reduce using rule 94 (empty -> .)
    EQ              reduce using rule 94 (empty -> .)
    GT              reduce using rule 94 (empty -> .)
    LT              reduce using rule 94 (empty -> .)
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    TO              reduce using rule 94 (empty -> .)
    DO2             reduce using rule 94 (empty -> .)

    identificadores2               shift and go to state 32
    empty                          shift and go to state 33

state 55

    (1) programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL ( ) bloque .
    $end            reduce using rule 1 (programa -> PROGRAM ID ; programa2 programa3 PRINCIPAL ( ) bloque .)


state 56

    (20) bloque -> { . bloque2 }
    (21) bloque2 -> . empty
    (22) bloque2 -> . estatuto bloque2
    (94) empty -> .
    (23) estatuto -> . regresa
    (24) estatuto -> . estRepCond
    (25) estatuto -> . estRepNoCond
    (26) estatuto -> . estDesicion
    (27) estatuto -> . lee
    (28) estatuto -> . escritura
    (29) estatuto -> . asignacion
    (40) regresa -> . RETURN ( exp ) ;
    (44) estRepCond -> . WHILE ( expOR ) DO bloque
    (45) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (41) estDesicion -> . IF ( expOR ) bloque estDesicion2
    (31) lee -> . PRINT ( lee2 ) ;
    (35) escritura -> . WRITE ( escritura2 ) ;
    (30) asignacion -> . identificadores ASSIGN exp ;
    (46) identificadores -> . ID identificadores2
    }               reduce using rule 94 (empty -> .)
    RETURN          shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    IF              shift and go to state 92
    PRINT           shift and go to state 93
    WRITE           shift and go to state 94
    ID              shift and go to state 25

    bloque2                        shift and go to state 78
    empty                          shift and go to state 79
    estatuto                       shift and go to state 80
    regresa                        shift and go to state 81
    estRepCond                     shift and go to state 82
    estRepNoCond                   shift and go to state 83
    estDesicion                    shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    asignacion                     shift and go to state 87
    identificadores                shift and go to state 91

state 57

    (13) funcion -> FUNCTION funcion2 ID parametros vars . bloque
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 95

state 58

    (16) parametros -> ( parametros2 . )
    )               shift and go to state 96


state 59

    (17) parametros2 -> tipo . ID parametros3
    ID              shift and go to state 97


state 60

    (48) identificadores2 -> [ exp ] . identificadores3
    (49) identificadores3 -> . empty
    (50) identificadores3 -> . [ exp ]
    (94) empty -> .
    [               shift and go to state 98
    ID              reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    ASSIGN          reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    DETERMINANT     reduce using rule 94 (empty -> .)
    INVERSE         reduce using rule 94 (empty -> .)
    TRANSPOSE       reduce using rule 94 (empty -> .)
    DIVIDE          reduce using rule 94 (empty -> .)
    TIMES           reduce using rule 94 (empty -> .)
    MINUS           reduce using rule 94 (empty -> .)
    PLUS            reduce using rule 94 (empty -> .)
    ]               reduce using rule 94 (empty -> .)
    NE              reduce using rule 94 (empty -> .)
    EGT             reduce using rule 94 (empty -> .)
    ELT             reduce using rule 94 (empty -> .)
    EQ              reduce using rule 94 (empty -> .)
    GT              reduce using rule 94 (empty -> .)
    LT              reduce using rule 94 (empty -> .)
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    TO              reduce using rule 94 (empty -> .)
    DO2             reduce using rule 94 (empty -> .)

    identificadores3               shift and go to state 99
    empty                          shift and go to state 100

state 61

    (68) exp -> termino exp2 .
    ]               reduce using rule 68 (exp -> termino exp2 .)
    )               reduce using rule 68 (exp -> termino exp2 .)
    ,               reduce using rule 68 (exp -> termino exp2 .)
    NE              reduce using rule 68 (exp -> termino exp2 .)
    EGT             reduce using rule 68 (exp -> termino exp2 .)
    ELT             reduce using rule 68 (exp -> termino exp2 .)
    EQ              reduce using rule 68 (exp -> termino exp2 .)
    GT              reduce using rule 68 (exp -> termino exp2 .)
    LT              reduce using rule 68 (exp -> termino exp2 .)
    AND             reduce using rule 68 (exp -> termino exp2 .)
    OR              reduce using rule 68 (exp -> termino exp2 .)
    ;               reduce using rule 68 (exp -> termino exp2 .)
    TO              reduce using rule 68 (exp -> termino exp2 .)
    DO2             reduce using rule 68 (exp -> termino exp2 .)


state 62

    (69) exp2 -> empty .
    ]               reduce using rule 69 (exp2 -> empty .)
    )               reduce using rule 69 (exp2 -> empty .)
    ,               reduce using rule 69 (exp2 -> empty .)
    NE              reduce using rule 69 (exp2 -> empty .)
    EGT             reduce using rule 69 (exp2 -> empty .)
    ELT             reduce using rule 69 (exp2 -> empty .)
    EQ              reduce using rule 69 (exp2 -> empty .)
    GT              reduce using rule 69 (exp2 -> empty .)
    LT              reduce using rule 69 (exp2 -> empty .)
    AND             reduce using rule 69 (exp2 -> empty .)
    OR              reduce using rule 69 (exp2 -> empty .)
    ;               reduce using rule 69 (exp2 -> empty .)
    TO              reduce using rule 69 (exp2 -> empty .)
    DO2             reduce using rule 69 (exp2 -> empty .)


state 63

    (70) exp2 -> MINUS . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 101
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 64

    (71) exp2 -> PLUS . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 102
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 65

    (81) termino -> opmat termino2 .
    MINUS           reduce using rule 81 (termino -> opmat termino2 .)
    PLUS            reduce using rule 81 (termino -> opmat termino2 .)
    ]               reduce using rule 81 (termino -> opmat termino2 .)
    )               reduce using rule 81 (termino -> opmat termino2 .)
    ,               reduce using rule 81 (termino -> opmat termino2 .)
    NE              reduce using rule 81 (termino -> opmat termino2 .)
    EGT             reduce using rule 81 (termino -> opmat termino2 .)
    ELT             reduce using rule 81 (termino -> opmat termino2 .)
    EQ              reduce using rule 81 (termino -> opmat termino2 .)
    GT              reduce using rule 81 (termino -> opmat termino2 .)
    LT              reduce using rule 81 (termino -> opmat termino2 .)
    AND             reduce using rule 81 (termino -> opmat termino2 .)
    OR              reduce using rule 81 (termino -> opmat termino2 .)
    ;               reduce using rule 81 (termino -> opmat termino2 .)
    TO              reduce using rule 81 (termino -> opmat termino2 .)
    DO2             reduce using rule 81 (termino -> opmat termino2 .)


state 66

    (82) termino2 -> empty .
    MINUS           reduce using rule 82 (termino2 -> empty .)
    PLUS            reduce using rule 82 (termino2 -> empty .)
    ]               reduce using rule 82 (termino2 -> empty .)
    )               reduce using rule 82 (termino2 -> empty .)
    ,               reduce using rule 82 (termino2 -> empty .)
    NE              reduce using rule 82 (termino2 -> empty .)
    EGT             reduce using rule 82 (termino2 -> empty .)
    ELT             reduce using rule 82 (termino2 -> empty .)
    EQ              reduce using rule 82 (termino2 -> empty .)
    GT              reduce using rule 82 (termino2 -> empty .)
    LT              reduce using rule 82 (termino2 -> empty .)
    AND             reduce using rule 82 (termino2 -> empty .)
    OR              reduce using rule 82 (termino2 -> empty .)
    ;               reduce using rule 82 (termino2 -> empty .)
    TO              reduce using rule 82 (termino2 -> empty .)
    DO2             reduce using rule 82 (termino2 -> empty .)


state 67

    (83) termino2 -> DIVIDE . termino
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    termino                        shift and go to state 103
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 68

    (84) termino2 -> TIMES . termino
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    termino                        shift and go to state 104
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 69

    (76) opmat -> factor opmat2 .
    DIVIDE          reduce using rule 76 (opmat -> factor opmat2 .)
    TIMES           reduce using rule 76 (opmat -> factor opmat2 .)
    MINUS           reduce using rule 76 (opmat -> factor opmat2 .)
    PLUS            reduce using rule 76 (opmat -> factor opmat2 .)
    ]               reduce using rule 76 (opmat -> factor opmat2 .)
    )               reduce using rule 76 (opmat -> factor opmat2 .)
    ,               reduce using rule 76 (opmat -> factor opmat2 .)
    NE              reduce using rule 76 (opmat -> factor opmat2 .)
    EGT             reduce using rule 76 (opmat -> factor opmat2 .)
    ELT             reduce using rule 76 (opmat -> factor opmat2 .)
    EQ              reduce using rule 76 (opmat -> factor opmat2 .)
    GT              reduce using rule 76 (opmat -> factor opmat2 .)
    LT              reduce using rule 76 (opmat -> factor opmat2 .)
    AND             reduce using rule 76 (opmat -> factor opmat2 .)
    OR              reduce using rule 76 (opmat -> factor opmat2 .)
    ;               reduce using rule 76 (opmat -> factor opmat2 .)
    TO              reduce using rule 76 (opmat -> factor opmat2 .)
    DO2             reduce using rule 76 (opmat -> factor opmat2 .)


state 70

    (77) opmat2 -> empty .
    DIVIDE          reduce using rule 77 (opmat2 -> empty .)
    TIMES           reduce using rule 77 (opmat2 -> empty .)
    MINUS           reduce using rule 77 (opmat2 -> empty .)
    PLUS            reduce using rule 77 (opmat2 -> empty .)
    ]               reduce using rule 77 (opmat2 -> empty .)
    )               reduce using rule 77 (opmat2 -> empty .)
    ,               reduce using rule 77 (opmat2 -> empty .)
    NE              reduce using rule 77 (opmat2 -> empty .)
    EGT             reduce using rule 77 (opmat2 -> empty .)
    ELT             reduce using rule 77 (opmat2 -> empty .)
    EQ              reduce using rule 77 (opmat2 -> empty .)
    GT              reduce using rule 77 (opmat2 -> empty .)
    LT              reduce using rule 77 (opmat2 -> empty .)
    AND             reduce using rule 77 (opmat2 -> empty .)
    OR              reduce using rule 77 (opmat2 -> empty .)
    ;               reduce using rule 77 (opmat2 -> empty .)
    TO              reduce using rule 77 (opmat2 -> empty .)
    DO2             reduce using rule 77 (opmat2 -> empty .)


state 71

    (78) opmat2 -> DETERMINANT .
    DIVIDE          reduce using rule 78 (opmat2 -> DETERMINANT .)
    TIMES           reduce using rule 78 (opmat2 -> DETERMINANT .)
    MINUS           reduce using rule 78 (opmat2 -> DETERMINANT .)
    PLUS            reduce using rule 78 (opmat2 -> DETERMINANT .)
    ]               reduce using rule 78 (opmat2 -> DETERMINANT .)
    )               reduce using rule 78 (opmat2 -> DETERMINANT .)
    ,               reduce using rule 78 (opmat2 -> DETERMINANT .)
    NE              reduce using rule 78 (opmat2 -> DETERMINANT .)
    EGT             reduce using rule 78 (opmat2 -> DETERMINANT .)
    ELT             reduce using rule 78 (opmat2 -> DETERMINANT .)
    EQ              reduce using rule 78 (opmat2 -> DETERMINANT .)
    GT              reduce using rule 78 (opmat2 -> DETERMINANT .)
    LT              reduce using rule 78 (opmat2 -> DETERMINANT .)
    AND             reduce using rule 78 (opmat2 -> DETERMINANT .)
    OR              reduce using rule 78 (opmat2 -> DETERMINANT .)
    ;               reduce using rule 78 (opmat2 -> DETERMINANT .)
    TO              reduce using rule 78 (opmat2 -> DETERMINANT .)
    DO2             reduce using rule 78 (opmat2 -> DETERMINANT .)


state 72

    (79) opmat2 -> INVERSE .
    DIVIDE          reduce using rule 79 (opmat2 -> INVERSE .)
    TIMES           reduce using rule 79 (opmat2 -> INVERSE .)
    MINUS           reduce using rule 79 (opmat2 -> INVERSE .)
    PLUS            reduce using rule 79 (opmat2 -> INVERSE .)
    ]               reduce using rule 79 (opmat2 -> INVERSE .)
    )               reduce using rule 79 (opmat2 -> INVERSE .)
    ,               reduce using rule 79 (opmat2 -> INVERSE .)
    NE              reduce using rule 79 (opmat2 -> INVERSE .)
    EGT             reduce using rule 79 (opmat2 -> INVERSE .)
    ELT             reduce using rule 79 (opmat2 -> INVERSE .)
    EQ              reduce using rule 79 (opmat2 -> INVERSE .)
    GT              reduce using rule 79 (opmat2 -> INVERSE .)
    LT              reduce using rule 79 (opmat2 -> INVERSE .)
    AND             reduce using rule 79 (opmat2 -> INVERSE .)
    OR              reduce using rule 79 (opmat2 -> INVERSE .)
    ;               reduce using rule 79 (opmat2 -> INVERSE .)
    TO              reduce using rule 79 (opmat2 -> INVERSE .)
    DO2             reduce using rule 79 (opmat2 -> INVERSE .)


state 73

    (80) opmat2 -> TRANSPOSE .
    DIVIDE          reduce using rule 80 (opmat2 -> TRANSPOSE .)
    TIMES           reduce using rule 80 (opmat2 -> TRANSPOSE .)
    MINUS           reduce using rule 80 (opmat2 -> TRANSPOSE .)
    PLUS            reduce using rule 80 (opmat2 -> TRANSPOSE .)
    ]               reduce using rule 80 (opmat2 -> TRANSPOSE .)
    )               reduce using rule 80 (opmat2 -> TRANSPOSE .)
    ,               reduce using rule 80 (opmat2 -> TRANSPOSE .)
    NE              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    EGT             reduce using rule 80 (opmat2 -> TRANSPOSE .)
    ELT             reduce using rule 80 (opmat2 -> TRANSPOSE .)
    EQ              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    GT              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    LT              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    AND             reduce using rule 80 (opmat2 -> TRANSPOSE .)
    OR              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    ;               reduce using rule 80 (opmat2 -> TRANSPOSE .)
    TO              reduce using rule 80 (opmat2 -> TRANSPOSE .)
    DO2             reduce using rule 80 (opmat2 -> TRANSPOSE .)


state 74

    (73) factor -> MINUS varcte .
    DETERMINANT     reduce using rule 73 (factor -> MINUS varcte .)
    INVERSE         reduce using rule 73 (factor -> MINUS varcte .)
    TRANSPOSE       reduce using rule 73 (factor -> MINUS varcte .)
    DIVIDE          reduce using rule 73 (factor -> MINUS varcte .)
    TIMES           reduce using rule 73 (factor -> MINUS varcte .)
    MINUS           reduce using rule 73 (factor -> MINUS varcte .)
    PLUS            reduce using rule 73 (factor -> MINUS varcte .)
    ]               reduce using rule 73 (factor -> MINUS varcte .)
    )               reduce using rule 73 (factor -> MINUS varcte .)
    ,               reduce using rule 73 (factor -> MINUS varcte .)
    NE              reduce using rule 73 (factor -> MINUS varcte .)
    EGT             reduce using rule 73 (factor -> MINUS varcte .)
    ELT             reduce using rule 73 (factor -> MINUS varcte .)
    EQ              reduce using rule 73 (factor -> MINUS varcte .)
    GT              reduce using rule 73 (factor -> MINUS varcte .)
    LT              reduce using rule 73 (factor -> MINUS varcte .)
    AND             reduce using rule 73 (factor -> MINUS varcte .)
    OR              reduce using rule 73 (factor -> MINUS varcte .)
    ;               reduce using rule 73 (factor -> MINUS varcte .)
    TO              reduce using rule 73 (factor -> MINUS varcte .)
    DO2             reduce using rule 73 (factor -> MINUS varcte .)


state 75

    (74) factor -> PLUS varcte .
    DETERMINANT     reduce using rule 74 (factor -> PLUS varcte .)
    INVERSE         reduce using rule 74 (factor -> PLUS varcte .)
    TRANSPOSE       reduce using rule 74 (factor -> PLUS varcte .)
    DIVIDE          reduce using rule 74 (factor -> PLUS varcte .)
    TIMES           reduce using rule 74 (factor -> PLUS varcte .)
    MINUS           reduce using rule 74 (factor -> PLUS varcte .)
    PLUS            reduce using rule 74 (factor -> PLUS varcte .)
    ]               reduce using rule 74 (factor -> PLUS varcte .)
    )               reduce using rule 74 (factor -> PLUS varcte .)
    ,               reduce using rule 74 (factor -> PLUS varcte .)
    NE              reduce using rule 74 (factor -> PLUS varcte .)
    EGT             reduce using rule 74 (factor -> PLUS varcte .)
    ELT             reduce using rule 74 (factor -> PLUS varcte .)
    EQ              reduce using rule 74 (factor -> PLUS varcte .)
    GT              reduce using rule 74 (factor -> PLUS varcte .)
    LT              reduce using rule 74 (factor -> PLUS varcte .)
    AND             reduce using rule 74 (factor -> PLUS varcte .)
    OR              reduce using rule 74 (factor -> PLUS varcte .)
    ;               reduce using rule 74 (factor -> PLUS varcte .)
    TO              reduce using rule 74 (factor -> PLUS varcte .)
    DO2             reduce using rule 74 (factor -> PLUS varcte .)


state 76

    (75) factor -> ( exp . )
    )               shift and go to state 105


state 77

    (85) llamada -> ID ( . llamada2 )
    (86) llamada2 -> . exp llamada3
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    llamada2                       shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 78

    (20) bloque -> { bloque2 . }
    }               shift and go to state 108


state 79

    (21) bloque2 -> empty .
    }               reduce using rule 21 (bloque2 -> empty .)


state 80

    (22) bloque2 -> estatuto . bloque2
    (21) bloque2 -> . empty
    (22) bloque2 -> . estatuto bloque2
    (94) empty -> .
    (23) estatuto -> . regresa
    (24) estatuto -> . estRepCond
    (25) estatuto -> . estRepNoCond
    (26) estatuto -> . estDesicion
    (27) estatuto -> . lee
    (28) estatuto -> . escritura
    (29) estatuto -> . asignacion
    (40) regresa -> . RETURN ( exp ) ;
    (44) estRepCond -> . WHILE ( expOR ) DO bloque
    (45) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (41) estDesicion -> . IF ( expOR ) bloque estDesicion2
    (31) lee -> . PRINT ( lee2 ) ;
    (35) escritura -> . WRITE ( escritura2 ) ;
    (30) asignacion -> . identificadores ASSIGN exp ;
    (46) identificadores -> . ID identificadores2
    }               reduce using rule 94 (empty -> .)
    RETURN          shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    IF              shift and go to state 92
    PRINT           shift and go to state 93
    WRITE           shift and go to state 94
    ID              shift and go to state 25

    estatuto                       shift and go to state 80
    bloque2                        shift and go to state 109
    empty                          shift and go to state 79
    regresa                        shift and go to state 81
    estRepCond                     shift and go to state 82
    estRepNoCond                   shift and go to state 83
    estDesicion                    shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    asignacion                     shift and go to state 87
    identificadores                shift and go to state 91

state 81

    (23) estatuto -> regresa .
    RETURN          reduce using rule 23 (estatuto -> regresa .)
    WHILE           reduce using rule 23 (estatuto -> regresa .)
    FROM            reduce using rule 23 (estatuto -> regresa .)
    IF              reduce using rule 23 (estatuto -> regresa .)
    PRINT           reduce using rule 23 (estatuto -> regresa .)
    WRITE           reduce using rule 23 (estatuto -> regresa .)
    ID              reduce using rule 23 (estatuto -> regresa .)
    }               reduce using rule 23 (estatuto -> regresa .)


state 82

    (24) estatuto -> estRepCond .
    RETURN          reduce using rule 24 (estatuto -> estRepCond .)
    WHILE           reduce using rule 24 (estatuto -> estRepCond .)
    FROM            reduce using rule 24 (estatuto -> estRepCond .)
    IF              reduce using rule 24 (estatuto -> estRepCond .)
    PRINT           reduce using rule 24 (estatuto -> estRepCond .)
    WRITE           reduce using rule 24 (estatuto -> estRepCond .)
    ID              reduce using rule 24 (estatuto -> estRepCond .)
    }               reduce using rule 24 (estatuto -> estRepCond .)


state 83

    (25) estatuto -> estRepNoCond .
    RETURN          reduce using rule 25 (estatuto -> estRepNoCond .)
    WHILE           reduce using rule 25 (estatuto -> estRepNoCond .)
    FROM            reduce using rule 25 (estatuto -> estRepNoCond .)
    IF              reduce using rule 25 (estatuto -> estRepNoCond .)
    PRINT           reduce using rule 25 (estatuto -> estRepNoCond .)
    WRITE           reduce using rule 25 (estatuto -> estRepNoCond .)
    ID              reduce using rule 25 (estatuto -> estRepNoCond .)
    }               reduce using rule 25 (estatuto -> estRepNoCond .)


state 84

    (26) estatuto -> estDesicion .
    RETURN          reduce using rule 26 (estatuto -> estDesicion .)
    WHILE           reduce using rule 26 (estatuto -> estDesicion .)
    FROM            reduce using rule 26 (estatuto -> estDesicion .)
    IF              reduce using rule 26 (estatuto -> estDesicion .)
    PRINT           reduce using rule 26 (estatuto -> estDesicion .)
    WRITE           reduce using rule 26 (estatuto -> estDesicion .)
    ID              reduce using rule 26 (estatuto -> estDesicion .)
    }               reduce using rule 26 (estatuto -> estDesicion .)


state 85

    (27) estatuto -> lee .
    RETURN          reduce using rule 27 (estatuto -> lee .)
    WHILE           reduce using rule 27 (estatuto -> lee .)
    FROM            reduce using rule 27 (estatuto -> lee .)
    IF              reduce using rule 27 (estatuto -> lee .)
    PRINT           reduce using rule 27 (estatuto -> lee .)
    WRITE           reduce using rule 27 (estatuto -> lee .)
    ID              reduce using rule 27 (estatuto -> lee .)
    }               reduce using rule 27 (estatuto -> lee .)


state 86

    (28) estatuto -> escritura .
    RETURN          reduce using rule 28 (estatuto -> escritura .)
    WHILE           reduce using rule 28 (estatuto -> escritura .)
    FROM            reduce using rule 28 (estatuto -> escritura .)
    IF              reduce using rule 28 (estatuto -> escritura .)
    PRINT           reduce using rule 28 (estatuto -> escritura .)
    WRITE           reduce using rule 28 (estatuto -> escritura .)
    ID              reduce using rule 28 (estatuto -> escritura .)
    }               reduce using rule 28 (estatuto -> escritura .)


state 87

    (29) estatuto -> asignacion .
    RETURN          reduce using rule 29 (estatuto -> asignacion .)
    WHILE           reduce using rule 29 (estatuto -> asignacion .)
    FROM            reduce using rule 29 (estatuto -> asignacion .)
    IF              reduce using rule 29 (estatuto -> asignacion .)
    PRINT           reduce using rule 29 (estatuto -> asignacion .)
    WRITE           reduce using rule 29 (estatuto -> asignacion .)
    ID              reduce using rule 29 (estatuto -> asignacion .)
    }               reduce using rule 29 (estatuto -> asignacion .)


state 88

    (40) regresa -> RETURN . ( exp ) ;
    (               shift and go to state 110


state 89

    (44) estRepCond -> WHILE . ( expOR ) DO bloque
    (               shift and go to state 111


state 90

    (45) estRepNoCond -> FROM . identificadores ASSIGN exp TO exp DO2 bloque
    (46) identificadores -> . ID identificadores2
    ID              shift and go to state 25

    identificadores                shift and go to state 112

state 91

    (30) asignacion -> identificadores . ASSIGN exp ;
    ASSIGN          shift and go to state 113


state 92

    (41) estDesicion -> IF . ( expOR ) bloque estDesicion2
    (               shift and go to state 114


state 93

    (31) lee -> PRINT . ( lee2 ) ;
    (               shift and go to state 115


state 94

    (35) escritura -> WRITE . ( escritura2 ) ;
    (               shift and go to state 116


state 95

    (13) funcion -> FUNCTION funcion2 ID parametros vars bloque .
    VAR             reduce using rule 13 (funcion -> FUNCTION funcion2 ID parametros vars bloque .)
    PRINCIPAL       reduce using rule 13 (funcion -> FUNCTION funcion2 ID parametros vars bloque .)


state 96

    (16) parametros -> ( parametros2 ) .
    VAR             reduce using rule 16 (parametros -> ( parametros2 ) .)


state 97

    (17) parametros2 -> tipo ID . parametros3
    (18) parametros3 -> . empty
    (19) parametros3 -> . , parametros2
    (94) empty -> .
    ,               shift and go to state 119
    )               reduce using rule 94 (empty -> .)

    parametros3                    shift and go to state 117
    empty                          shift and go to state 118

state 98

    (50) identificadores3 -> [ . exp ]
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 120
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 99

    (48) identificadores2 -> [ exp ] identificadores3 .
    ID              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    ;               reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    ASSIGN          reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    ,               reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    )               reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    DETERMINANT     reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    INVERSE         reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    TRANSPOSE       reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    DIVIDE          reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    TIMES           reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    MINUS           reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    PLUS            reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    ]               reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    NE              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    EGT             reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    ELT             reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    EQ              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    GT              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    LT              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    AND             reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    OR              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    TO              reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)
    DO2             reduce using rule 48 (identificadores2 -> [ exp ] identificadores3 .)


state 100

    (49) identificadores3 -> empty .
    ID              reduce using rule 49 (identificadores3 -> empty .)
    ;               reduce using rule 49 (identificadores3 -> empty .)
    ASSIGN          reduce using rule 49 (identificadores3 -> empty .)
    ,               reduce using rule 49 (identificadores3 -> empty .)
    )               reduce using rule 49 (identificadores3 -> empty .)
    DETERMINANT     reduce using rule 49 (identificadores3 -> empty .)
    INVERSE         reduce using rule 49 (identificadores3 -> empty .)
    TRANSPOSE       reduce using rule 49 (identificadores3 -> empty .)
    DIVIDE          reduce using rule 49 (identificadores3 -> empty .)
    TIMES           reduce using rule 49 (identificadores3 -> empty .)
    MINUS           reduce using rule 49 (identificadores3 -> empty .)
    PLUS            reduce using rule 49 (identificadores3 -> empty .)
    ]               reduce using rule 49 (identificadores3 -> empty .)
    NE              reduce using rule 49 (identificadores3 -> empty .)
    EGT             reduce using rule 49 (identificadores3 -> empty .)
    ELT             reduce using rule 49 (identificadores3 -> empty .)
    EQ              reduce using rule 49 (identificadores3 -> empty .)
    GT              reduce using rule 49 (identificadores3 -> empty .)
    LT              reduce using rule 49 (identificadores3 -> empty .)
    AND             reduce using rule 49 (identificadores3 -> empty .)
    OR              reduce using rule 49 (identificadores3 -> empty .)
    TO              reduce using rule 49 (identificadores3 -> empty .)
    DO2             reduce using rule 49 (identificadores3 -> empty .)


state 101

    (70) exp2 -> MINUS exp .
    ]               reduce using rule 70 (exp2 -> MINUS exp .)
    )               reduce using rule 70 (exp2 -> MINUS exp .)
    ,               reduce using rule 70 (exp2 -> MINUS exp .)
    NE              reduce using rule 70 (exp2 -> MINUS exp .)
    EGT             reduce using rule 70 (exp2 -> MINUS exp .)
    ELT             reduce using rule 70 (exp2 -> MINUS exp .)
    EQ              reduce using rule 70 (exp2 -> MINUS exp .)
    GT              reduce using rule 70 (exp2 -> MINUS exp .)
    LT              reduce using rule 70 (exp2 -> MINUS exp .)
    AND             reduce using rule 70 (exp2 -> MINUS exp .)
    OR              reduce using rule 70 (exp2 -> MINUS exp .)
    ;               reduce using rule 70 (exp2 -> MINUS exp .)
    TO              reduce using rule 70 (exp2 -> MINUS exp .)
    DO2             reduce using rule 70 (exp2 -> MINUS exp .)


state 102

    (71) exp2 -> PLUS exp .
    ]               reduce using rule 71 (exp2 -> PLUS exp .)
    )               reduce using rule 71 (exp2 -> PLUS exp .)
    ,               reduce using rule 71 (exp2 -> PLUS exp .)
    NE              reduce using rule 71 (exp2 -> PLUS exp .)
    EGT             reduce using rule 71 (exp2 -> PLUS exp .)
    ELT             reduce using rule 71 (exp2 -> PLUS exp .)
    EQ              reduce using rule 71 (exp2 -> PLUS exp .)
    GT              reduce using rule 71 (exp2 -> PLUS exp .)
    LT              reduce using rule 71 (exp2 -> PLUS exp .)
    AND             reduce using rule 71 (exp2 -> PLUS exp .)
    OR              reduce using rule 71 (exp2 -> PLUS exp .)
    ;               reduce using rule 71 (exp2 -> PLUS exp .)
    TO              reduce using rule 71 (exp2 -> PLUS exp .)
    DO2             reduce using rule 71 (exp2 -> PLUS exp .)


state 103

    (83) termino2 -> DIVIDE termino .
    MINUS           reduce using rule 83 (termino2 -> DIVIDE termino .)
    PLUS            reduce using rule 83 (termino2 -> DIVIDE termino .)
    ]               reduce using rule 83 (termino2 -> DIVIDE termino .)
    )               reduce using rule 83 (termino2 -> DIVIDE termino .)
    ,               reduce using rule 83 (termino2 -> DIVIDE termino .)
    NE              reduce using rule 83 (termino2 -> DIVIDE termino .)
    EGT             reduce using rule 83 (termino2 -> DIVIDE termino .)
    ELT             reduce using rule 83 (termino2 -> DIVIDE termino .)
    EQ              reduce using rule 83 (termino2 -> DIVIDE termino .)
    GT              reduce using rule 83 (termino2 -> DIVIDE termino .)
    LT              reduce using rule 83 (termino2 -> DIVIDE termino .)
    AND             reduce using rule 83 (termino2 -> DIVIDE termino .)
    OR              reduce using rule 83 (termino2 -> DIVIDE termino .)
    ;               reduce using rule 83 (termino2 -> DIVIDE termino .)
    TO              reduce using rule 83 (termino2 -> DIVIDE termino .)
    DO2             reduce using rule 83 (termino2 -> DIVIDE termino .)


state 104

    (84) termino2 -> TIMES termino .
    MINUS           reduce using rule 84 (termino2 -> TIMES termino .)
    PLUS            reduce using rule 84 (termino2 -> TIMES termino .)
    ]               reduce using rule 84 (termino2 -> TIMES termino .)
    )               reduce using rule 84 (termino2 -> TIMES termino .)
    ,               reduce using rule 84 (termino2 -> TIMES termino .)
    NE              reduce using rule 84 (termino2 -> TIMES termino .)
    EGT             reduce using rule 84 (termino2 -> TIMES termino .)
    ELT             reduce using rule 84 (termino2 -> TIMES termino .)
    EQ              reduce using rule 84 (termino2 -> TIMES termino .)
    GT              reduce using rule 84 (termino2 -> TIMES termino .)
    LT              reduce using rule 84 (termino2 -> TIMES termino .)
    AND             reduce using rule 84 (termino2 -> TIMES termino .)
    OR              reduce using rule 84 (termino2 -> TIMES termino .)
    ;               reduce using rule 84 (termino2 -> TIMES termino .)
    TO              reduce using rule 84 (termino2 -> TIMES termino .)
    DO2             reduce using rule 84 (termino2 -> TIMES termino .)


state 105

    (75) factor -> ( exp ) .
    DETERMINANT     reduce using rule 75 (factor -> ( exp ) .)
    INVERSE         reduce using rule 75 (factor -> ( exp ) .)
    TRANSPOSE       reduce using rule 75 (factor -> ( exp ) .)
    DIVIDE          reduce using rule 75 (factor -> ( exp ) .)
    TIMES           reduce using rule 75 (factor -> ( exp ) .)
    MINUS           reduce using rule 75 (factor -> ( exp ) .)
    PLUS            reduce using rule 75 (factor -> ( exp ) .)
    ]               reduce using rule 75 (factor -> ( exp ) .)
    )               reduce using rule 75 (factor -> ( exp ) .)
    ,               reduce using rule 75 (factor -> ( exp ) .)
    NE              reduce using rule 75 (factor -> ( exp ) .)
    EGT             reduce using rule 75 (factor -> ( exp ) .)
    ELT             reduce using rule 75 (factor -> ( exp ) .)
    EQ              reduce using rule 75 (factor -> ( exp ) .)
    GT              reduce using rule 75 (factor -> ( exp ) .)
    LT              reduce using rule 75 (factor -> ( exp ) .)
    AND             reduce using rule 75 (factor -> ( exp ) .)
    OR              reduce using rule 75 (factor -> ( exp ) .)
    ;               reduce using rule 75 (factor -> ( exp ) .)
    TO              reduce using rule 75 (factor -> ( exp ) .)
    DO2             reduce using rule 75 (factor -> ( exp ) .)


state 106

    (85) llamada -> ID ( llamada2 . )
    )               shift and go to state 121


state 107

    (86) llamada2 -> exp . llamada3
    (87) llamada3 -> . empty
    (88) llamada3 -> . , llamada2
    (94) empty -> .
    ,               shift and go to state 124
    )               reduce using rule 94 (empty -> .)

    llamada3                       shift and go to state 122
    empty                          shift and go to state 123

state 108

    (20) bloque -> { bloque2 } .
    $end            reduce using rule 20 (bloque -> { bloque2 } .)
    VAR             reduce using rule 20 (bloque -> { bloque2 } .)
    PRINCIPAL       reduce using rule 20 (bloque -> { bloque2 } .)
    ELSE            reduce using rule 20 (bloque -> { bloque2 } .)
    RETURN          reduce using rule 20 (bloque -> { bloque2 } .)
    WHILE           reduce using rule 20 (bloque -> { bloque2 } .)
    FROM            reduce using rule 20 (bloque -> { bloque2 } .)
    IF              reduce using rule 20 (bloque -> { bloque2 } .)
    PRINT           reduce using rule 20 (bloque -> { bloque2 } .)
    WRITE           reduce using rule 20 (bloque -> { bloque2 } .)
    ID              reduce using rule 20 (bloque -> { bloque2 } .)
    }               reduce using rule 20 (bloque -> { bloque2 } .)


state 109

    (22) bloque2 -> estatuto bloque2 .
    }               reduce using rule 22 (bloque2 -> estatuto bloque2 .)


state 110

    (40) regresa -> RETURN ( . exp ) ;
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 125
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 111

    (44) estRepCond -> WHILE ( . expOR ) DO bloque
    (54) expOR -> . expAND expOR2
    (57) expAND -> . expresion expAND2
    (60) expresion -> . exp expresion2
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    expOR                          shift and go to state 126
    expAND                         shift and go to state 127
    expresion                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 112

    (45) estRepNoCond -> FROM identificadores . ASSIGN exp TO exp DO2 bloque
    ASSIGN          shift and go to state 130


state 113

    (30) asignacion -> identificadores ASSIGN . exp ;
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    identificadores                shift and go to state 53
    exp                            shift and go to state 131
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49

state 114

    (41) estDesicion -> IF ( . expOR ) bloque estDesicion2
    (54) expOR -> . expAND expOR2
    (57) expAND -> . expresion expAND2
    (60) expresion -> . exp expresion2
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    expOR                          shift and go to state 132
    expAND                         shift and go to state 127
    expresion                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 115

    (31) lee -> PRINT ( . lee2 ) ;
    (32) lee2 -> . identificadores lee3
    (46) identificadores -> . ID identificadores2
    ID              shift and go to state 25

    lee2                           shift and go to state 133
    identificadores                shift and go to state 134

state 116

    (35) escritura -> WRITE ( . escritura2 ) ;
    (36) escritura2 -> . STRING escritura3
    (37) escritura2 -> . exp escritura3
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    STRING          shift and go to state 136
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    escritura2                     shift and go to state 135
    exp                            shift and go to state 137
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 117

    (17) parametros2 -> tipo ID parametros3 .
    )               reduce using rule 17 (parametros2 -> tipo ID parametros3 .)


state 118

    (18) parametros3 -> empty .
    )               reduce using rule 18 (parametros3 -> empty .)


state 119

    (19) parametros3 -> , . parametros2
    (17) parametros2 -> . tipo ID parametros3
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . INT
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    INT             shift and go to state 17

    parametros2                    shift and go to state 138
    tipo                           shift and go to state 59

state 120

    (50) identificadores3 -> [ exp . ]
    ]               shift and go to state 139


state 121

    (85) llamada -> ID ( llamada2 ) .
    DETERMINANT     reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    INVERSE         reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    TRANSPOSE       reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    DIVIDE          reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    TIMES           reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    MINUS           reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    PLUS            reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    ]               reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    )               reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    ,               reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    NE              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    EGT             reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    ELT             reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    EQ              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    GT              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    LT              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    AND             reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    OR              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    ;               reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    TO              reduce using rule 85 (llamada -> ID ( llamada2 ) .)
    DO2             reduce using rule 85 (llamada -> ID ( llamada2 ) .)


state 122

    (86) llamada2 -> exp llamada3 .
    )               reduce using rule 86 (llamada2 -> exp llamada3 .)


state 123

    (87) llamada3 -> empty .
    )               reduce using rule 87 (llamada3 -> empty .)


state 124

    (88) llamada3 -> , . llamada2
    (86) llamada2 -> . exp llamada3
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    llamada2                       shift and go to state 140
    exp                            shift and go to state 107
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 125

    (40) regresa -> RETURN ( exp . ) ;
    )               shift and go to state 141


state 126

    (44) estRepCond -> WHILE ( expOR . ) DO bloque
    )               shift and go to state 142


state 127

    (54) expOR -> expAND . expOR2
    (55) expOR2 -> . empty
    (56) expOR2 -> . OR expOR
    (94) empty -> .
    OR              shift and go to state 145
    )               reduce using rule 94 (empty -> .)

    expOR2                         shift and go to state 143
    empty                          shift and go to state 144

state 128

    (57) expAND -> expresion . expAND2
    (58) expAND2 -> . empty
    (59) expAND2 -> . AND expAND
    (94) empty -> .
    AND             shift and go to state 148
    OR              reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)

    expAND2                        shift and go to state 146
    empty                          shift and go to state 147

state 129

    (60) expresion -> exp . expresion2
    (61) expresion2 -> . empty
    (62) expresion2 -> . NE exp
    (63) expresion2 -> . EGT exp
    (64) expresion2 -> . ELT exp
    (65) expresion2 -> . EQ exp
    (66) expresion2 -> . GT exp
    (67) expresion2 -> . LT exp
    (94) empty -> .
    NE              shift and go to state 151
    EGT             shift and go to state 152
    ELT             shift and go to state 153
    EQ              shift and go to state 154
    GT              shift and go to state 155
    LT              shift and go to state 156
    AND             reduce using rule 94 (empty -> .)
    OR              reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)

    expresion2                     shift and go to state 149
    empty                          shift and go to state 150

state 130

    (45) estRepNoCond -> FROM identificadores ASSIGN . exp TO exp DO2 bloque
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    identificadores                shift and go to state 53
    exp                            shift and go to state 157
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49

state 131

    (30) asignacion -> identificadores ASSIGN exp . ;
    ;               shift and go to state 158


state 132

    (41) estDesicion -> IF ( expOR . ) bloque estDesicion2
    )               shift and go to state 159


state 133

    (31) lee -> PRINT ( lee2 . ) ;
    )               shift and go to state 160


state 134

    (32) lee2 -> identificadores . lee3
    (33) lee3 -> . empty
    (34) lee3 -> . , lee2
    (94) empty -> .
    ,               shift and go to state 163
    )               reduce using rule 94 (empty -> .)

    lee3                           shift and go to state 161
    empty                          shift and go to state 162

state 135

    (35) escritura -> WRITE ( escritura2 . ) ;
    )               shift and go to state 164


state 136

    (36) escritura2 -> STRING . escritura3
    (38) escritura3 -> . empty
    (39) escritura3 -> . , escritura2
    (94) empty -> .
    ,               shift and go to state 167
    )               reduce using rule 94 (empty -> .)

    escritura3                     shift and go to state 165
    empty                          shift and go to state 166

state 137

    (37) escritura2 -> exp . escritura3
    (38) escritura3 -> . empty
    (39) escritura3 -> . , escritura2
    (94) empty -> .
    ,               shift and go to state 167
    )               reduce using rule 94 (empty -> .)

    escritura3                     shift and go to state 168
    empty                          shift and go to state 166

state 138

    (19) parametros3 -> , parametros2 .
    )               reduce using rule 19 (parametros3 -> , parametros2 .)


state 139

    (50) identificadores3 -> [ exp ] .
    ID              reduce using rule 50 (identificadores3 -> [ exp ] .)
    ;               reduce using rule 50 (identificadores3 -> [ exp ] .)
    ASSIGN          reduce using rule 50 (identificadores3 -> [ exp ] .)
    ,               reduce using rule 50 (identificadores3 -> [ exp ] .)
    )               reduce using rule 50 (identificadores3 -> [ exp ] .)
    DETERMINANT     reduce using rule 50 (identificadores3 -> [ exp ] .)
    INVERSE         reduce using rule 50 (identificadores3 -> [ exp ] .)
    TRANSPOSE       reduce using rule 50 (identificadores3 -> [ exp ] .)
    DIVIDE          reduce using rule 50 (identificadores3 -> [ exp ] .)
    TIMES           reduce using rule 50 (identificadores3 -> [ exp ] .)
    MINUS           reduce using rule 50 (identificadores3 -> [ exp ] .)
    PLUS            reduce using rule 50 (identificadores3 -> [ exp ] .)
    ]               reduce using rule 50 (identificadores3 -> [ exp ] .)
    NE              reduce using rule 50 (identificadores3 -> [ exp ] .)
    EGT             reduce using rule 50 (identificadores3 -> [ exp ] .)
    ELT             reduce using rule 50 (identificadores3 -> [ exp ] .)
    EQ              reduce using rule 50 (identificadores3 -> [ exp ] .)
    GT              reduce using rule 50 (identificadores3 -> [ exp ] .)
    LT              reduce using rule 50 (identificadores3 -> [ exp ] .)
    AND             reduce using rule 50 (identificadores3 -> [ exp ] .)
    OR              reduce using rule 50 (identificadores3 -> [ exp ] .)
    TO              reduce using rule 50 (identificadores3 -> [ exp ] .)
    DO2             reduce using rule 50 (identificadores3 -> [ exp ] .)


state 140

    (88) llamada3 -> , llamada2 .
    )               reduce using rule 88 (llamada3 -> , llamada2 .)


state 141

    (40) regresa -> RETURN ( exp ) . ;
    ;               shift and go to state 169


state 142

    (44) estRepCond -> WHILE ( expOR ) . DO bloque
    DO              shift and go to state 170


state 143

    (54) expOR -> expAND expOR2 .
    )               reduce using rule 54 (expOR -> expAND expOR2 .)


state 144

    (55) expOR2 -> empty .
    )               reduce using rule 55 (expOR2 -> empty .)


state 145

    (56) expOR2 -> OR . expOR
    (54) expOR -> . expAND expOR2
    (57) expAND -> . expresion expAND2
    (60) expresion -> . exp expresion2
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    expOR                          shift and go to state 171
    expAND                         shift and go to state 127
    expresion                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 146

    (57) expAND -> expresion expAND2 .
    OR              reduce using rule 57 (expAND -> expresion expAND2 .)
    )               reduce using rule 57 (expAND -> expresion expAND2 .)


state 147

    (58) expAND2 -> empty .
    OR              reduce using rule 58 (expAND2 -> empty .)
    )               reduce using rule 58 (expAND2 -> empty .)


state 148

    (59) expAND2 -> AND . expAND
    (57) expAND -> . expresion expAND2
    (60) expresion -> . exp expresion2
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    expAND                         shift and go to state 172
    expresion                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 149

    (60) expresion -> exp expresion2 .
    AND             reduce using rule 60 (expresion -> exp expresion2 .)
    OR              reduce using rule 60 (expresion -> exp expresion2 .)
    )               reduce using rule 60 (expresion -> exp expresion2 .)


state 150

    (61) expresion2 -> empty .
    AND             reduce using rule 61 (expresion2 -> empty .)
    OR              reduce using rule 61 (expresion2 -> empty .)
    )               reduce using rule 61 (expresion2 -> empty .)


state 151

    (62) expresion2 -> NE . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 173
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 152

    (63) expresion2 -> EGT . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 174
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 153

    (64) expresion2 -> ELT . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 175
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 154

    (65) expresion2 -> EQ . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 176
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 155

    (66) expresion2 -> GT . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 177
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 156

    (67) expresion2 -> LT . exp
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    exp                            shift and go to state 178
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 157

    (45) estRepNoCond -> FROM identificadores ASSIGN exp . TO exp DO2 bloque
    TO              shift and go to state 179


state 158

    (30) asignacion -> identificadores ASSIGN exp ; .
    RETURN          reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    WHILE           reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    FROM            reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    IF              reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    PRINT           reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    WRITE           reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    ID              reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)
    }               reduce using rule 30 (asignacion -> identificadores ASSIGN exp ; .)


state 159

    (41) estDesicion -> IF ( expOR ) . bloque estDesicion2
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 180

state 160

    (31) lee -> PRINT ( lee2 ) . ;
    ;               shift and go to state 181


state 161

    (32) lee2 -> identificadores lee3 .
    )               reduce using rule 32 (lee2 -> identificadores lee3 .)


state 162

    (33) lee3 -> empty .
    )               reduce using rule 33 (lee3 -> empty .)


state 163

    (34) lee3 -> , . lee2
    (32) lee2 -> . identificadores lee3
    (46) identificadores -> . ID identificadores2
    ID              shift and go to state 25

    lee2                           shift and go to state 182
    identificadores                shift and go to state 134

state 164

    (35) escritura -> WRITE ( escritura2 ) . ;
    ;               shift and go to state 183


state 165

    (36) escritura2 -> STRING escritura3 .
    )               reduce using rule 36 (escritura2 -> STRING escritura3 .)


state 166

    (38) escritura3 -> empty .
    )               reduce using rule 38 (escritura3 -> empty .)


state 167

    (39) escritura3 -> , . escritura2
    (36) escritura2 -> . STRING escritura3
    (37) escritura2 -> . exp escritura3
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    STRING          shift and go to state 136
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    escritura2                     shift and go to state 184
    exp                            shift and go to state 137
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49
    identificadores                shift and go to state 53

state 168

    (37) escritura2 -> exp escritura3 .
    )               reduce using rule 37 (escritura2 -> exp escritura3 .)


state 169

    (40) regresa -> RETURN ( exp ) ; .
    RETURN          reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    WHILE           reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    FROM            reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    IF              reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    PRINT           reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    WRITE           reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    ID              reduce using rule 40 (regresa -> RETURN ( exp ) ; .)
    }               reduce using rule 40 (regresa -> RETURN ( exp ) ; .)


state 170

    (44) estRepCond -> WHILE ( expOR ) DO . bloque
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 185

state 171

    (56) expOR2 -> OR expOR .
    )               reduce using rule 56 (expOR2 -> OR expOR .)


state 172

    (59) expAND2 -> AND expAND .
    OR              reduce using rule 59 (expAND2 -> AND expAND .)
    )               reduce using rule 59 (expAND2 -> AND expAND .)


state 173

    (62) expresion2 -> NE exp .
    AND             reduce using rule 62 (expresion2 -> NE exp .)
    OR              reduce using rule 62 (expresion2 -> NE exp .)
    )               reduce using rule 62 (expresion2 -> NE exp .)


state 174

    (63) expresion2 -> EGT exp .
    AND             reduce using rule 63 (expresion2 -> EGT exp .)
    OR              reduce using rule 63 (expresion2 -> EGT exp .)
    )               reduce using rule 63 (expresion2 -> EGT exp .)


state 175

    (64) expresion2 -> ELT exp .
    AND             reduce using rule 64 (expresion2 -> ELT exp .)
    OR              reduce using rule 64 (expresion2 -> ELT exp .)
    )               reduce using rule 64 (expresion2 -> ELT exp .)


state 176

    (65) expresion2 -> EQ exp .
    AND             reduce using rule 65 (expresion2 -> EQ exp .)
    OR              reduce using rule 65 (expresion2 -> EQ exp .)
    )               reduce using rule 65 (expresion2 -> EQ exp .)


state 177

    (66) expresion2 -> GT exp .
    AND             reduce using rule 66 (expresion2 -> GT exp .)
    OR              reduce using rule 66 (expresion2 -> GT exp .)
    )               reduce using rule 66 (expresion2 -> GT exp .)


state 178

    (67) expresion2 -> LT exp .
    AND             reduce using rule 67 (expresion2 -> LT exp .)
    OR              reduce using rule 67 (expresion2 -> LT exp .)
    )               reduce using rule 67 (expresion2 -> LT exp .)


state 179

    (45) estRepNoCond -> FROM identificadores ASSIGN exp TO . exp DO2 bloque
    (68) exp -> . termino exp2
    (81) termino -> . opmat termino2
    (76) opmat -> . factor opmat2
    (72) factor -> . varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . PLUS varcte
    (75) factor -> . ( exp )
    (89) varcte -> . llamada
    (90) varcte -> . FLOATNUMBER
    (91) varcte -> . CHARACTER
    (92) varcte -> . INTNUMBER
    (93) varcte -> . identificadores
    (85) llamada -> . ID ( llamada2 )
    (46) identificadores -> . ID identificadores2
    MINUS           shift and go to state 46
    PLUS            shift and go to state 47
    (               shift and go to state 48
    FLOATNUMBER     shift and go to state 50
    CHARACTER       shift and go to state 51
    INTNUMBER       shift and go to state 52
    ID              shift and go to state 54

    identificadores                shift and go to state 53
    exp                            shift and go to state 186
    termino                        shift and go to state 42
    opmat                          shift and go to state 43
    factor                         shift and go to state 44
    varcte                         shift and go to state 45
    llamada                        shift and go to state 49

state 180

    (41) estDesicion -> IF ( expOR ) bloque . estDesicion2
    (42) estDesicion2 -> . empty
    (43) estDesicion2 -> . ELSE bloque
    (94) empty -> .
    ELSE            shift and go to state 189
    RETURN          reduce using rule 94 (empty -> .)
    WHILE           reduce using rule 94 (empty -> .)
    FROM            reduce using rule 94 (empty -> .)
    IF              reduce using rule 94 (empty -> .)
    PRINT           reduce using rule 94 (empty -> .)
    WRITE           reduce using rule 94 (empty -> .)
    ID              reduce using rule 94 (empty -> .)
    }               reduce using rule 94 (empty -> .)

    estDesicion2                   shift and go to state 187
    empty                          shift and go to state 188

state 181

    (31) lee -> PRINT ( lee2 ) ; .
    RETURN          reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    WHILE           reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    FROM            reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    IF              reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    PRINT           reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    WRITE           reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    ID              reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)
    }               reduce using rule 31 (lee -> PRINT ( lee2 ) ; .)


state 182

    (34) lee3 -> , lee2 .
    )               reduce using rule 34 (lee3 -> , lee2 .)


state 183

    (35) escritura -> WRITE ( escritura2 ) ; .
    RETURN          reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    WHILE           reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    FROM            reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    IF              reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    PRINT           reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    WRITE           reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    ID              reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)
    }               reduce using rule 35 (escritura -> WRITE ( escritura2 ) ; .)


state 184

    (39) escritura3 -> , escritura2 .
    )               reduce using rule 39 (escritura3 -> , escritura2 .)


state 185

    (44) estRepCond -> WHILE ( expOR ) DO bloque .
    RETURN          reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WHILE           reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    FROM            reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    IF              reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    PRINT           reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WRITE           reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    ID              reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)
    }               reduce using rule 44 (estRepCond -> WHILE ( expOR ) DO bloque .)


state 186

    (45) estRepNoCond -> FROM identificadores ASSIGN exp TO exp . DO2 bloque
    DO2             shift and go to state 190


state 187

    (41) estDesicion -> IF ( expOR ) bloque estDesicion2 .
    RETURN          reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    WHILE           reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    FROM            reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    IF              reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    PRINT           reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    WRITE           reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    ID              reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    }               reduce using rule 41 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)


state 188

    (42) estDesicion2 -> empty .
    RETURN          reduce using rule 42 (estDesicion2 -> empty .)
    WHILE           reduce using rule 42 (estDesicion2 -> empty .)
    FROM            reduce using rule 42 (estDesicion2 -> empty .)
    IF              reduce using rule 42 (estDesicion2 -> empty .)
    PRINT           reduce using rule 42 (estDesicion2 -> empty .)
    WRITE           reduce using rule 42 (estDesicion2 -> empty .)
    ID              reduce using rule 42 (estDesicion2 -> empty .)
    }               reduce using rule 42 (estDesicion2 -> empty .)


state 189

    (43) estDesicion2 -> ELSE . bloque
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 191

state 190

    (45) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 . bloque
    (20) bloque -> . { bloque2 }
    {               shift and go to state 56

    bloque                         shift and go to state 192

state 191

    (43) estDesicion2 -> ELSE bloque .
    RETURN          reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    WHILE           reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    FROM            reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    IF              reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    PRINT           reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    WRITE           reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    ID              reduce using rule 43 (estDesicion2 -> ELSE bloque .)
    }               reduce using rule 43 (estDesicion2 -> ELSE bloque .)


state 192

    (45) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .
    RETURN          reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WHILE           reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    FROM            reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    IF              reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    PRINT           reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WRITE           reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    ID              reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    }               reduce using rule 45 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
