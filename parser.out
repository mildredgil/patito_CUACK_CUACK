Grammar:

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
Rule 2     set_global -> <empty>
Rule 3     programa2 -> empty
Rule 4     programa2 -> vars
Rule 5     programa3 -> empty
Rule 6     programa3 -> funcion programa3
Rule 7     vars -> VAR var1
Rule 8     var1 -> tipo set_type ids ; var2
Rule 9     set_type -> <empty>
Rule 10    var2 -> empty
Rule 11    var2 -> var1
Rule 12    ids -> identificadores ids2
Rule 13    ids2 -> empty
Rule 14    ids2 -> , ids
Rule 15    funcion -> FUNCTION funcion2 ID save_id parametros vars bloque
Rule 16    save_id -> <empty>
Rule 17    funcion2 -> VOID
Rule 18    funcion2 -> tipo
Rule 19    parametros -> ( parametros2 )
Rule 20    parametros2 -> tipo ID parametros3
Rule 21    parametros3 -> empty
Rule 22    parametros3 -> , parametros2
Rule 23    bloque -> { bloque2 }
Rule 24    bloque2 -> empty
Rule 25    bloque2 -> estatuto bloque2
Rule 26    estatuto -> regresa
Rule 27    estatuto -> estRepCond
Rule 28    estatuto -> estRepNoCond
Rule 29    estatuto -> estDesicion
Rule 30    estatuto -> lee
Rule 31    estatuto -> escritura
Rule 32    estatuto -> asignacion
Rule 33    asignacion -> identificadores asignacion_insert_var ASSIGN exp ;
Rule 34    asignacion_insert_var -> <empty>
Rule 35    lee -> PRINT ( lee2 ) ;
Rule 36    lee2 -> identificadores lee3
Rule 37    lee3 -> empty
Rule 38    lee3 -> , lee2
Rule 39    escritura -> WRITE ( escritura2 ) ;
Rule 40    escritura2 -> STRING escritura3
Rule 41    escritura2 -> exp escritura3
Rule 42    escritura3 -> empty
Rule 43    escritura3 -> , escritura2
Rule 44    regresa -> RETURN ( exp ) ;
Rule 45    estDesicion -> IF ( expOR ) bloque estDesicion2
Rule 46    estDesicion2 -> empty
Rule 47    estDesicion2 -> ELSE bloque
Rule 48    estRepCond -> WHILE ( expOR ) DO bloque
Rule 49    estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque
Rule 50    identificadores -> ID identificadores2
Rule 51    identificadores2 -> empty
Rule 52    identificadores2 -> [ exp ] identificadores3
Rule 53    identificadores3 -> empty
Rule 54    identificadores3 -> [ exp ]
Rule 55    tipo -> FLOAT
Rule 56    tipo -> CHAR
Rule 57    tipo -> INT
Rule 58    expOR -> expAND expOR2
Rule 59    expOR2 -> empty
Rule 60    expOR2 -> OR expOR
Rule 61    expAND -> expresion expAND2
Rule 62    expAND2 -> empty
Rule 63    expAND2 -> AND expAND
Rule 64    expresion -> exp expresion2
Rule 65    expresion2 -> empty
Rule 66    expresion2 -> NE exp
Rule 67    expresion2 -> EGT exp
Rule 68    expresion2 -> ELT exp
Rule 69    expresion2 -> EQ exp
Rule 70    expresion2 -> GT exp
Rule 71    expresion2 -> LT exp
Rule 72    exp -> termino exp2
Rule 73    exp2 -> empty
Rule 74    exp2 -> MINUS minus_insert exp  [precedence=left, level=1]
Rule 75    exp2 -> PLUS plus_insert exp  [precedence=left, level=1]
Rule 76    plus_insert -> <empty>
Rule 77    minus_insert -> <empty>
Rule 78    factor -> varcte
Rule 79    factor -> MINUS varcte  [precedence=left, level=1]
Rule 80    factor -> PLUS varcte  [precedence=left, level=1]
Rule 81    factor -> ( exp )
Rule 82    opmat -> factor opmat2
Rule 83    opmat2 -> empty
Rule 84    opmat2 -> DETERMINANT
Rule 85    opmat2 -> INVERSE
Rule 86    opmat2 -> TRANSPOSE
Rule 87    termino -> opmat termino2
Rule 88    termino2 -> empty
Rule 89    termino2 -> DIVIDE term_op_insert termino
Rule 90    termino2 -> TIMES term_op_insert termino
Rule 91    term_op_insert -> <empty>
Rule 92    llamada -> ID ( llamada2 )
Rule 93    llamada2 -> exp llamada3
Rule 94    llamada3 -> empty
Rule 95    llamada3 -> , llamada2
Rule 96    varcte -> llamada
Rule 97    varcte -> FLOATNUMBER
Rule 98    varcte -> CHARACTER
Rule 99    varcte -> INTNUMBER
Rule 100   varcte -> identificadores
Rule 101   empty -> <empty>

Terminals, with rules where they appear:

(                    : 1 19 35 39 44 45 48 81 92
)                    : 1 19 35 39 44 45 48 81 92
,                    : 14 22 38 43 95
;                    : 1 8 33 35 39 44
AND                  : 63
ASSIGN               : 33 49
CHAR                 : 56
CHARACTER            : 98
DETERMINANT          : 84
DIVIDE               : 89
DO                   : 48
DO2                  : 49
EGT                  : 67
ELSE                 : 47
ELT                  : 68
EQ                   : 69
FLOAT                : 55
FLOATNUMBER          : 97
FROM                 : 49
FUNCTION             : 15
GT                   : 70
ID                   : 1 15 20 50 92
IF                   : 45
INT                  : 57
INTNUMBER            : 99
INVERSE              : 85
LT                   : 71
MINUS                : 74 79
NE                   : 66
OR                   : 60
PLUS                 : 75 80
PRINCIPAL            : 1
PRINT                : 35
PROGRAM              : 1
RETURN               : 44
STRING               : 40
TIMES                : 90
TO                   : 49
TRANSPOSE            : 86
VAR                  : 7
VOID                 : 17
WHILE                : 48
WRITE                : 39
[                    : 52 54
]                    : 52 54
error                : 
{                    : 23
}                    : 23

Nonterminals, with rules where they appear:

asignacion           : 32
asignacion_insert_var : 33
bloque               : 1 15 45 47 48 49
bloque2              : 23 25
empty                : 3 5 10 13 21 24 37 42 46 51 53 59 62 65 73 83 88 94
escritura            : 31
escritura2           : 39 43
escritura3           : 40 41
estDesicion          : 29
estDesicion2         : 45
estRepCond           : 27
estRepNoCond         : 28
estatuto             : 25
exp                  : 33 41 44 49 49 52 54 64 66 67 68 69 70 71 74 75 81 93
exp2                 : 72
expAND               : 58 63
expAND2              : 61
expOR                : 45 48 60
expOR2               : 58
expresion            : 61
expresion2           : 64
factor               : 82
funcion              : 6
funcion2             : 15
identificadores      : 12 33 36 49 100
identificadores2     : 50
identificadores3     : 52
ids                  : 8 14
ids2                 : 12
lee                  : 30
lee2                 : 35 38
lee3                 : 36
llamada              : 96
llamada2             : 92 95
llamada3             : 93
minus_insert         : 74
opmat                : 87
opmat2               : 82
parametros           : 15
parametros2          : 19 22
parametros3          : 20
plus_insert          : 75
programa             : 0
programa2            : 1
programa3            : 1 6
regresa              : 26
save_id              : 15
set_global           : 1
set_type             : 8
term_op_insert       : 89 90
termino              : 72 89 90
termino2             : 87
tipo                 : 8 18 20
var1                 : 7 11
var2                 : 8
varcte               : 78 79 80
vars                 : 4 15


state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .


state 2

    (1) programa -> PROGRAM . ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . set_global ; programa2 programa3 PRINCIPAL ( ) bloque
    (2) set_global -> .
    ;               reduce using rule 2 (set_global -> .)

    set_global                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID set_global . ; programa2 programa3 PRINCIPAL ( ) bloque
    ;               shift and go to state 5


state 5

    (1) programa -> PROGRAM ID set_global ; . programa2 programa3 PRINCIPAL ( ) bloque
    (3) programa2 -> . empty
    (4) programa2 -> . vars
    (101) empty -> .
    (7) vars -> . VAR var1
    FUNCTION        reduce using rule 101 (empty -> .)
    PRINCIPAL       reduce using rule 101 (empty -> .)
    VAR             shift and go to state 9

    programa2                      shift and go to state 6
    empty                          shift and go to state 7
    vars                           shift and go to state 8

state 6

    (1) programa -> PROGRAM ID set_global ; programa2 . programa3 PRINCIPAL ( ) bloque
    (5) programa3 -> . empty
    (6) programa3 -> . funcion programa3
    (101) empty -> .
    (15) funcion -> . FUNCTION funcion2 ID save_id parametros vars bloque
    PRINCIPAL       reduce using rule 101 (empty -> .)
    FUNCTION        shift and go to state 13

    programa3                      shift and go to state 10
    empty                          shift and go to state 11
    funcion                        shift and go to state 12

state 7

    (3) programa2 -> empty .
    FUNCTION        reduce using rule 3 (programa2 -> empty .)
    PRINCIPAL       reduce using rule 3 (programa2 -> empty .)


state 8

    (4) programa2 -> vars .
    FUNCTION        reduce using rule 4 (programa2 -> vars .)
    PRINCIPAL       reduce using rule 4 (programa2 -> vars .)


state 9

    (7) vars -> VAR . var1
    (8) var1 -> . tipo set_type ids ; var2
    (55) tipo -> . FLOAT
    (56) tipo -> . CHAR
    (57) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    var1                           shift and go to state 14
    tipo                           shift and go to state 15

state 10

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 . PRINCIPAL ( ) bloque
    PRINCIPAL       shift and go to state 19


state 11

    (5) programa3 -> empty .
    PRINCIPAL       reduce using rule 5 (programa3 -> empty .)


state 12

    (6) programa3 -> funcion . programa3
    (5) programa3 -> . empty
    (6) programa3 -> . funcion programa3
    (101) empty -> .
    (15) funcion -> . FUNCTION funcion2 ID save_id parametros vars bloque
    PRINCIPAL       reduce using rule 101 (empty -> .)
    FUNCTION        shift and go to state 13

    funcion                        shift and go to state 12
    programa3                      shift and go to state 20
    empty                          shift and go to state 11

state 13

    (15) funcion -> FUNCTION . funcion2 ID save_id parametros vars bloque
    (17) funcion2 -> . VOID
    (18) funcion2 -> . tipo
    (55) tipo -> . FLOAT
    (56) tipo -> . CHAR
    (57) tipo -> . INT
    VOID            shift and go to state 22
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    funcion2                       shift and go to state 21
    tipo                           shift and go to state 23

state 14

    (7) vars -> VAR var1 .
    FUNCTION        reduce using rule 7 (vars -> VAR var1 .)
    PRINCIPAL       reduce using rule 7 (vars -> VAR var1 .)
    {               reduce using rule 7 (vars -> VAR var1 .)


state 15

    (8) var1 -> tipo . set_type ids ; var2
    (9) set_type -> .
    ID              reduce using rule 9 (set_type -> .)

    set_type                       shift and go to state 24

state 16

    (55) tipo -> FLOAT .
    ID              reduce using rule 55 (tipo -> FLOAT .)


state 17

    (56) tipo -> CHAR .
    ID              reduce using rule 56 (tipo -> CHAR .)


state 18

    (57) tipo -> INT .
    ID              reduce using rule 57 (tipo -> INT .)


state 19

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL . ( ) bloque
    (               shift and go to state 25


state 20

    (6) programa3 -> funcion programa3 .
    PRINCIPAL       reduce using rule 6 (programa3 -> funcion programa3 .)


state 21

    (15) funcion -> FUNCTION funcion2 . ID save_id parametros vars bloque
    ID              shift and go to state 26


state 22

    (17) funcion2 -> VOID .
    ID              reduce using rule 17 (funcion2 -> VOID .)


state 23

    (18) funcion2 -> tipo .
    ID              reduce using rule 18 (funcion2 -> tipo .)


state 24

    (8) var1 -> tipo set_type . ids ; var2
    (12) ids -> . identificadores ids2
    (50) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    ids                            shift and go to state 27
    identificadores                shift and go to state 28

state 25

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( . ) bloque
    )               shift and go to state 30


state 26

    (15) funcion -> FUNCTION funcion2 ID . save_id parametros vars bloque
    (16) save_id -> .
    (               reduce using rule 16 (save_id -> .)

    save_id                        shift and go to state 31

state 27

    (8) var1 -> tipo set_type ids . ; var2
    ;               shift and go to state 32


state 28

    (12) ids -> identificadores . ids2
    (13) ids2 -> . empty
    (14) ids2 -> . , ids
    (101) empty -> .
    ,               shift and go to state 35
    ;               reduce using rule 101 (empty -> .)

    ids2                           shift and go to state 33
    empty                          shift and go to state 34

state 29

    (50) identificadores -> ID . identificadores2
    (51) identificadores2 -> . empty
    (52) identificadores2 -> . [ exp ] identificadores3
    (101) empty -> .
    [               shift and go to state 38
    ,               reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    ASSIGN          reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)

    identificadores2               shift and go to state 36
    empty                          shift and go to state 37

state 30

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 39

state 31

    (15) funcion -> FUNCTION funcion2 ID save_id . parametros vars bloque
    (19) parametros -> . ( parametros2 )
    (               shift and go to state 42

    parametros                     shift and go to state 41

state 32

    (8) var1 -> tipo set_type ids ; . var2
    (10) var2 -> . empty
    (11) var2 -> . var1
    (101) empty -> .
    (8) var1 -> . tipo set_type ids ; var2
    (55) tipo -> . FLOAT
    (56) tipo -> . CHAR
    (57) tipo -> . INT
    FUNCTION        reduce using rule 101 (empty -> .)
    PRINCIPAL       reduce using rule 101 (empty -> .)
    {               reduce using rule 101 (empty -> .)
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    tipo                           shift and go to state 15
    var2                           shift and go to state 43
    empty                          shift and go to state 44
    var1                           shift and go to state 45

state 33

    (12) ids -> identificadores ids2 .
    ;               reduce using rule 12 (ids -> identificadores ids2 .)


state 34

    (13) ids2 -> empty .
    ;               reduce using rule 13 (ids2 -> empty .)


state 35

    (14) ids2 -> , . ids
    (12) ids -> . identificadores ids2
    (50) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    ids                            shift and go to state 46
    identificadores                shift and go to state 28

state 36

    (50) identificadores -> ID identificadores2 .
    ,               reduce using rule 50 (identificadores -> ID identificadores2 .)
    ;               reduce using rule 50 (identificadores -> ID identificadores2 .)
    DETERMINANT     reduce using rule 50 (identificadores -> ID identificadores2 .)
    INVERSE         reduce using rule 50 (identificadores -> ID identificadores2 .)
    TRANSPOSE       reduce using rule 50 (identificadores -> ID identificadores2 .)
    DIVIDE          reduce using rule 50 (identificadores -> ID identificadores2 .)
    TIMES           reduce using rule 50 (identificadores -> ID identificadores2 .)
    MINUS           reduce using rule 50 (identificadores -> ID identificadores2 .)
    PLUS            reduce using rule 50 (identificadores -> ID identificadores2 .)
    ]               reduce using rule 50 (identificadores -> ID identificadores2 .)
    ASSIGN          reduce using rule 50 (identificadores -> ID identificadores2 .)
    )               reduce using rule 50 (identificadores -> ID identificadores2 .)
    NE              reduce using rule 50 (identificadores -> ID identificadores2 .)
    EGT             reduce using rule 50 (identificadores -> ID identificadores2 .)
    ELT             reduce using rule 50 (identificadores -> ID identificadores2 .)
    EQ              reduce using rule 50 (identificadores -> ID identificadores2 .)
    GT              reduce using rule 50 (identificadores -> ID identificadores2 .)
    LT              reduce using rule 50 (identificadores -> ID identificadores2 .)
    AND             reduce using rule 50 (identificadores -> ID identificadores2 .)
    OR              reduce using rule 50 (identificadores -> ID identificadores2 .)
    TO              reduce using rule 50 (identificadores -> ID identificadores2 .)
    DO2             reduce using rule 50 (identificadores -> ID identificadores2 .)


state 37

    (51) identificadores2 -> empty .
    ,               reduce using rule 51 (identificadores2 -> empty .)
    ;               reduce using rule 51 (identificadores2 -> empty .)
    ASSIGN          reduce using rule 51 (identificadores2 -> empty .)
    )               reduce using rule 51 (identificadores2 -> empty .)
    DETERMINANT     reduce using rule 51 (identificadores2 -> empty .)
    INVERSE         reduce using rule 51 (identificadores2 -> empty .)
    TRANSPOSE       reduce using rule 51 (identificadores2 -> empty .)
    DIVIDE          reduce using rule 51 (identificadores2 -> empty .)
    TIMES           reduce using rule 51 (identificadores2 -> empty .)
    MINUS           reduce using rule 51 (identificadores2 -> empty .)
    PLUS            reduce using rule 51 (identificadores2 -> empty .)
    ]               reduce using rule 51 (identificadores2 -> empty .)
    NE              reduce using rule 51 (identificadores2 -> empty .)
    EGT             reduce using rule 51 (identificadores2 -> empty .)
    ELT             reduce using rule 51 (identificadores2 -> empty .)
    EQ              reduce using rule 51 (identificadores2 -> empty .)
    GT              reduce using rule 51 (identificadores2 -> empty .)
    LT              reduce using rule 51 (identificadores2 -> empty .)
    AND             reduce using rule 51 (identificadores2 -> empty .)
    OR              reduce using rule 51 (identificadores2 -> empty .)
    TO              reduce using rule 51 (identificadores2 -> empty .)
    DO2             reduce using rule 51 (identificadores2 -> empty .)


state 38

    (52) identificadores2 -> [ . exp ] identificadores3
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 47
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 39

    (1) programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque .
    $end            reduce using rule 1 (programa -> PROGRAM ID set_global ; programa2 programa3 PRINCIPAL ( ) bloque .)


state 40

    (23) bloque -> { . bloque2 }
    (24) bloque2 -> . empty
    (25) bloque2 -> . estatuto bloque2
    (101) empty -> .
    (26) estatuto -> . regresa
    (27) estatuto -> . estRepCond
    (28) estatuto -> . estRepNoCond
    (29) estatuto -> . estDesicion
    (30) estatuto -> . lee
    (31) estatuto -> . escritura
    (32) estatuto -> . asignacion
    (44) regresa -> . RETURN ( exp ) ;
    (48) estRepCond -> . WHILE ( expOR ) DO bloque
    (49) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (45) estDesicion -> . IF ( expOR ) bloque estDesicion2
    (35) lee -> . PRINT ( lee2 ) ;
    (39) escritura -> . WRITE ( escritura2 ) ;
    (33) asignacion -> . identificadores asignacion_insert_var ASSIGN exp ;
    (50) identificadores -> . ID identificadores2
    }               reduce using rule 101 (empty -> .)
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72
    FROM            shift and go to state 73
    IF              shift and go to state 75
    PRINT           shift and go to state 76
    WRITE           shift and go to state 77
    ID              shift and go to state 29

    bloque2                        shift and go to state 61
    empty                          shift and go to state 62
    estatuto                       shift and go to state 63
    regresa                        shift and go to state 64
    estRepCond                     shift and go to state 65
    estRepNoCond                   shift and go to state 66
    estDesicion                    shift and go to state 67
    lee                            shift and go to state 68
    escritura                      shift and go to state 69
    asignacion                     shift and go to state 70
    identificadores                shift and go to state 74

state 41

    (15) funcion -> FUNCTION funcion2 ID save_id parametros . vars bloque
    (7) vars -> . VAR var1
    VAR             shift and go to state 9

    vars                           shift and go to state 78

state 42

    (19) parametros -> ( . parametros2 )
    (20) parametros2 -> . tipo ID parametros3
    (55) tipo -> . FLOAT
    (56) tipo -> . CHAR
    (57) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    parametros2                    shift and go to state 79
    tipo                           shift and go to state 80

state 43

    (8) var1 -> tipo set_type ids ; var2 .
    FUNCTION        reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)
    PRINCIPAL       reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)
    {               reduce using rule 8 (var1 -> tipo set_type ids ; var2 .)


state 44

    (10) var2 -> empty .
    FUNCTION        reduce using rule 10 (var2 -> empty .)
    PRINCIPAL       reduce using rule 10 (var2 -> empty .)
    {               reduce using rule 10 (var2 -> empty .)


state 45

    (11) var2 -> var1 .
    FUNCTION        reduce using rule 11 (var2 -> var1 .)
    PRINCIPAL       reduce using rule 11 (var2 -> var1 .)
    {               reduce using rule 11 (var2 -> var1 .)


state 46

    (14) ids2 -> , ids .
    ;               reduce using rule 14 (ids2 -> , ids .)


state 47

    (52) identificadores2 -> [ exp . ] identificadores3
    ]               shift and go to state 81


state 48

    (72) exp -> termino . exp2
    (73) exp2 -> . empty
    (74) exp2 -> . MINUS minus_insert exp
    (75) exp2 -> . PLUS plus_insert exp
    (101) empty -> .
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85
    ]               reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)
    ,               reduce using rule 101 (empty -> .)
    NE              reduce using rule 101 (empty -> .)
    EGT             reduce using rule 101 (empty -> .)
    ELT             reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    TO              reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    DO2             reduce using rule 101 (empty -> .)

    exp2                           shift and go to state 82
    empty                          shift and go to state 83

state 49

    (87) termino -> opmat . termino2
    (88) termino2 -> . empty
    (89) termino2 -> . DIVIDE term_op_insert termino
    (90) termino2 -> . TIMES term_op_insert termino
    (101) empty -> .
    DIVIDE          shift and go to state 88
    TIMES           shift and go to state 89
    MINUS           reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    ]               reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)
    ,               reduce using rule 101 (empty -> .)
    NE              reduce using rule 101 (empty -> .)
    EGT             reduce using rule 101 (empty -> .)
    ELT             reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    TO              reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    DO2             reduce using rule 101 (empty -> .)

    termino2                       shift and go to state 86
    empty                          shift and go to state 87

state 50

    (82) opmat -> factor . opmat2
    (83) opmat2 -> . empty
    (84) opmat2 -> . DETERMINANT
    (85) opmat2 -> . INVERSE
    (86) opmat2 -> . TRANSPOSE
    (101) empty -> .
    DETERMINANT     shift and go to state 92
    INVERSE         shift and go to state 93
    TRANSPOSE       shift and go to state 94
    DIVIDE          reduce using rule 101 (empty -> .)
    TIMES           reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    ]               reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)
    ,               reduce using rule 101 (empty -> .)
    NE              reduce using rule 101 (empty -> .)
    EGT             reduce using rule 101 (empty -> .)
    ELT             reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    TO              reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    DO2             reduce using rule 101 (empty -> .)

    opmat2                         shift and go to state 90
    empty                          shift and go to state 91

state 51

    (78) factor -> varcte .
    DETERMINANT     reduce using rule 78 (factor -> varcte .)
    INVERSE         reduce using rule 78 (factor -> varcte .)
    TRANSPOSE       reduce using rule 78 (factor -> varcte .)
    DIVIDE          reduce using rule 78 (factor -> varcte .)
    TIMES           reduce using rule 78 (factor -> varcte .)
    MINUS           reduce using rule 78 (factor -> varcte .)
    PLUS            reduce using rule 78 (factor -> varcte .)
    ]               reduce using rule 78 (factor -> varcte .)
    )               reduce using rule 78 (factor -> varcte .)
    ,               reduce using rule 78 (factor -> varcte .)
    NE              reduce using rule 78 (factor -> varcte .)
    EGT             reduce using rule 78 (factor -> varcte .)
    ELT             reduce using rule 78 (factor -> varcte .)
    EQ              reduce using rule 78 (factor -> varcte .)
    GT              reduce using rule 78 (factor -> varcte .)
    LT              reduce using rule 78 (factor -> varcte .)
    AND             reduce using rule 78 (factor -> varcte .)
    OR              reduce using rule 78 (factor -> varcte .)
    TO              reduce using rule 78 (factor -> varcte .)
    ;               reduce using rule 78 (factor -> varcte .)
    DO2             reduce using rule 78 (factor -> varcte .)


state 52

    (79) factor -> MINUS . varcte
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    varcte                         shift and go to state 95
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 53

    (80) factor -> PLUS . varcte
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    varcte                         shift and go to state 96
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 54

    (81) factor -> ( . exp )
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 97
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 55

    (96) varcte -> llamada .
    DETERMINANT     reduce using rule 96 (varcte -> llamada .)
    INVERSE         reduce using rule 96 (varcte -> llamada .)
    TRANSPOSE       reduce using rule 96 (varcte -> llamada .)
    DIVIDE          reduce using rule 96 (varcte -> llamada .)
    TIMES           reduce using rule 96 (varcte -> llamada .)
    MINUS           reduce using rule 96 (varcte -> llamada .)
    PLUS            reduce using rule 96 (varcte -> llamada .)
    ]               reduce using rule 96 (varcte -> llamada .)
    )               reduce using rule 96 (varcte -> llamada .)
    ,               reduce using rule 96 (varcte -> llamada .)
    NE              reduce using rule 96 (varcte -> llamada .)
    EGT             reduce using rule 96 (varcte -> llamada .)
    ELT             reduce using rule 96 (varcte -> llamada .)
    EQ              reduce using rule 96 (varcte -> llamada .)
    GT              reduce using rule 96 (varcte -> llamada .)
    LT              reduce using rule 96 (varcte -> llamada .)
    AND             reduce using rule 96 (varcte -> llamada .)
    OR              reduce using rule 96 (varcte -> llamada .)
    TO              reduce using rule 96 (varcte -> llamada .)
    ;               reduce using rule 96 (varcte -> llamada .)
    DO2             reduce using rule 96 (varcte -> llamada .)


state 56

    (97) varcte -> FLOATNUMBER .
    DETERMINANT     reduce using rule 97 (varcte -> FLOATNUMBER .)
    INVERSE         reduce using rule 97 (varcte -> FLOATNUMBER .)
    TRANSPOSE       reduce using rule 97 (varcte -> FLOATNUMBER .)
    DIVIDE          reduce using rule 97 (varcte -> FLOATNUMBER .)
    TIMES           reduce using rule 97 (varcte -> FLOATNUMBER .)
    MINUS           reduce using rule 97 (varcte -> FLOATNUMBER .)
    PLUS            reduce using rule 97 (varcte -> FLOATNUMBER .)
    ]               reduce using rule 97 (varcte -> FLOATNUMBER .)
    )               reduce using rule 97 (varcte -> FLOATNUMBER .)
    ,               reduce using rule 97 (varcte -> FLOATNUMBER .)
    NE              reduce using rule 97 (varcte -> FLOATNUMBER .)
    EGT             reduce using rule 97 (varcte -> FLOATNUMBER .)
    ELT             reduce using rule 97 (varcte -> FLOATNUMBER .)
    EQ              reduce using rule 97 (varcte -> FLOATNUMBER .)
    GT              reduce using rule 97 (varcte -> FLOATNUMBER .)
    LT              reduce using rule 97 (varcte -> FLOATNUMBER .)
    AND             reduce using rule 97 (varcte -> FLOATNUMBER .)
    OR              reduce using rule 97 (varcte -> FLOATNUMBER .)
    TO              reduce using rule 97 (varcte -> FLOATNUMBER .)
    ;               reduce using rule 97 (varcte -> FLOATNUMBER .)
    DO2             reduce using rule 97 (varcte -> FLOATNUMBER .)


state 57

    (98) varcte -> CHARACTER .
    DETERMINANT     reduce using rule 98 (varcte -> CHARACTER .)
    INVERSE         reduce using rule 98 (varcte -> CHARACTER .)
    TRANSPOSE       reduce using rule 98 (varcte -> CHARACTER .)
    DIVIDE          reduce using rule 98 (varcte -> CHARACTER .)
    TIMES           reduce using rule 98 (varcte -> CHARACTER .)
    MINUS           reduce using rule 98 (varcte -> CHARACTER .)
    PLUS            reduce using rule 98 (varcte -> CHARACTER .)
    ]               reduce using rule 98 (varcte -> CHARACTER .)
    )               reduce using rule 98 (varcte -> CHARACTER .)
    ,               reduce using rule 98 (varcte -> CHARACTER .)
    NE              reduce using rule 98 (varcte -> CHARACTER .)
    EGT             reduce using rule 98 (varcte -> CHARACTER .)
    ELT             reduce using rule 98 (varcte -> CHARACTER .)
    EQ              reduce using rule 98 (varcte -> CHARACTER .)
    GT              reduce using rule 98 (varcte -> CHARACTER .)
    LT              reduce using rule 98 (varcte -> CHARACTER .)
    AND             reduce using rule 98 (varcte -> CHARACTER .)
    OR              reduce using rule 98 (varcte -> CHARACTER .)
    TO              reduce using rule 98 (varcte -> CHARACTER .)
    ;               reduce using rule 98 (varcte -> CHARACTER .)
    DO2             reduce using rule 98 (varcte -> CHARACTER .)


state 58

    (99) varcte -> INTNUMBER .
    DETERMINANT     reduce using rule 99 (varcte -> INTNUMBER .)
    INVERSE         reduce using rule 99 (varcte -> INTNUMBER .)
    TRANSPOSE       reduce using rule 99 (varcte -> INTNUMBER .)
    DIVIDE          reduce using rule 99 (varcte -> INTNUMBER .)
    TIMES           reduce using rule 99 (varcte -> INTNUMBER .)
    MINUS           reduce using rule 99 (varcte -> INTNUMBER .)
    PLUS            reduce using rule 99 (varcte -> INTNUMBER .)
    ]               reduce using rule 99 (varcte -> INTNUMBER .)
    )               reduce using rule 99 (varcte -> INTNUMBER .)
    ,               reduce using rule 99 (varcte -> INTNUMBER .)
    NE              reduce using rule 99 (varcte -> INTNUMBER .)
    EGT             reduce using rule 99 (varcte -> INTNUMBER .)
    ELT             reduce using rule 99 (varcte -> INTNUMBER .)
    EQ              reduce using rule 99 (varcte -> INTNUMBER .)
    GT              reduce using rule 99 (varcte -> INTNUMBER .)
    LT              reduce using rule 99 (varcte -> INTNUMBER .)
    AND             reduce using rule 99 (varcte -> INTNUMBER .)
    OR              reduce using rule 99 (varcte -> INTNUMBER .)
    TO              reduce using rule 99 (varcte -> INTNUMBER .)
    ;               reduce using rule 99 (varcte -> INTNUMBER .)
    DO2             reduce using rule 99 (varcte -> INTNUMBER .)


state 59

    (100) varcte -> identificadores .
    DETERMINANT     reduce using rule 100 (varcte -> identificadores .)
    INVERSE         reduce using rule 100 (varcte -> identificadores .)
    TRANSPOSE       reduce using rule 100 (varcte -> identificadores .)
    DIVIDE          reduce using rule 100 (varcte -> identificadores .)
    TIMES           reduce using rule 100 (varcte -> identificadores .)
    MINUS           reduce using rule 100 (varcte -> identificadores .)
    PLUS            reduce using rule 100 (varcte -> identificadores .)
    ]               reduce using rule 100 (varcte -> identificadores .)
    )               reduce using rule 100 (varcte -> identificadores .)
    ,               reduce using rule 100 (varcte -> identificadores .)
    NE              reduce using rule 100 (varcte -> identificadores .)
    EGT             reduce using rule 100 (varcte -> identificadores .)
    ELT             reduce using rule 100 (varcte -> identificadores .)
    EQ              reduce using rule 100 (varcte -> identificadores .)
    GT              reduce using rule 100 (varcte -> identificadores .)
    LT              reduce using rule 100 (varcte -> identificadores .)
    AND             reduce using rule 100 (varcte -> identificadores .)
    OR              reduce using rule 100 (varcte -> identificadores .)
    TO              reduce using rule 100 (varcte -> identificadores .)
    ;               reduce using rule 100 (varcte -> identificadores .)
    DO2             reduce using rule 100 (varcte -> identificadores .)


state 60

    (92) llamada -> ID . ( llamada2 )
    (50) identificadores -> ID . identificadores2
    (51) identificadores2 -> . empty
    (52) identificadores2 -> . [ exp ] identificadores3
    (101) empty -> .
    (               shift and go to state 98
    [               shift and go to state 38
    DETERMINANT     reduce using rule 101 (empty -> .)
    INVERSE         reduce using rule 101 (empty -> .)
    TRANSPOSE       reduce using rule 101 (empty -> .)
    DIVIDE          reduce using rule 101 (empty -> .)
    TIMES           reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    ]               reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)
    ,               reduce using rule 101 (empty -> .)
    NE              reduce using rule 101 (empty -> .)
    EGT             reduce using rule 101 (empty -> .)
    ELT             reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    TO              reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    DO2             reduce using rule 101 (empty -> .)

    identificadores2               shift and go to state 36
    empty                          shift and go to state 37

state 61

    (23) bloque -> { bloque2 . }
    }               shift and go to state 99


state 62

    (24) bloque2 -> empty .
    }               reduce using rule 24 (bloque2 -> empty .)


state 63

    (25) bloque2 -> estatuto . bloque2
    (24) bloque2 -> . empty
    (25) bloque2 -> . estatuto bloque2
    (101) empty -> .
    (26) estatuto -> . regresa
    (27) estatuto -> . estRepCond
    (28) estatuto -> . estRepNoCond
    (29) estatuto -> . estDesicion
    (30) estatuto -> . lee
    (31) estatuto -> . escritura
    (32) estatuto -> . asignacion
    (44) regresa -> . RETURN ( exp ) ;
    (48) estRepCond -> . WHILE ( expOR ) DO bloque
    (49) estRepNoCond -> . FROM identificadores ASSIGN exp TO exp DO2 bloque
    (45) estDesicion -> . IF ( expOR ) bloque estDesicion2
    (35) lee -> . PRINT ( lee2 ) ;
    (39) escritura -> . WRITE ( escritura2 ) ;
    (33) asignacion -> . identificadores asignacion_insert_var ASSIGN exp ;
    (50) identificadores -> . ID identificadores2
    }               reduce using rule 101 (empty -> .)
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72
    FROM            shift and go to state 73
    IF              shift and go to state 75
    PRINT           shift and go to state 76
    WRITE           shift and go to state 77
    ID              shift and go to state 29

    estatuto                       shift and go to state 63
    bloque2                        shift and go to state 100
    empty                          shift and go to state 62
    regresa                        shift and go to state 64
    estRepCond                     shift and go to state 65
    estRepNoCond                   shift and go to state 66
    estDesicion                    shift and go to state 67
    lee                            shift and go to state 68
    escritura                      shift and go to state 69
    asignacion                     shift and go to state 70
    identificadores                shift and go to state 74

state 64

    (26) estatuto -> regresa .
    RETURN          reduce using rule 26 (estatuto -> regresa .)
    WHILE           reduce using rule 26 (estatuto -> regresa .)
    FROM            reduce using rule 26 (estatuto -> regresa .)
    IF              reduce using rule 26 (estatuto -> regresa .)
    PRINT           reduce using rule 26 (estatuto -> regresa .)
    WRITE           reduce using rule 26 (estatuto -> regresa .)
    ID              reduce using rule 26 (estatuto -> regresa .)
    }               reduce using rule 26 (estatuto -> regresa .)


state 65

    (27) estatuto -> estRepCond .
    RETURN          reduce using rule 27 (estatuto -> estRepCond .)
    WHILE           reduce using rule 27 (estatuto -> estRepCond .)
    FROM            reduce using rule 27 (estatuto -> estRepCond .)
    IF              reduce using rule 27 (estatuto -> estRepCond .)
    PRINT           reduce using rule 27 (estatuto -> estRepCond .)
    WRITE           reduce using rule 27 (estatuto -> estRepCond .)
    ID              reduce using rule 27 (estatuto -> estRepCond .)
    }               reduce using rule 27 (estatuto -> estRepCond .)


state 66

    (28) estatuto -> estRepNoCond .
    RETURN          reduce using rule 28 (estatuto -> estRepNoCond .)
    WHILE           reduce using rule 28 (estatuto -> estRepNoCond .)
    FROM            reduce using rule 28 (estatuto -> estRepNoCond .)
    IF              reduce using rule 28 (estatuto -> estRepNoCond .)
    PRINT           reduce using rule 28 (estatuto -> estRepNoCond .)
    WRITE           reduce using rule 28 (estatuto -> estRepNoCond .)
    ID              reduce using rule 28 (estatuto -> estRepNoCond .)
    }               reduce using rule 28 (estatuto -> estRepNoCond .)


state 67

    (29) estatuto -> estDesicion .
    RETURN          reduce using rule 29 (estatuto -> estDesicion .)
    WHILE           reduce using rule 29 (estatuto -> estDesicion .)
    FROM            reduce using rule 29 (estatuto -> estDesicion .)
    IF              reduce using rule 29 (estatuto -> estDesicion .)
    PRINT           reduce using rule 29 (estatuto -> estDesicion .)
    WRITE           reduce using rule 29 (estatuto -> estDesicion .)
    ID              reduce using rule 29 (estatuto -> estDesicion .)
    }               reduce using rule 29 (estatuto -> estDesicion .)


state 68

    (30) estatuto -> lee .
    RETURN          reduce using rule 30 (estatuto -> lee .)
    WHILE           reduce using rule 30 (estatuto -> lee .)
    FROM            reduce using rule 30 (estatuto -> lee .)
    IF              reduce using rule 30 (estatuto -> lee .)
    PRINT           reduce using rule 30 (estatuto -> lee .)
    WRITE           reduce using rule 30 (estatuto -> lee .)
    ID              reduce using rule 30 (estatuto -> lee .)
    }               reduce using rule 30 (estatuto -> lee .)


state 69

    (31) estatuto -> escritura .
    RETURN          reduce using rule 31 (estatuto -> escritura .)
    WHILE           reduce using rule 31 (estatuto -> escritura .)
    FROM            reduce using rule 31 (estatuto -> escritura .)
    IF              reduce using rule 31 (estatuto -> escritura .)
    PRINT           reduce using rule 31 (estatuto -> escritura .)
    WRITE           reduce using rule 31 (estatuto -> escritura .)
    ID              reduce using rule 31 (estatuto -> escritura .)
    }               reduce using rule 31 (estatuto -> escritura .)


state 70

    (32) estatuto -> asignacion .
    RETURN          reduce using rule 32 (estatuto -> asignacion .)
    WHILE           reduce using rule 32 (estatuto -> asignacion .)
    FROM            reduce using rule 32 (estatuto -> asignacion .)
    IF              reduce using rule 32 (estatuto -> asignacion .)
    PRINT           reduce using rule 32 (estatuto -> asignacion .)
    WRITE           reduce using rule 32 (estatuto -> asignacion .)
    ID              reduce using rule 32 (estatuto -> asignacion .)
    }               reduce using rule 32 (estatuto -> asignacion .)


state 71

    (44) regresa -> RETURN . ( exp ) ;
    (               shift and go to state 101


state 72

    (48) estRepCond -> WHILE . ( expOR ) DO bloque
    (               shift and go to state 102


state 73

    (49) estRepNoCond -> FROM . identificadores ASSIGN exp TO exp DO2 bloque
    (50) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    identificadores                shift and go to state 103

state 74

    (33) asignacion -> identificadores . asignacion_insert_var ASSIGN exp ;
    (34) asignacion_insert_var -> .
    ASSIGN          reduce using rule 34 (asignacion_insert_var -> .)

    asignacion_insert_var          shift and go to state 104

state 75

    (45) estDesicion -> IF . ( expOR ) bloque estDesicion2
    (               shift and go to state 105


state 76

    (35) lee -> PRINT . ( lee2 ) ;
    (               shift and go to state 106


state 77

    (39) escritura -> WRITE . ( escritura2 ) ;
    (               shift and go to state 107


state 78

    (15) funcion -> FUNCTION funcion2 ID save_id parametros vars . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 108

state 79

    (19) parametros -> ( parametros2 . )
    )               shift and go to state 109


state 80

    (20) parametros2 -> tipo . ID parametros3
    ID              shift and go to state 110


state 81

    (52) identificadores2 -> [ exp ] . identificadores3
    (53) identificadores3 -> . empty
    (54) identificadores3 -> . [ exp ]
    (101) empty -> .
    [               shift and go to state 111
    ,               reduce using rule 101 (empty -> .)
    ;               reduce using rule 101 (empty -> .)
    ASSIGN          reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)
    DETERMINANT     reduce using rule 101 (empty -> .)
    INVERSE         reduce using rule 101 (empty -> .)
    TRANSPOSE       reduce using rule 101 (empty -> .)
    DIVIDE          reduce using rule 101 (empty -> .)
    TIMES           reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    ]               reduce using rule 101 (empty -> .)
    NE              reduce using rule 101 (empty -> .)
    EGT             reduce using rule 101 (empty -> .)
    ELT             reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    TO              reduce using rule 101 (empty -> .)
    DO2             reduce using rule 101 (empty -> .)

    identificadores3               shift and go to state 112
    empty                          shift and go to state 113

state 82

    (72) exp -> termino exp2 .
    ]               reduce using rule 72 (exp -> termino exp2 .)
    )               reduce using rule 72 (exp -> termino exp2 .)
    ,               reduce using rule 72 (exp -> termino exp2 .)
    NE              reduce using rule 72 (exp -> termino exp2 .)
    EGT             reduce using rule 72 (exp -> termino exp2 .)
    ELT             reduce using rule 72 (exp -> termino exp2 .)
    EQ              reduce using rule 72 (exp -> termino exp2 .)
    GT              reduce using rule 72 (exp -> termino exp2 .)
    LT              reduce using rule 72 (exp -> termino exp2 .)
    AND             reduce using rule 72 (exp -> termino exp2 .)
    OR              reduce using rule 72 (exp -> termino exp2 .)
    TO              reduce using rule 72 (exp -> termino exp2 .)
    ;               reduce using rule 72 (exp -> termino exp2 .)
    DO2             reduce using rule 72 (exp -> termino exp2 .)


state 83

    (73) exp2 -> empty .
    ]               reduce using rule 73 (exp2 -> empty .)
    )               reduce using rule 73 (exp2 -> empty .)
    ,               reduce using rule 73 (exp2 -> empty .)
    NE              reduce using rule 73 (exp2 -> empty .)
    EGT             reduce using rule 73 (exp2 -> empty .)
    ELT             reduce using rule 73 (exp2 -> empty .)
    EQ              reduce using rule 73 (exp2 -> empty .)
    GT              reduce using rule 73 (exp2 -> empty .)
    LT              reduce using rule 73 (exp2 -> empty .)
    AND             reduce using rule 73 (exp2 -> empty .)
    OR              reduce using rule 73 (exp2 -> empty .)
    TO              reduce using rule 73 (exp2 -> empty .)
    ;               reduce using rule 73 (exp2 -> empty .)
    DO2             reduce using rule 73 (exp2 -> empty .)


state 84

    (74) exp2 -> MINUS . minus_insert exp
    (77) minus_insert -> .
    MINUS           reduce using rule 77 (minus_insert -> .)
    PLUS            reduce using rule 77 (minus_insert -> .)
    (               reduce using rule 77 (minus_insert -> .)
    FLOATNUMBER     reduce using rule 77 (minus_insert -> .)
    CHARACTER       reduce using rule 77 (minus_insert -> .)
    INTNUMBER       reduce using rule 77 (minus_insert -> .)
    ID              reduce using rule 77 (minus_insert -> .)

    minus_insert                   shift and go to state 114

state 85

    (75) exp2 -> PLUS . plus_insert exp
    (76) plus_insert -> .
    MINUS           reduce using rule 76 (plus_insert -> .)
    PLUS            reduce using rule 76 (plus_insert -> .)
    (               reduce using rule 76 (plus_insert -> .)
    FLOATNUMBER     reduce using rule 76 (plus_insert -> .)
    CHARACTER       reduce using rule 76 (plus_insert -> .)
    INTNUMBER       reduce using rule 76 (plus_insert -> .)
    ID              reduce using rule 76 (plus_insert -> .)

    plus_insert                    shift and go to state 115

state 86

    (87) termino -> opmat termino2 .
    MINUS           reduce using rule 87 (termino -> opmat termino2 .)
    PLUS            reduce using rule 87 (termino -> opmat termino2 .)
    ]               reduce using rule 87 (termino -> opmat termino2 .)
    )               reduce using rule 87 (termino -> opmat termino2 .)
    ,               reduce using rule 87 (termino -> opmat termino2 .)
    NE              reduce using rule 87 (termino -> opmat termino2 .)
    EGT             reduce using rule 87 (termino -> opmat termino2 .)
    ELT             reduce using rule 87 (termino -> opmat termino2 .)
    EQ              reduce using rule 87 (termino -> opmat termino2 .)
    GT              reduce using rule 87 (termino -> opmat termino2 .)
    LT              reduce using rule 87 (termino -> opmat termino2 .)
    AND             reduce using rule 87 (termino -> opmat termino2 .)
    OR              reduce using rule 87 (termino -> opmat termino2 .)
    TO              reduce using rule 87 (termino -> opmat termino2 .)
    ;               reduce using rule 87 (termino -> opmat termino2 .)
    DO2             reduce using rule 87 (termino -> opmat termino2 .)


state 87

    (88) termino2 -> empty .
    MINUS           reduce using rule 88 (termino2 -> empty .)
    PLUS            reduce using rule 88 (termino2 -> empty .)
    ]               reduce using rule 88 (termino2 -> empty .)
    )               reduce using rule 88 (termino2 -> empty .)
    ,               reduce using rule 88 (termino2 -> empty .)
    NE              reduce using rule 88 (termino2 -> empty .)
    EGT             reduce using rule 88 (termino2 -> empty .)
    ELT             reduce using rule 88 (termino2 -> empty .)
    EQ              reduce using rule 88 (termino2 -> empty .)
    GT              reduce using rule 88 (termino2 -> empty .)
    LT              reduce using rule 88 (termino2 -> empty .)
    AND             reduce using rule 88 (termino2 -> empty .)
    OR              reduce using rule 88 (termino2 -> empty .)
    TO              reduce using rule 88 (termino2 -> empty .)
    ;               reduce using rule 88 (termino2 -> empty .)
    DO2             reduce using rule 88 (termino2 -> empty .)


state 88

    (89) termino2 -> DIVIDE . term_op_insert termino
    (91) term_op_insert -> .
    MINUS           reduce using rule 91 (term_op_insert -> .)
    PLUS            reduce using rule 91 (term_op_insert -> .)
    (               reduce using rule 91 (term_op_insert -> .)
    FLOATNUMBER     reduce using rule 91 (term_op_insert -> .)
    CHARACTER       reduce using rule 91 (term_op_insert -> .)
    INTNUMBER       reduce using rule 91 (term_op_insert -> .)
    ID              reduce using rule 91 (term_op_insert -> .)

    term_op_insert                 shift and go to state 116

state 89

    (90) termino2 -> TIMES . term_op_insert termino
    (91) term_op_insert -> .
    MINUS           reduce using rule 91 (term_op_insert -> .)
    PLUS            reduce using rule 91 (term_op_insert -> .)
    (               reduce using rule 91 (term_op_insert -> .)
    FLOATNUMBER     reduce using rule 91 (term_op_insert -> .)
    CHARACTER       reduce using rule 91 (term_op_insert -> .)
    INTNUMBER       reduce using rule 91 (term_op_insert -> .)
    ID              reduce using rule 91 (term_op_insert -> .)

    term_op_insert                 shift and go to state 117

state 90

    (82) opmat -> factor opmat2 .
    DIVIDE          reduce using rule 82 (opmat -> factor opmat2 .)
    TIMES           reduce using rule 82 (opmat -> factor opmat2 .)
    MINUS           reduce using rule 82 (opmat -> factor opmat2 .)
    PLUS            reduce using rule 82 (opmat -> factor opmat2 .)
    ]               reduce using rule 82 (opmat -> factor opmat2 .)
    )               reduce using rule 82 (opmat -> factor opmat2 .)
    ,               reduce using rule 82 (opmat -> factor opmat2 .)
    NE              reduce using rule 82 (opmat -> factor opmat2 .)
    EGT             reduce using rule 82 (opmat -> factor opmat2 .)
    ELT             reduce using rule 82 (opmat -> factor opmat2 .)
    EQ              reduce using rule 82 (opmat -> factor opmat2 .)
    GT              reduce using rule 82 (opmat -> factor opmat2 .)
    LT              reduce using rule 82 (opmat -> factor opmat2 .)
    AND             reduce using rule 82 (opmat -> factor opmat2 .)
    OR              reduce using rule 82 (opmat -> factor opmat2 .)
    TO              reduce using rule 82 (opmat -> factor opmat2 .)
    ;               reduce using rule 82 (opmat -> factor opmat2 .)
    DO2             reduce using rule 82 (opmat -> factor opmat2 .)


state 91

    (83) opmat2 -> empty .
    DIVIDE          reduce using rule 83 (opmat2 -> empty .)
    TIMES           reduce using rule 83 (opmat2 -> empty .)
    MINUS           reduce using rule 83 (opmat2 -> empty .)
    PLUS            reduce using rule 83 (opmat2 -> empty .)
    ]               reduce using rule 83 (opmat2 -> empty .)
    )               reduce using rule 83 (opmat2 -> empty .)
    ,               reduce using rule 83 (opmat2 -> empty .)
    NE              reduce using rule 83 (opmat2 -> empty .)
    EGT             reduce using rule 83 (opmat2 -> empty .)
    ELT             reduce using rule 83 (opmat2 -> empty .)
    EQ              reduce using rule 83 (opmat2 -> empty .)
    GT              reduce using rule 83 (opmat2 -> empty .)
    LT              reduce using rule 83 (opmat2 -> empty .)
    AND             reduce using rule 83 (opmat2 -> empty .)
    OR              reduce using rule 83 (opmat2 -> empty .)
    TO              reduce using rule 83 (opmat2 -> empty .)
    ;               reduce using rule 83 (opmat2 -> empty .)
    DO2             reduce using rule 83 (opmat2 -> empty .)


state 92

    (84) opmat2 -> DETERMINANT .
    DIVIDE          reduce using rule 84 (opmat2 -> DETERMINANT .)
    TIMES           reduce using rule 84 (opmat2 -> DETERMINANT .)
    MINUS           reduce using rule 84 (opmat2 -> DETERMINANT .)
    PLUS            reduce using rule 84 (opmat2 -> DETERMINANT .)
    ]               reduce using rule 84 (opmat2 -> DETERMINANT .)
    )               reduce using rule 84 (opmat2 -> DETERMINANT .)
    ,               reduce using rule 84 (opmat2 -> DETERMINANT .)
    NE              reduce using rule 84 (opmat2 -> DETERMINANT .)
    EGT             reduce using rule 84 (opmat2 -> DETERMINANT .)
    ELT             reduce using rule 84 (opmat2 -> DETERMINANT .)
    EQ              reduce using rule 84 (opmat2 -> DETERMINANT .)
    GT              reduce using rule 84 (opmat2 -> DETERMINANT .)
    LT              reduce using rule 84 (opmat2 -> DETERMINANT .)
    AND             reduce using rule 84 (opmat2 -> DETERMINANT .)
    OR              reduce using rule 84 (opmat2 -> DETERMINANT .)
    TO              reduce using rule 84 (opmat2 -> DETERMINANT .)
    ;               reduce using rule 84 (opmat2 -> DETERMINANT .)
    DO2             reduce using rule 84 (opmat2 -> DETERMINANT .)


state 93

    (85) opmat2 -> INVERSE .
    DIVIDE          reduce using rule 85 (opmat2 -> INVERSE .)
    TIMES           reduce using rule 85 (opmat2 -> INVERSE .)
    MINUS           reduce using rule 85 (opmat2 -> INVERSE .)
    PLUS            reduce using rule 85 (opmat2 -> INVERSE .)
    ]               reduce using rule 85 (opmat2 -> INVERSE .)
    )               reduce using rule 85 (opmat2 -> INVERSE .)
    ,               reduce using rule 85 (opmat2 -> INVERSE .)
    NE              reduce using rule 85 (opmat2 -> INVERSE .)
    EGT             reduce using rule 85 (opmat2 -> INVERSE .)
    ELT             reduce using rule 85 (opmat2 -> INVERSE .)
    EQ              reduce using rule 85 (opmat2 -> INVERSE .)
    GT              reduce using rule 85 (opmat2 -> INVERSE .)
    LT              reduce using rule 85 (opmat2 -> INVERSE .)
    AND             reduce using rule 85 (opmat2 -> INVERSE .)
    OR              reduce using rule 85 (opmat2 -> INVERSE .)
    TO              reduce using rule 85 (opmat2 -> INVERSE .)
    ;               reduce using rule 85 (opmat2 -> INVERSE .)
    DO2             reduce using rule 85 (opmat2 -> INVERSE .)


state 94

    (86) opmat2 -> TRANSPOSE .
    DIVIDE          reduce using rule 86 (opmat2 -> TRANSPOSE .)
    TIMES           reduce using rule 86 (opmat2 -> TRANSPOSE .)
    MINUS           reduce using rule 86 (opmat2 -> TRANSPOSE .)
    PLUS            reduce using rule 86 (opmat2 -> TRANSPOSE .)
    ]               reduce using rule 86 (opmat2 -> TRANSPOSE .)
    )               reduce using rule 86 (opmat2 -> TRANSPOSE .)
    ,               reduce using rule 86 (opmat2 -> TRANSPOSE .)
    NE              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    EGT             reduce using rule 86 (opmat2 -> TRANSPOSE .)
    ELT             reduce using rule 86 (opmat2 -> TRANSPOSE .)
    EQ              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    GT              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    LT              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    AND             reduce using rule 86 (opmat2 -> TRANSPOSE .)
    OR              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    TO              reduce using rule 86 (opmat2 -> TRANSPOSE .)
    ;               reduce using rule 86 (opmat2 -> TRANSPOSE .)
    DO2             reduce using rule 86 (opmat2 -> TRANSPOSE .)


state 95

    (79) factor -> MINUS varcte .
    DETERMINANT     reduce using rule 79 (factor -> MINUS varcte .)
    INVERSE         reduce using rule 79 (factor -> MINUS varcte .)
    TRANSPOSE       reduce using rule 79 (factor -> MINUS varcte .)
    DIVIDE          reduce using rule 79 (factor -> MINUS varcte .)
    TIMES           reduce using rule 79 (factor -> MINUS varcte .)
    MINUS           reduce using rule 79 (factor -> MINUS varcte .)
    PLUS            reduce using rule 79 (factor -> MINUS varcte .)
    ]               reduce using rule 79 (factor -> MINUS varcte .)
    )               reduce using rule 79 (factor -> MINUS varcte .)
    ,               reduce using rule 79 (factor -> MINUS varcte .)
    NE              reduce using rule 79 (factor -> MINUS varcte .)
    EGT             reduce using rule 79 (factor -> MINUS varcte .)
    ELT             reduce using rule 79 (factor -> MINUS varcte .)
    EQ              reduce using rule 79 (factor -> MINUS varcte .)
    GT              reduce using rule 79 (factor -> MINUS varcte .)
    LT              reduce using rule 79 (factor -> MINUS varcte .)
    AND             reduce using rule 79 (factor -> MINUS varcte .)
    OR              reduce using rule 79 (factor -> MINUS varcte .)
    TO              reduce using rule 79 (factor -> MINUS varcte .)
    ;               reduce using rule 79 (factor -> MINUS varcte .)
    DO2             reduce using rule 79 (factor -> MINUS varcte .)


state 96

    (80) factor -> PLUS varcte .
    DETERMINANT     reduce using rule 80 (factor -> PLUS varcte .)
    INVERSE         reduce using rule 80 (factor -> PLUS varcte .)
    TRANSPOSE       reduce using rule 80 (factor -> PLUS varcte .)
    DIVIDE          reduce using rule 80 (factor -> PLUS varcte .)
    TIMES           reduce using rule 80 (factor -> PLUS varcte .)
    MINUS           reduce using rule 80 (factor -> PLUS varcte .)
    PLUS            reduce using rule 80 (factor -> PLUS varcte .)
    ]               reduce using rule 80 (factor -> PLUS varcte .)
    )               reduce using rule 80 (factor -> PLUS varcte .)
    ,               reduce using rule 80 (factor -> PLUS varcte .)
    NE              reduce using rule 80 (factor -> PLUS varcte .)
    EGT             reduce using rule 80 (factor -> PLUS varcte .)
    ELT             reduce using rule 80 (factor -> PLUS varcte .)
    EQ              reduce using rule 80 (factor -> PLUS varcte .)
    GT              reduce using rule 80 (factor -> PLUS varcte .)
    LT              reduce using rule 80 (factor -> PLUS varcte .)
    AND             reduce using rule 80 (factor -> PLUS varcte .)
    OR              reduce using rule 80 (factor -> PLUS varcte .)
    TO              reduce using rule 80 (factor -> PLUS varcte .)
    ;               reduce using rule 80 (factor -> PLUS varcte .)
    DO2             reduce using rule 80 (factor -> PLUS varcte .)


state 97

    (81) factor -> ( exp . )
    )               shift and go to state 118


state 98

    (92) llamada -> ID ( . llamada2 )
    (93) llamada2 -> . exp llamada3
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    llamada2                       shift and go to state 119
    exp                            shift and go to state 120
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 99

    (23) bloque -> { bloque2 } .
    $end            reduce using rule 23 (bloque -> { bloque2 } .)
    FUNCTION        reduce using rule 23 (bloque -> { bloque2 } .)
    PRINCIPAL       reduce using rule 23 (bloque -> { bloque2 } .)
    ELSE            reduce using rule 23 (bloque -> { bloque2 } .)
    RETURN          reduce using rule 23 (bloque -> { bloque2 } .)
    WHILE           reduce using rule 23 (bloque -> { bloque2 } .)
    FROM            reduce using rule 23 (bloque -> { bloque2 } .)
    IF              reduce using rule 23 (bloque -> { bloque2 } .)
    PRINT           reduce using rule 23 (bloque -> { bloque2 } .)
    WRITE           reduce using rule 23 (bloque -> { bloque2 } .)
    ID              reduce using rule 23 (bloque -> { bloque2 } .)
    }               reduce using rule 23 (bloque -> { bloque2 } .)


state 100

    (25) bloque2 -> estatuto bloque2 .
    }               reduce using rule 25 (bloque2 -> estatuto bloque2 .)


state 101

    (44) regresa -> RETURN ( . exp ) ;
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 121
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 102

    (48) estRepCond -> WHILE ( . expOR ) DO bloque
    (58) expOR -> . expAND expOR2
    (61) expAND -> . expresion expAND2
    (64) expresion -> . exp expresion2
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 122
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 103

    (49) estRepNoCond -> FROM identificadores . ASSIGN exp TO exp DO2 bloque
    ASSIGN          shift and go to state 126


state 104

    (33) asignacion -> identificadores asignacion_insert_var . ASSIGN exp ;
    ASSIGN          shift and go to state 127


state 105

    (45) estDesicion -> IF ( . expOR ) bloque estDesicion2
    (58) expOR -> . expAND expOR2
    (61) expAND -> . expresion expAND2
    (64) expresion -> . exp expresion2
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 128
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 106

    (35) lee -> PRINT ( . lee2 ) ;
    (36) lee2 -> . identificadores lee3
    (50) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    lee2                           shift and go to state 129
    identificadores                shift and go to state 130

state 107

    (39) escritura -> WRITE ( . escritura2 ) ;
    (40) escritura2 -> . STRING escritura3
    (41) escritura2 -> . exp escritura3
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    STRING          shift and go to state 132
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    escritura2                     shift and go to state 131
    exp                            shift and go to state 133
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 108

    (15) funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .
    FUNCTION        reduce using rule 15 (funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .)
    PRINCIPAL       reduce using rule 15 (funcion -> FUNCTION funcion2 ID save_id parametros vars bloque .)


state 109

    (19) parametros -> ( parametros2 ) .
    VAR             reduce using rule 19 (parametros -> ( parametros2 ) .)


state 110

    (20) parametros2 -> tipo ID . parametros3
    (21) parametros3 -> . empty
    (22) parametros3 -> . , parametros2
    (101) empty -> .
    ,               shift and go to state 136
    )               reduce using rule 101 (empty -> .)

    parametros3                    shift and go to state 134
    empty                          shift and go to state 135

state 111

    (54) identificadores3 -> [ . exp ]
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 137
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 112

    (52) identificadores2 -> [ exp ] identificadores3 .
    ,               reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    ;               reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    ASSIGN          reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    )               reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    DETERMINANT     reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    INVERSE         reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    TRANSPOSE       reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    DIVIDE          reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    TIMES           reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    MINUS           reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    PLUS            reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    ]               reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    NE              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    EGT             reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    ELT             reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    EQ              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    GT              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    LT              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    AND             reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    OR              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    TO              reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)
    DO2             reduce using rule 52 (identificadores2 -> [ exp ] identificadores3 .)


state 113

    (53) identificadores3 -> empty .
    ,               reduce using rule 53 (identificadores3 -> empty .)
    ;               reduce using rule 53 (identificadores3 -> empty .)
    ASSIGN          reduce using rule 53 (identificadores3 -> empty .)
    )               reduce using rule 53 (identificadores3 -> empty .)
    DETERMINANT     reduce using rule 53 (identificadores3 -> empty .)
    INVERSE         reduce using rule 53 (identificadores3 -> empty .)
    TRANSPOSE       reduce using rule 53 (identificadores3 -> empty .)
    DIVIDE          reduce using rule 53 (identificadores3 -> empty .)
    TIMES           reduce using rule 53 (identificadores3 -> empty .)
    MINUS           reduce using rule 53 (identificadores3 -> empty .)
    PLUS            reduce using rule 53 (identificadores3 -> empty .)
    ]               reduce using rule 53 (identificadores3 -> empty .)
    NE              reduce using rule 53 (identificadores3 -> empty .)
    EGT             reduce using rule 53 (identificadores3 -> empty .)
    ELT             reduce using rule 53 (identificadores3 -> empty .)
    EQ              reduce using rule 53 (identificadores3 -> empty .)
    GT              reduce using rule 53 (identificadores3 -> empty .)
    LT              reduce using rule 53 (identificadores3 -> empty .)
    AND             reduce using rule 53 (identificadores3 -> empty .)
    OR              reduce using rule 53 (identificadores3 -> empty .)
    TO              reduce using rule 53 (identificadores3 -> empty .)
    DO2             reduce using rule 53 (identificadores3 -> empty .)


state 114

    (74) exp2 -> MINUS minus_insert . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 138
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 115

    (75) exp2 -> PLUS plus_insert . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 139
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 116

    (89) termino2 -> DIVIDE term_op_insert . termino
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    termino                        shift and go to state 140
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 117

    (90) termino2 -> TIMES term_op_insert . termino
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    termino                        shift and go to state 141
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 118

    (81) factor -> ( exp ) .
    DETERMINANT     reduce using rule 81 (factor -> ( exp ) .)
    INVERSE         reduce using rule 81 (factor -> ( exp ) .)
    TRANSPOSE       reduce using rule 81 (factor -> ( exp ) .)
    DIVIDE          reduce using rule 81 (factor -> ( exp ) .)
    TIMES           reduce using rule 81 (factor -> ( exp ) .)
    MINUS           reduce using rule 81 (factor -> ( exp ) .)
    PLUS            reduce using rule 81 (factor -> ( exp ) .)
    ]               reduce using rule 81 (factor -> ( exp ) .)
    )               reduce using rule 81 (factor -> ( exp ) .)
    ,               reduce using rule 81 (factor -> ( exp ) .)
    NE              reduce using rule 81 (factor -> ( exp ) .)
    EGT             reduce using rule 81 (factor -> ( exp ) .)
    ELT             reduce using rule 81 (factor -> ( exp ) .)
    EQ              reduce using rule 81 (factor -> ( exp ) .)
    GT              reduce using rule 81 (factor -> ( exp ) .)
    LT              reduce using rule 81 (factor -> ( exp ) .)
    AND             reduce using rule 81 (factor -> ( exp ) .)
    OR              reduce using rule 81 (factor -> ( exp ) .)
    TO              reduce using rule 81 (factor -> ( exp ) .)
    ;               reduce using rule 81 (factor -> ( exp ) .)
    DO2             reduce using rule 81 (factor -> ( exp ) .)


state 119

    (92) llamada -> ID ( llamada2 . )
    )               shift and go to state 142


state 120

    (93) llamada2 -> exp . llamada3
    (94) llamada3 -> . empty
    (95) llamada3 -> . , llamada2
    (101) empty -> .
    ,               shift and go to state 145
    )               reduce using rule 101 (empty -> .)

    llamada3                       shift and go to state 143
    empty                          shift and go to state 144

state 121

    (44) regresa -> RETURN ( exp . ) ;
    )               shift and go to state 146


state 122

    (48) estRepCond -> WHILE ( expOR . ) DO bloque
    )               shift and go to state 147


state 123

    (58) expOR -> expAND . expOR2
    (59) expOR2 -> . empty
    (60) expOR2 -> . OR expOR
    (101) empty -> .
    OR              shift and go to state 150
    )               reduce using rule 101 (empty -> .)

    expOR2                         shift and go to state 148
    empty                          shift and go to state 149

state 124

    (61) expAND -> expresion . expAND2
    (62) expAND2 -> . empty
    (63) expAND2 -> . AND expAND
    (101) empty -> .
    AND             shift and go to state 153
    OR              reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)

    expAND2                        shift and go to state 151
    empty                          shift and go to state 152

state 125

    (64) expresion -> exp . expresion2
    (65) expresion2 -> . empty
    (66) expresion2 -> . NE exp
    (67) expresion2 -> . EGT exp
    (68) expresion2 -> . ELT exp
    (69) expresion2 -> . EQ exp
    (70) expresion2 -> . GT exp
    (71) expresion2 -> . LT exp
    (101) empty -> .
    NE              shift and go to state 156
    EGT             shift and go to state 157
    ELT             shift and go to state 158
    EQ              shift and go to state 159
    GT              shift and go to state 160
    LT              shift and go to state 161
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    )               reduce using rule 101 (empty -> .)

    expresion2                     shift and go to state 154
    empty                          shift and go to state 155

state 126

    (49) estRepNoCond -> FROM identificadores ASSIGN . exp TO exp DO2 bloque
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 162
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 127

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN . exp ;
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 163
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 128

    (45) estDesicion -> IF ( expOR . ) bloque estDesicion2
    )               shift and go to state 164


state 129

    (35) lee -> PRINT ( lee2 . ) ;
    )               shift and go to state 165


state 130

    (36) lee2 -> identificadores . lee3
    (37) lee3 -> . empty
    (38) lee3 -> . , lee2
    (101) empty -> .
    ,               shift and go to state 168
    )               reduce using rule 101 (empty -> .)

    lee3                           shift and go to state 166
    empty                          shift and go to state 167

state 131

    (39) escritura -> WRITE ( escritura2 . ) ;
    )               shift and go to state 169


state 132

    (40) escritura2 -> STRING . escritura3
    (42) escritura3 -> . empty
    (43) escritura3 -> . , escritura2
    (101) empty -> .
    ,               shift and go to state 172
    )               reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 170
    empty                          shift and go to state 171

state 133

    (41) escritura2 -> exp . escritura3
    (42) escritura3 -> . empty
    (43) escritura3 -> . , escritura2
    (101) empty -> .
    ,               shift and go to state 172
    )               reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 173
    empty                          shift and go to state 171

state 134

    (20) parametros2 -> tipo ID parametros3 .
    )               reduce using rule 20 (parametros2 -> tipo ID parametros3 .)


state 135

    (21) parametros3 -> empty .
    )               reduce using rule 21 (parametros3 -> empty .)


state 136

    (22) parametros3 -> , . parametros2
    (20) parametros2 -> . tipo ID parametros3
    (55) tipo -> . FLOAT
    (56) tipo -> . CHAR
    (57) tipo -> . INT
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    INT             shift and go to state 18

    parametros2                    shift and go to state 174
    tipo                           shift and go to state 80

state 137

    (54) identificadores3 -> [ exp . ]
    ]               shift and go to state 175


state 138

    (74) exp2 -> MINUS minus_insert exp .
    ]               reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    )               reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    ,               reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    NE              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    EGT             reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    ELT             reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    EQ              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    GT              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    LT              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    AND             reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    OR              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    TO              reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    ;               reduce using rule 74 (exp2 -> MINUS minus_insert exp .)
    DO2             reduce using rule 74 (exp2 -> MINUS minus_insert exp .)


state 139

    (75) exp2 -> PLUS plus_insert exp .
    ]               reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    )               reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    ,               reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    NE              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    EGT             reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    ELT             reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    EQ              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    GT              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    LT              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    AND             reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    OR              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    TO              reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    ;               reduce using rule 75 (exp2 -> PLUS plus_insert exp .)
    DO2             reduce using rule 75 (exp2 -> PLUS plus_insert exp .)


state 140

    (89) termino2 -> DIVIDE term_op_insert termino .
    MINUS           reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    PLUS            reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    ]               reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    )               reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    ,               reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    NE              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    EGT             reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    ELT             reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    EQ              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    GT              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    LT              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    AND             reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    OR              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    TO              reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    ;               reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)
    DO2             reduce using rule 89 (termino2 -> DIVIDE term_op_insert termino .)


state 141

    (90) termino2 -> TIMES term_op_insert termino .
    MINUS           reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    PLUS            reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    ]               reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    )               reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    ,               reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    NE              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    EGT             reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    ELT             reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    EQ              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    GT              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    LT              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    AND             reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    OR              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    TO              reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    ;               reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)
    DO2             reduce using rule 90 (termino2 -> TIMES term_op_insert termino .)


state 142

    (92) llamada -> ID ( llamada2 ) .
    DETERMINANT     reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    INVERSE         reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    TRANSPOSE       reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    DIVIDE          reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    TIMES           reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    MINUS           reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    PLUS            reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    ]               reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    )               reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    ,               reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    NE              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    EGT             reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    ELT             reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    EQ              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    GT              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    LT              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    AND             reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    OR              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    TO              reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    ;               reduce using rule 92 (llamada -> ID ( llamada2 ) .)
    DO2             reduce using rule 92 (llamada -> ID ( llamada2 ) .)


state 143

    (93) llamada2 -> exp llamada3 .
    )               reduce using rule 93 (llamada2 -> exp llamada3 .)


state 144

    (94) llamada3 -> empty .
    )               reduce using rule 94 (llamada3 -> empty .)


state 145

    (95) llamada3 -> , . llamada2
    (93) llamada2 -> . exp llamada3
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    llamada2                       shift and go to state 176
    exp                            shift and go to state 120
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 146

    (44) regresa -> RETURN ( exp ) . ;
    ;               shift and go to state 177


state 147

    (48) estRepCond -> WHILE ( expOR ) . DO bloque
    DO              shift and go to state 178


state 148

    (58) expOR -> expAND expOR2 .
    )               reduce using rule 58 (expOR -> expAND expOR2 .)


state 149

    (59) expOR2 -> empty .
    )               reduce using rule 59 (expOR2 -> empty .)


state 150

    (60) expOR2 -> OR . expOR
    (58) expOR -> . expAND expOR2
    (61) expAND -> . expresion expAND2
    (64) expresion -> . exp expresion2
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expOR                          shift and go to state 179
    expAND                         shift and go to state 123
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 151

    (61) expAND -> expresion expAND2 .
    OR              reduce using rule 61 (expAND -> expresion expAND2 .)
    )               reduce using rule 61 (expAND -> expresion expAND2 .)


state 152

    (62) expAND2 -> empty .
    OR              reduce using rule 62 (expAND2 -> empty .)
    )               reduce using rule 62 (expAND2 -> empty .)


state 153

    (63) expAND2 -> AND . expAND
    (61) expAND -> . expresion expAND2
    (64) expresion -> . exp expresion2
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    expAND                         shift and go to state 180
    expresion                      shift and go to state 124
    exp                            shift and go to state 125
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 154

    (64) expresion -> exp expresion2 .
    AND             reduce using rule 64 (expresion -> exp expresion2 .)
    OR              reduce using rule 64 (expresion -> exp expresion2 .)
    )               reduce using rule 64 (expresion -> exp expresion2 .)


state 155

    (65) expresion2 -> empty .
    AND             reduce using rule 65 (expresion2 -> empty .)
    OR              reduce using rule 65 (expresion2 -> empty .)
    )               reduce using rule 65 (expresion2 -> empty .)


state 156

    (66) expresion2 -> NE . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 181
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 157

    (67) expresion2 -> EGT . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 182
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 158

    (68) expresion2 -> ELT . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 183
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 159

    (69) expresion2 -> EQ . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 184
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 160

    (70) expresion2 -> GT . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 185
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 161

    (71) expresion2 -> LT . exp
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    exp                            shift and go to state 186
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 162

    (49) estRepNoCond -> FROM identificadores ASSIGN exp . TO exp DO2 bloque
    TO              shift and go to state 187


state 163

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN exp . ;
    ;               shift and go to state 188


state 164

    (45) estDesicion -> IF ( expOR ) . bloque estDesicion2
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 189

state 165

    (35) lee -> PRINT ( lee2 ) . ;
    ;               shift and go to state 190


state 166

    (36) lee2 -> identificadores lee3 .
    )               reduce using rule 36 (lee2 -> identificadores lee3 .)


state 167

    (37) lee3 -> empty .
    )               reduce using rule 37 (lee3 -> empty .)


state 168

    (38) lee3 -> , . lee2
    (36) lee2 -> . identificadores lee3
    (50) identificadores -> . ID identificadores2
    ID              shift and go to state 29

    lee2                           shift and go to state 191
    identificadores                shift and go to state 130

state 169

    (39) escritura -> WRITE ( escritura2 ) . ;
    ;               shift and go to state 192


state 170

    (40) escritura2 -> STRING escritura3 .
    )               reduce using rule 40 (escritura2 -> STRING escritura3 .)


state 171

    (42) escritura3 -> empty .
    )               reduce using rule 42 (escritura3 -> empty .)


state 172

    (43) escritura3 -> , . escritura2
    (40) escritura2 -> . STRING escritura3
    (41) escritura2 -> . exp escritura3
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    STRING          shift and go to state 132
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    escritura2                     shift and go to state 193
    exp                            shift and go to state 133
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55
    identificadores                shift and go to state 59

state 173

    (41) escritura2 -> exp escritura3 .
    )               reduce using rule 41 (escritura2 -> exp escritura3 .)


state 174

    (22) parametros3 -> , parametros2 .
    )               reduce using rule 22 (parametros3 -> , parametros2 .)


state 175

    (54) identificadores3 -> [ exp ] .
    ,               reduce using rule 54 (identificadores3 -> [ exp ] .)
    ;               reduce using rule 54 (identificadores3 -> [ exp ] .)
    ASSIGN          reduce using rule 54 (identificadores3 -> [ exp ] .)
    )               reduce using rule 54 (identificadores3 -> [ exp ] .)
    DETERMINANT     reduce using rule 54 (identificadores3 -> [ exp ] .)
    INVERSE         reduce using rule 54 (identificadores3 -> [ exp ] .)
    TRANSPOSE       reduce using rule 54 (identificadores3 -> [ exp ] .)
    DIVIDE          reduce using rule 54 (identificadores3 -> [ exp ] .)
    TIMES           reduce using rule 54 (identificadores3 -> [ exp ] .)
    MINUS           reduce using rule 54 (identificadores3 -> [ exp ] .)
    PLUS            reduce using rule 54 (identificadores3 -> [ exp ] .)
    ]               reduce using rule 54 (identificadores3 -> [ exp ] .)
    NE              reduce using rule 54 (identificadores3 -> [ exp ] .)
    EGT             reduce using rule 54 (identificadores3 -> [ exp ] .)
    ELT             reduce using rule 54 (identificadores3 -> [ exp ] .)
    EQ              reduce using rule 54 (identificadores3 -> [ exp ] .)
    GT              reduce using rule 54 (identificadores3 -> [ exp ] .)
    LT              reduce using rule 54 (identificadores3 -> [ exp ] .)
    AND             reduce using rule 54 (identificadores3 -> [ exp ] .)
    OR              reduce using rule 54 (identificadores3 -> [ exp ] .)
    TO              reduce using rule 54 (identificadores3 -> [ exp ] .)
    DO2             reduce using rule 54 (identificadores3 -> [ exp ] .)


state 176

    (95) llamada3 -> , llamada2 .
    )               reduce using rule 95 (llamada3 -> , llamada2 .)


state 177

    (44) regresa -> RETURN ( exp ) ; .
    RETURN          reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    WHILE           reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    FROM            reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    IF              reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    PRINT           reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    WRITE           reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    ID              reduce using rule 44 (regresa -> RETURN ( exp ) ; .)
    }               reduce using rule 44 (regresa -> RETURN ( exp ) ; .)


state 178

    (48) estRepCond -> WHILE ( expOR ) DO . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 194

state 179

    (60) expOR2 -> OR expOR .
    )               reduce using rule 60 (expOR2 -> OR expOR .)


state 180

    (63) expAND2 -> AND expAND .
    OR              reduce using rule 63 (expAND2 -> AND expAND .)
    )               reduce using rule 63 (expAND2 -> AND expAND .)


state 181

    (66) expresion2 -> NE exp .
    AND             reduce using rule 66 (expresion2 -> NE exp .)
    OR              reduce using rule 66 (expresion2 -> NE exp .)
    )               reduce using rule 66 (expresion2 -> NE exp .)


state 182

    (67) expresion2 -> EGT exp .
    AND             reduce using rule 67 (expresion2 -> EGT exp .)
    OR              reduce using rule 67 (expresion2 -> EGT exp .)
    )               reduce using rule 67 (expresion2 -> EGT exp .)


state 183

    (68) expresion2 -> ELT exp .
    AND             reduce using rule 68 (expresion2 -> ELT exp .)
    OR              reduce using rule 68 (expresion2 -> ELT exp .)
    )               reduce using rule 68 (expresion2 -> ELT exp .)


state 184

    (69) expresion2 -> EQ exp .
    AND             reduce using rule 69 (expresion2 -> EQ exp .)
    OR              reduce using rule 69 (expresion2 -> EQ exp .)
    )               reduce using rule 69 (expresion2 -> EQ exp .)


state 185

    (70) expresion2 -> GT exp .
    AND             reduce using rule 70 (expresion2 -> GT exp .)
    OR              reduce using rule 70 (expresion2 -> GT exp .)
    )               reduce using rule 70 (expresion2 -> GT exp .)


state 186

    (71) expresion2 -> LT exp .
    AND             reduce using rule 71 (expresion2 -> LT exp .)
    OR              reduce using rule 71 (expresion2 -> LT exp .)
    )               reduce using rule 71 (expresion2 -> LT exp .)


state 187

    (49) estRepNoCond -> FROM identificadores ASSIGN exp TO . exp DO2 bloque
    (72) exp -> . termino exp2
    (87) termino -> . opmat termino2
    (82) opmat -> . factor opmat2
    (78) factor -> . varcte
    (79) factor -> . MINUS varcte
    (80) factor -> . PLUS varcte
    (81) factor -> . ( exp )
    (96) varcte -> . llamada
    (97) varcte -> . FLOATNUMBER
    (98) varcte -> . CHARACTER
    (99) varcte -> . INTNUMBER
    (100) varcte -> . identificadores
    (92) llamada -> . ID ( llamada2 )
    (50) identificadores -> . ID identificadores2
    MINUS           shift and go to state 52
    PLUS            shift and go to state 53
    (               shift and go to state 54
    FLOATNUMBER     shift and go to state 56
    CHARACTER       shift and go to state 57
    INTNUMBER       shift and go to state 58
    ID              shift and go to state 60

    identificadores                shift and go to state 59
    exp                            shift and go to state 195
    termino                        shift and go to state 48
    opmat                          shift and go to state 49
    factor                         shift and go to state 50
    varcte                         shift and go to state 51
    llamada                        shift and go to state 55

state 188

    (33) asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .
    RETURN          reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    WHILE           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    FROM            reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    IF              reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    PRINT           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    WRITE           reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    ID              reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)
    }               reduce using rule 33 (asignacion -> identificadores asignacion_insert_var ASSIGN exp ; .)


state 189

    (45) estDesicion -> IF ( expOR ) bloque . estDesicion2
    (46) estDesicion2 -> . empty
    (47) estDesicion2 -> . ELSE bloque
    (101) empty -> .
    ELSE            shift and go to state 198
    RETURN          reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FROM            reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    WRITE           reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    }               reduce using rule 101 (empty -> .)

    estDesicion2                   shift and go to state 196
    empty                          shift and go to state 197

state 190

    (35) lee -> PRINT ( lee2 ) ; .
    RETURN          reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    WHILE           reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    FROM            reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    IF              reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    PRINT           reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    WRITE           reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    ID              reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)
    }               reduce using rule 35 (lee -> PRINT ( lee2 ) ; .)


state 191

    (38) lee3 -> , lee2 .
    )               reduce using rule 38 (lee3 -> , lee2 .)


state 192

    (39) escritura -> WRITE ( escritura2 ) ; .
    RETURN          reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    WHILE           reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    FROM            reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    IF              reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    PRINT           reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    WRITE           reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    ID              reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)
    }               reduce using rule 39 (escritura -> WRITE ( escritura2 ) ; .)


state 193

    (43) escritura3 -> , escritura2 .
    )               reduce using rule 43 (escritura3 -> , escritura2 .)


state 194

    (48) estRepCond -> WHILE ( expOR ) DO bloque .
    RETURN          reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WHILE           reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    FROM            reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    IF              reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    PRINT           reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    WRITE           reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    ID              reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)
    }               reduce using rule 48 (estRepCond -> WHILE ( expOR ) DO bloque .)


state 195

    (49) estRepNoCond -> FROM identificadores ASSIGN exp TO exp . DO2 bloque
    DO2             shift and go to state 199


state 196

    (45) estDesicion -> IF ( expOR ) bloque estDesicion2 .
    RETURN          reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    WHILE           reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    FROM            reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    IF              reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    PRINT           reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    WRITE           reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    ID              reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)
    }               reduce using rule 45 (estDesicion -> IF ( expOR ) bloque estDesicion2 .)


state 197

    (46) estDesicion2 -> empty .
    RETURN          reduce using rule 46 (estDesicion2 -> empty .)
    WHILE           reduce using rule 46 (estDesicion2 -> empty .)
    FROM            reduce using rule 46 (estDesicion2 -> empty .)
    IF              reduce using rule 46 (estDesicion2 -> empty .)
    PRINT           reduce using rule 46 (estDesicion2 -> empty .)
    WRITE           reduce using rule 46 (estDesicion2 -> empty .)
    ID              reduce using rule 46 (estDesicion2 -> empty .)
    }               reduce using rule 46 (estDesicion2 -> empty .)


state 198

    (47) estDesicion2 -> ELSE . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 200

state 199

    (49) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 . bloque
    (23) bloque -> . { bloque2 }
    {               shift and go to state 40

    bloque                         shift and go to state 201

state 200

    (47) estDesicion2 -> ELSE bloque .
    RETURN          reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    WHILE           reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    FROM            reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    IF              reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    PRINT           reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    WRITE           reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    ID              reduce using rule 47 (estDesicion2 -> ELSE bloque .)
    }               reduce using rule 47 (estDesicion2 -> ELSE bloque .)


state 201

    (49) estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .
    RETURN          reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WHILE           reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    FROM            reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    IF              reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    PRINT           reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    WRITE           reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    ID              reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
    }               reduce using rule 49 (estRepNoCond -> FROM identificadores ASSIGN exp TO exp DO2 bloque .)
